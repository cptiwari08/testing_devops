IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [Suggestions] (
    [ID] int NOT NULL IDENTITY,
    [Source] nvarchar(max) NOT NULL,
    [SuggestionText] nvarchar(max) NOT NULL,
    [AppAffinity] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [UpdatedAt] datetime2 NOT NULL,
    [CreatedBy] nvarchar(max) NULL,
    [UpdatedBy] nvarchar(max) NULL,
    [AnswerSQL] nvarchar(max) NULL,
    CONSTRAINT [PK_Suggestions] PRIMARY KEY ([ID])
);
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Suggestions]'))
    SET IDENTITY_INSERT [Suggestions] ON;
INSERT INTO [Suggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy])
VALUES (1, N'', N'CE4-PMO', '2024-04-03T19:13:16.3927940+05:30', N'System', N'projectdoc', N'What is the governance structure for this project?', '2024-04-03T19:13:16.3927959+05:30', N'System'),
(2, N'', N'CE4-PMO', '2024-04-03T19:13:16.3927965+05:30', N'System', N'projectdoc', N'List out various recurring meetings along with cadence', '2024-04-03T19:13:16.3927965+05:30', N'System'),
(3, N'', N'CE4-PMO', '2024-04-03T19:13:16.3927967+05:30', N'System', N'projectdoc', N'What are key dates for this project?', '2024-04-03T19:13:16.3927968+05:30', N'System'),
(4, N'', N'CE4-PMO', '2024-04-03T19:13:16.3927969+05:30', N'System', N'projectdoc', N'What do we know about the target and buyer for this project?', '2024-04-03T19:13:16.3927970+05:30', N'System'),
(5, N'', N'CE4-PMO', '2024-04-03T19:13:16.3927971+05:30', N'System', N'projectdoc', N'What is EY’s scope of work?', '2024-04-03T19:13:16.3927972+05:30', N'System'),
(6, N'', N'CE4-PMO', '2024-04-03T19:13:16.3927975+05:30', N'System', N'projectdoc', N'Who is the program sponsor for this project?', '2024-04-03T19:13:16.3927975+05:30', N'System'),
(7, N'', N'CE4-VC', '2024-04-03T19:13:16.3927978+05:30', N'System', N'projectdoc', N'What is the governance structure for this project?', '2024-04-03T19:13:16.3927979+05:30', N'System'),
(8, N'', N'CE4-VC', '2024-04-03T19:13:16.3927980+05:30', N'System', N'projectdoc', N'List out various recurring meetings along with cadence', '2024-04-03T19:13:16.3927981+05:30', N'System'),
(9, N'', N'CE4-VC', '2024-04-03T19:13:16.3927983+05:30', N'System', N'projectdoc', N'What are key dates for this project?', '2024-04-03T19:13:16.3927983+05:30', N'System'),
(10, N'', N'CE4-VC', '2024-04-03T19:13:16.3927986+05:30', N'System', N'projectdoc', N'What do we know about the target and buyer for this project?', '2024-04-03T19:13:16.3927987+05:30', N'System'),
(11, N'', N'CE4-VC', '2024-04-03T19:13:16.3927988+05:30', N'System', N'projectdoc', N'What is EY’s scope of work ?', '2024-04-03T19:13:16.3927989+05:30', N'System'),
(12, N'', N'CE4-VC', '2024-04-03T19:13:16.3927990+05:30', N'System', N'projectdoc', N'Who is the program sponsor for this project ?', '2024-04-03T19:13:16.3927991+05:30', N'System'),
(13, N'', N'CE4-OM', '2024-04-03T19:13:16.3927992+05:30', N'System', N'projectdoc', N'What is the governance structure for this project?', '2024-04-03T19:13:16.3927993+05:30', N'System'),
(14, N'', N'CE4-OM', '2024-04-03T19:13:16.3927995+05:30', N'System', N'projectdoc', N'List out various recurring meetings along with cadence', '2024-04-03T19:13:16.3927995+05:30', N'System'),
(15, N'', N'CE4-OM', '2024-04-03T19:13:16.3927997+05:30', N'System', N'projectdoc', N'What are key dates for this project?', '2024-04-03T19:13:16.3927997+05:30', N'System'),
(16, N'', N'CE4-OM', '2024-04-03T19:13:16.3927999+05:30', N'System', N'projectdoc', N'What do we know about the target and buyer for this project?', '2024-04-03T19:13:16.3927999+05:30', N'System'),
(17, N'', N'CE4-OM', '2024-04-03T19:13:16.3928001+05:30', N'System', N'projectdoc', N'What is EY’s scope of work ?', '2024-04-03T19:13:16.3928001+05:30', N'System'),
(18, N'', N'CE4-OM', '2024-04-03T19:13:16.3928095+05:30', N'System', N'projectdoc', N'Who is the program sponsor for this project ?', '2024-04-03T19:13:16.3928096+05:30', N'System'),
(19, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928098+05:30', N'System', N'projectdoc', N'What is the governance structure for this project?', '2024-04-03T19:13:16.3928099+05:30', N'System'),
(20, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928100+05:30', N'System', N'projectdoc', N'List out various recurring meetings along with cadence', '2024-04-03T19:13:16.3928101+05:30', N'System'),
(21, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928102+05:30', N'System', N'projectdoc', N'What are key dates for this project?', '2024-04-03T19:13:16.3928103+05:30', N'System'),
(22, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928104+05:30', N'System', N'projectdoc', N'What do we know about the target and buyer for this project?', '2024-04-03T19:13:16.3928105+05:30', N'System'),
(23, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928106+05:30', N'System', N'projectdoc', N'What is EY’s scope of work ?', '2024-04-03T19:13:16.3928107+05:30', N'System'),
(24, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928108+05:30', N'System', N'projectdoc', N'Who is the program sponsor for this project ?', '2024-04-03T19:13:16.3928109+05:30', N'System'),
(25, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928111+05:30', N'System', N'projectdata', N'How many milestones does each team have?', '2024-04-03T19:13:16.3928112+05:30', N'System'),
(26, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928113+05:30', N'System', N'projectdata', N'How many risks does each team have?', '2024-04-03T19:13:16.3928114+05:30', N'System'),
(27, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928115+05:30', N'System', N'projectdata', N'How many dependencies does each team have?', '2024-04-03T19:13:16.3928116+05:30', N'System'),
(28, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928117+05:30', N'System', N'projectdata', N'Which risks/issues have the most impact on the workplan?', '2024-04-03T19:13:16.3928118+05:30', N'System'),
(29, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928119+05:30', N'System', N'projectdata', N'List out behind schedule milestones', '2024-04-03T19:13:16.3928120+05:30', N'System'),
(30, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928121+05:30', N'System', N'projectdata', N'List out behind schedule risks', '2024-04-03T19:13:16.3928122+05:30', N'System'),
(31, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928123+05:30', N'System', N'projectdata', N'List out behind schedule dependencies', '2024-04-03T19:13:16.3928124+05:30', N'System'),
(32, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928125+05:30', N'System', N'projectdata', N'How many milestones were assigned to me this week?', '2024-04-03T19:13:16.3928126+05:30', N'System'),
(33, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928127+05:30', N'System', N'projectdata', N'How many risks were assigned to me this week?', '2024-04-03T19:13:16.3928128+05:30', N'System'),
(34, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928131+05:30', N'System', N'projectdata', N'How many dependencies were assigned to me this week?', '2024-04-03T19:13:16.3928132+05:30', N'System'),
(35, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928133+05:30', N'System', N'projectdata', N'How many of my milestones are due this week?', '2024-04-03T19:13:16.3928134+05:30', N'System'),
(36, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928135+05:30', N'System', N'projectdata', N'How many risks are due this week?', '2024-04-03T19:13:16.3928136+05:30', N'System'),
(37, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928137+05:30', N'System', N'projectdata', N'How many dependencies are due this week?', '2024-04-03T19:13:16.3928138+05:30', N'System'),
(38, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928139+05:30', N'System', N'projectdata', N'Which project team has the most overdue milestones?', '2024-04-03T19:13:16.3928140+05:30', N'System'),
(39, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928142+05:30', N'System', N'projectdata', N'Which project team has the most overdue risks?', '2024-04-03T19:13:16.3928143+05:30', N'System'),
(40, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928144+05:30', N'System', N'projectdata', N'Which project team has the most overdue dependencies?', '2024-04-03T19:13:16.3928145+05:30', N'System'),
(41, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928146+05:30', N'System', N'projectdata', N'Show me open risks broken down by impact and probability', '2024-04-03T19:13:16.3928147+05:30', N'System'),
(42, N'', N'CE4-VC', '2024-04-03T19:13:16.3928148+05:30', N'System', N'projectdata', N'What are our targets for this engagement?', '2024-04-03T19:13:16.3928149+05:30', N'System');
INSERT INTO [Suggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy])
VALUES (43, N'', N'CE4-VC', '2024-04-03T19:13:16.3928150+05:30', N'System', N'projectdata', N'How much value are we planning to achieve from our initiatives?', '2024-04-03T19:13:16.3928151+05:30', N'System'),
(44, N'', N'CE4-VC', '2024-04-03T19:13:16.3928152+05:30', N'System', N'projectdata', N'How much value have we already achieved from our initiatives?', '2024-04-03T19:13:16.3928153+05:30', N'System'),
(45, N'', N'CE4-VC', '2024-04-03T19:13:16.3928155+05:30', N'System', N'projectdata', N'How are my initiatives doing?', '2024-04-03T19:13:16.3928155+05:30', N'System'),
(46, N'', N'CE4-VC', '2024-04-03T19:13:16.3928157+05:30', N'System', N'projectdata', N'Are there any risks or issues with initiatives that I’m responsible for?', '2024-04-03T19:13:16.3928157+05:30', N'System'),
(47, N'', N'CE4-VC', '2024-04-03T19:13:16.3928159+05:30', N'System', N'projectdata', N'Which initiatives have fallen off track?', '2024-04-03T19:13:16.3928160+05:30', N'System'),
(48, N'', N'CE4-VC', '2024-04-03T19:13:16.3928161+05:30', N'System', N'projectdata', N'Are our initiative projections exceeding our targets?', '2024-04-03T19:13:16.3928162+05:30', N'System'),
(49, N'', N'CE4-VC', '2024-04-03T19:13:16.3928163+05:30', N'System', N'projectdata', N'How will these initiatives impact the PnL?', '2024-04-03T19:13:16.3928164+05:30', N'System'),
(50, N'', N'CE4-OM', '2024-04-03T19:13:16.3928165+05:30', N'System', N'projectdata', N'Provide a summary of Day 1 process dispositions.', '2024-04-03T19:13:16.3928166+05:30', N'System'),
(51, N'', N'CE4-OM', '2024-04-03T19:13:16.3928167+05:30', N'System', N'projectdata', N'How many systems are tagged to Current State processes?', '2024-04-03T19:13:16.3928168+05:30', N'System'),
(52, N'', N'CE4-OM', '2024-04-03T19:13:16.3928169+05:30', N'System', N'projectdata', N'How many systems are tagged to Day 1 processes?', '2024-04-03T19:13:16.3928170+05:30', N'System'),
(53, N'', N'CE4-OM', '2024-04-03T19:13:16.3928171+05:30', N'System', N'projectdata', N'What team has the most Current State processes?', '2024-04-03T19:13:16.3928172+05:30', N'System'),
(54, N'', N'CE4-OM', '2024-04-03T19:13:16.3928173+05:30', N'System', N'projectdata', N'What team has the most Day 1 processes?', '2024-04-03T19:13:16.3928174+05:30', N'System'),
(55, N'', N'CE4-OM', '2024-04-03T19:13:16.3928175+05:30', N'System', N'projectdata', N'What are some of the processes that have High impact Risk/Issue linked?', '2024-04-03T19:13:16.3928176+05:30', N'System'),
(56, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928178+05:30', N'System', N'projectdata', N'What are the corporate functions typically involved in the ${Sector} sector?', '2024-04-03T19:13:16.3928179+05:30', N'System'),
(57, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928180+05:30', N'System', N'projectdata', N'What are the typical services of the Sales and Marketing function?', '2024-04-03T19:13:16.3928181+05:30', N'System'),
(58, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928182+05:30', N'System', N'projectdata', N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.', '2024-04-03T19:13:16.3928183+05:30', N'System'),
(59, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928184+05:30', N'System', N'projectdata', N'Show me the count of TSAs by function.', '2024-04-03T19:13:16.3928185+05:30', N'System'),
(60, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928186+05:30', N'System', N'projectdata', N'Show me the count of TSAs by sub function.', '2024-04-03T19:13:16.3928187+05:30', N'System'),
(61, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928188+05:30', N'System', N'projectdata', N'Show me the count of TSAs by region.', '2024-04-03T19:13:16.3928189+05:30', N'System'),
(62, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928190+05:30', N'System', N'projectdata', N'How many of the TSAs are behind schedule?', '2024-04-03T19:13:16.3928191+05:30', N'System'),
(63, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928192+05:30', N'System', N'projectdata', N'List out TSAs that have high impact risks or issues associated with them.', '2024-04-03T19:13:16.3928193+05:30', N'System'),
(64, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928194+05:30', N'System', N'projectdata', N'Show me the breakdown of TSAs by duration', '2024-04-03T19:13:16.3928195+05:30', N'System'),
(65, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928197+05:30', N'System', N'eyguidance', N'What PMO workplan templates are available?', '2024-04-03T19:13:16.3928198+05:30', N'System'),
(66, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928201+05:30', N'System', N'eyguidance', N'What are the best practices to run weekly status meetings with the client?', '2024-04-03T19:13:16.3928201+05:30', N'System'),
(67, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928203+05:30', N'System', N'eyguidance', N'What is the difference between Progress and Calculated Status?', '2024-04-03T19:13:16.3928203+05:30', N'System'),
(68, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928205+05:30', N'System', N'eyguidance', N'How do you add a new field to the workplan?', '2024-04-03T19:13:16.3928205+05:30', N'System'),
(69, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928207+05:30', N'System', N'eyguidance', N'How do you hide a new field to the workplan?', '2024-04-03T19:13:16.3928208+05:30', N'System'),
(70, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928209+05:30', N'System', N'eyguidance', N'How do you rename a new field to the workplan?', '2024-04-03T19:13:16.3928210+05:30', N'System'),
(71, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928211+05:30', N'System', N'eyguidance', N'How to export report to PPT?', '2024-04-03T19:13:16.3928212+05:30', N'System'),
(72, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928213+05:30', N'System', N'eyguidance', N'How to export report to PDF?', '2024-04-03T19:13:16.3928214+05:30', N'System'),
(73, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928215+05:30', N'System', N'eyguidance', N'How do I set alerts/send email for various item owners?', '2024-04-03T19:13:16.3928216+05:30', N'System'),
(74, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928217+05:30', N'System', N'eyguidance', N'How do I add a client user to the PMO app?', '2024-04-03T19:13:16.3928218+05:30', N'System'),
(75, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928219+05:30', N'System', N'eyguidance', N'How do I link a Workplan Task to RAID?', '2024-04-03T19:13:16.3928220+05:30', N'System'),
(76, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928221+05:30', N'System', N'eyguidance', N'Provide case studies/credentials for similar deals that EY have supported in the past', '2024-04-03T19:13:16.3928222+05:30', N'System'),
(77, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928223+05:30', N'System', N'eyguidance', N'Help me understand PMO methodology for this ${ProjectType}', '2024-04-03T19:13:16.3928224+05:30', N'System'),
(78, N'', N'CE4-VC', '2024-04-03T19:13:16.3928226+05:30', N'System', N'eyguidance', N'What cost savings levers are available?', '2024-04-03T19:13:16.3928226+05:30', N'System'),
(79, N'', N'CE4-VC', '2024-04-03T19:13:16.3928228+05:30', N'System', N'eyguidance', N'What revenue growth levers are available?', '2024-04-03T19:13:16.3928228+05:30', N'System'),
(80, N'', N'CE4-VC', '2024-04-03T19:13:16.3928230+05:30', N'System', N'eyguidance', N'What are typical one-time costs that we should be considering?', '2024-04-03T19:13:16.3928230+05:30', N'System'),
(81, N'', N'CE4-VC', '2024-04-03T19:13:16.3928232+05:30', N'System', N'eyguidance', N'What are the IT cost savings levers that I should be thinking about?', '2024-04-03T19:13:16.3928232+05:30', N'System'),
(82, N'', N'CE4-VC', '2024-04-03T19:13:16.3928234+05:30', N'System', N'eyguidance', N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?', '2024-04-03T19:13:16.3928234+05:30', N'System'),
(83, N'', N'CE4-VC', '2024-04-03T19:13:16.3928236+05:30', N'System', N'eyguidance', N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?', '2024-04-03T19:13:16.3928237+05:30', N'System'),
(84, N'', N'CE4-VC', '2024-04-03T19:13:16.3928238+05:30', N'System', N'eyguidance', N'Provide case studies/credentials for similar deals that EY have supported in the past', '2024-04-03T19:13:16.3928239+05:30', N'System');
INSERT INTO [Suggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy])
VALUES (85, N'', N'CE4-VC', '2024-04-03T19:13:16.3928240+05:30', N'System', N'eyguidance', N'Help understand VC methodology.', '2024-04-03T19:13:16.3928241+05:30', N'System'),
(86, N'', N'CE4-OM', '2024-04-03T19:13:16.3928243+05:30', N'System', N'eyguidance', N'What normative operating models are available?', '2024-04-03T19:13:16.3928244+05:30', N'System'),
(87, N'', N'CE4-OM', '2024-04-03T19:13:16.3928245+05:30', N'System', N'eyguidance', N'How can I upload systems in bulk to the Op Model app?', '2024-04-03T19:13:16.3928246+05:30', N'System'),
(88, N'', N'CE4-OM', '2024-04-03T19:13:16.3928247+05:30', N'System', N'eyguidance', N'What are the steps to setup the Op Model app?', '2024-04-03T19:13:16.3928248+05:30', N'System'),
(89, N'', N'CE4-OM', '2024-04-03T19:13:16.3928249+05:30', N'System', N'eyguidance', N'Can I import an existing Operating Model in PowerPoint to use as my current state model?', '2024-04-03T19:13:16.3928250+05:30', N'System'),
(90, N'', N'CE4-OM', '2024-04-03T19:13:16.3928306+05:30', N'System', N'eyguidance', N'What reports are available in the Op Model app?', '2024-04-03T19:13:16.3928307+05:30', N'System'),
(91, N'', N'CE4-OM', '2024-04-03T19:13:16.3928309+05:30', N'System', N'eyguidance', N'Provide case studies/credentials for similar deals that EY have supported in the past', '2024-04-03T19:13:16.3928310+05:30', N'System'),
(92, N'', N'CE4-OM', '2024-04-03T19:13:16.3928311+05:30', N'System', N'eyguidance', N'What is a Process Group?', '2024-04-03T19:13:16.3928312+05:30', N'System'),
(93, N'', N'CE4-OM', '2024-04-03T19:13:16.3928313+05:30', N'System', N'eyguidance', N'How to view side by side view of current State/Day 1/Future state?', '2024-04-03T19:13:16.3928314+05:30', N'System'),
(94, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928316+05:30', N'System', N'eyguidance', N'What TSAs would you suggest?', '2024-04-03T19:13:16.3928316+05:30', N'System'),
(95, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928318+05:30', N'System', N'eyguidance', N'What are examples for TSAs?', '2024-04-03T19:13:16.3928318+05:30', N'System'),
(96, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928320+05:30', N'System', N'eyguidance', N'Why are TSAs important?', '2024-04-03T19:13:16.3928320+05:30', N'System'),
(97, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928322+05:30', N'System', N'eyguidance', N'What are the most common types of TSAs?', '2024-04-03T19:13:16.3928322+05:30', N'System'),
(98, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928324+05:30', N'System', N'eyguidance', N'Provide case studies/credentials for similar deals that EY have supported in the past', '2024-04-03T19:13:16.3928325+05:30', N'System'),
(99, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928326+05:30', N'System', N'eyguidance', N'How to configure TSA stages?', '2024-04-03T19:13:16.3928327+05:30', N'System'),
(100, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928328+05:30', N'System', N'eyguidance', N'How to set alerts/send email to TSA owners', '2024-04-03T19:13:16.3928329+05:30', N'System'),
(101, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928331+05:30', N'System', N'internet', N'Generate a basic workplan template for my project.', '2024-04-03T19:13:16.3928332+05:30', N'System'),
(102, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928333+05:30', N'System', N'internet', N'What are the key risks for a ${ProjectType} project?', '2024-04-03T19:13:16.3928334+05:30', N'System'),
(103, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928335+05:30', N'System', N'internet', N'What are the key milestones for a ${ProjectType} project?', '2024-04-03T19:13:16.3928336+05:30', N'System'),
(104, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928337+05:30', N'System', N'internet', N'What are the best practices to run weekly status meetings?', '2024-04-03T19:13:16.3928338+05:30', N'System'),
(105, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928339+05:30', N'System', N'internet', N'When was the deal announced?', '2024-04-03T19:13:16.3928340+05:30', N'System'),
(106, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928341+05:30', N'System', N'internet', N'What are some of the similar deals that have happened in the past?', '2024-04-03T19:13:16.3928342+05:30', N'System'),
(107, N'', N'CE4-PMO', '2024-04-03T19:13:16.3928343+05:30', N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', '2024-04-03T19:13:16.3928344+05:30', N'System'),
(108, N'', N'CE4-VC', '2024-04-03T19:13:16.3928346+05:30', N'System', N'internet', N'What are the best cost saving initiatives?', '2024-04-03T19:13:16.3928347+05:30', N'System'),
(109, N'', N'CE4-VC', '2024-04-03T19:13:16.3928348+05:30', N'System', N'internet', N'What are the best revenue growth initiatives?', '2024-04-03T19:13:16.3928349+05:30', N'System'),
(110, N'', N'CE4-VC', '2024-04-03T19:13:16.3928350+05:30', N'System', N'internet', N'What are the best strategies for improving a company in the ${Sector} sector?', '2024-04-03T19:13:16.3928351+05:30', N'System'),
(111, N'', N'CE4-VC', '2024-04-03T19:13:16.3928352+05:30', N'System', N'internet', N'What are recent examples of improvements being made in the ${Sector} sector?', '2024-04-03T19:13:16.3928353+05:30', N'System'),
(112, N'', N'CE4-VC', '2024-04-03T19:13:16.3928354+05:30', N'System', N'internet', N'What are the best ways to track actuals?', '2024-04-03T19:13:16.3928355+05:30', N'System'),
(113, N'', N'CE4-VC', '2024-04-03T19:13:16.3928356+05:30', N'System', N'internet', N'What should be the frequency of tracking dollar values during the engagement?', '2024-04-03T19:13:16.3928357+05:30', N'System'),
(114, N'', N'CE4-VC', '2024-04-03T19:13:16.3928358+05:30', N'System', N'internet', N'What are typical implications for cross border deals?', '2024-04-03T19:13:16.3928359+05:30', N'System'),
(115, N'', N'CE4-OM', '2024-04-03T19:13:16.3928361+05:30', N'System', N'internet', N'What is a normative operating model for the ${Sector} sector?', '2024-04-03T19:13:16.3928362+05:30', N'System'),
(116, N'', N'CE4-OM', '2024-04-03T19:13:16.3928363+05:30', N'System', N'internet', N'What are key considerations when defining an operating model for a ${Sector} sector company?', '2024-04-03T19:13:16.3928364+05:30', N'System'),
(117, N'', N'CE4-OM', '2024-04-03T19:13:16.3928365+05:30', N'System', N'internet', N'What are examples of Day 1 process dispositions?', '2024-04-03T19:13:16.3928366+05:30', N'System'),
(118, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928368+05:30', N'System', N'internet', N'What are the corporate functions typically involved in the ${Sector} sector?', '2024-04-03T19:13:16.3928368+05:30', N'System'),
(119, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928370+05:30', N'System', N'internet', N'What are the typical services of the Sales and Marketing function?', '2024-04-03T19:13:16.3928370+05:30', N'System'),
(120, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928372+05:30', N'System', N'internet', N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.', '2024-04-03T19:13:16.3928372+05:30', N'System'),
(121, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928374+05:30', N'System', N'internet', N'Provides templates of TSA', '2024-04-03T19:13:16.3928374+05:30', N'System'),
(122, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928376+05:30', N'System', N'internet', N'What should be the typical duration for TSA', '2024-04-03T19:13:16.3928377+05:30', N'System'),
(123, N'', N'CE4-TSA', '2024-04-03T19:13:16.3928378+05:30', N'System', N'internet', N'Things I should keep in mind for longer duration TSAs', '2024-04-03T19:13:16.3928379+05:30', N'System');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Suggestions]'))
    SET IDENTITY_INSERT [Suggestions] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240403134317_SuggestionSeedData', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178735+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178744+05:30'
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178749+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178749+05:30'
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178750+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178751+05:30'
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178752+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178752+05:30'
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178753+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178754+05:30'
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178756+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178756+05:30'
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178759+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178759+05:30'
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178760+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178761+05:30'
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178762+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178762+05:30'
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178764+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178764+05:30'
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178765+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178766+05:30'
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178767+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178767+05:30'
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178769+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178769+05:30'
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178770+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178771+05:30'
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178771+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178772+05:30'
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178773+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178773+05:30'
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178774+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178775+05:30'
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178777+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178777+05:30'
WHERE [ID] = 18;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178778+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178779+05:30'
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178780+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178781+05:30'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178782+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178782+05:30'
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178783+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178784+05:30'
WHERE [ID] = 22;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178785+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178785+05:30'
WHERE [ID] = 23;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178786+05:30', [Source] = N'project-docs', [UpdatedAt] = '2024-04-08T19:18:03.3178787+05:30'
WHERE [ID] = 24;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178788+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178788+05:30'
WHERE [ID] = 25;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178789+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178790+05:30'
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178791+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178791+05:30'
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178792+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178793+05:30'
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178794+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178794+05:30'
WHERE [ID] = 29;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178795+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178796+05:30'
WHERE [ID] = 30;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178797+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178797+05:30'
WHERE [ID] = 31;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178798+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178799+05:30'
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178800+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178800+05:30'
WHERE [ID] = 33;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178802+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178803+05:30'
WHERE [ID] = 34;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178804+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178804+05:30'
WHERE [ID] = 35;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178805+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178806+05:30'
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178807+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178807+05:30'
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178808+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178809+05:30'
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178810+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178810+05:30'
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178811+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178812+05:30'
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178813+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178813+05:30'
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178814+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178815+05:30'
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178816+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178817+05:30'
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178818+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178818+05:30'
WHERE [ID] = 44;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178819+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178819+05:30'
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178821+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178821+05:30'
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178822+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178823+05:30'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178824+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178824+05:30'
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178825+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178826+05:30'
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178827+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178828+05:30'
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178829+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178829+05:30'
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178830+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178831+05:30'
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178832+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178832+05:30'
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178833+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178834+05:30'
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178835+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178835+05:30'
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178837+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178837+05:30'
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178838+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178839+05:30'
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178840+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178840+05:30'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178841+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178842+05:30'
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178879+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178880+05:30'
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178881+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178882+05:30'
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178883+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178883+05:30'
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178884+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178885+05:30'
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178886+05:30', [Source] = N'project-data', [UpdatedAt] = '2024-04-08T19:18:03.3178886+05:30'
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178888+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178888+05:30'
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178890+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178890+05:30'
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178891+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178892+05:30'
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178893+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178893+05:30'
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178894+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178895+05:30'
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178896+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178896+05:30'
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178897+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178898+05:30'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178899+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178899+05:30'
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178900+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178901+05:30'
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178902+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178902+05:30'
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178903+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178904+05:30'
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178905+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178905+05:30'
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178906+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178906+05:30'
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178908+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178908+05:30'
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178909+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178910+05:30'
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178911+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178911+05:30'
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178912+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178913+05:30'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178914+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178914+05:30'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178915+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178916+05:30'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178917+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178917+05:30'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178918+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178919+05:30'
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178920+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178921+05:30'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178921+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178922+05:30'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178923+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178924+05:30'
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178925+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178925+05:30'
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178926+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178927+05:30'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178928+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178928+05:30'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178929+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178930+05:30'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178930+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178931+05:30'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178932+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178933+05:30'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178934+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178934+05:30'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178935+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178936+05:30'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178937+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178937+05:30'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178938+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178939+05:30'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178940+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178940+05:30'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178941+05:30', [Source] = N'ey-guidance', [UpdatedAt] = '2024-04-08T19:18:03.3178942+05:30'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178943+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178944+05:30'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178945+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178945+05:30'
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178946+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178947+05:30'
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178948+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178948+05:30'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178949+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178950+05:30'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178951+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178951+05:30'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178952+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178953+05:30'
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178954+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178955+05:30'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178956+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178956+05:30'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178957+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178958+05:30'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178959+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178959+05:30'
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178960+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178961+05:30'
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178962+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178962+05:30'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178963+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178964+05:30'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178965+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178965+05:30'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178966+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178967+05:30'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178968+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178968+05:30'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178970+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178970+05:30'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178971+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178972+05:30'
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178973+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178973+05:30'
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178974+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178975+05:30'
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178976+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178976+05:30'
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-08T19:18:03.3178977+05:30', [UpdatedAt] = '2024-04-08T19:18:03.3178978+05:30'
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240408134803_UpdateSourceKeys', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [CopilotConfigurations] (
    [ID] int NOT NULL IDENTITY,
    [Title] nvarchar(max) NOT NULL,
    [Key] nvarchar(max) NOT NULL,
    [Value] nvarchar(max) NOT NULL,
    [IsEnabled] bit NOT NULL,
    CONSTRAINT [PK_CopilotConfigurations] PRIMARY KEY ([ID])
);
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'IsEnabled', N'Key', N'Title', N'Value') AND [object_id] = OBJECT_ID(N'[CopilotConfigurations]'))
    SET IDENTITY_INSERT [CopilotConfigurations] ON;
INSERT INTO [CopilotConfigurations] ([ID], [IsEnabled], [Key], [Title], [Value])
VALUES (1, CAST(0 AS bit), N'PROJECT_CONTEXT', N'Project Context', N'');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'IsEnabled', N'Key', N'Title', N'Value') AND [object_id] = OBJECT_ID(N'[CopilotConfigurations]'))
    SET IDENTITY_INSERT [CopilotConfigurations] OFF;
GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778453+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778469+05:30'
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778473+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778473+05:30'
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778474+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778475+05:30'
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778476+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778476+05:30'
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778477+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778478+05:30'
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778479+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778480+05:30'
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778481+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778482+05:30'
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778483+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778483+05:30'
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778484+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778485+05:30'
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778486+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778486+05:30'
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778487+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778488+05:30'
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778488+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778489+05:30'
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778490+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778491+05:30'
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778491+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778492+05:30'
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778493+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778493+05:30'
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778494+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778494+05:30'
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778495+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778496+05:30'
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778497+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778498+05:30'
WHERE [ID] = 18;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778499+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778499+05:30'
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778500+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778501+05:30'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778502+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778502+05:30'
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778503+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778503+05:30'
WHERE [ID] = 22;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778504+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778505+05:30'
WHERE [ID] = 23;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778505+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778506+05:30'
WHERE [ID] = 24;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778507+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778507+05:30'
WHERE [ID] = 25;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778508+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778509+05:30'
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778510+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778510+05:30'
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778511+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778511+05:30'
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778512+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778513+05:30'
WHERE [ID] = 29;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778514+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778514+05:30'
WHERE [ID] = 30;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778515+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778515+05:30'
WHERE [ID] = 31;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778516+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778517+05:30'
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778518+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778518+05:30'
WHERE [ID] = 33;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778520+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778520+05:30'
WHERE [ID] = 34;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778521+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778521+05:30'
WHERE [ID] = 35;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778522+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778523+05:30'
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778569+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778569+05:30'
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778570+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778571+05:30'
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778571+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778572+05:30'
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778573+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778573+05:30'
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778574+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778575+05:30'
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778576+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778576+05:30'
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778577+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778578+05:30'
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778578+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778579+05:30'
WHERE [ID] = 44;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778580+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778580+05:30'
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778581+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778581+05:30'
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778582+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778583+05:30'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778584+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778584+05:30'
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778585+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778585+05:30'
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778587+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778587+05:30'
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778588+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778588+05:30'
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778589+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778590+05:30'
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778590+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778591+05:30'
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778592+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778592+05:30'
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778593+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778594+05:30'
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778595+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778595+05:30'
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778596+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778596+05:30'
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778597+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778598+05:30'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778599+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778599+05:30'
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778600+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778600+05:30'
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778601+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778602+05:30'
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778602+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778603+05:30'
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778604+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778604+05:30'
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778605+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778606+05:30'
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778607+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778607+05:30'
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778609+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778610+05:30'
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778610+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778611+05:30'
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778612+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778612+05:30'
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778613+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778613+05:30'
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778614+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778615+05:30'
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778615+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778616+05:30'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778617+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778617+05:30'
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778618+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778618+05:30'
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778619+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778620+05:30'
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778621+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778621+05:30'
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778622+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778622+05:30'
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778623+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778623+05:30'
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778625+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778625+05:30'
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778626+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778626+05:30'
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778627+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778628+05:30'
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778628+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778629+05:30'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778630+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778630+05:30'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778631+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778631+05:30'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778632+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778633+05:30'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778633+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778634+05:30'
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778635+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778635+05:30'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778636+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778637+05:30'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778638+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778638+05:30'
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778639+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778639+05:30'
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778640+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778640+05:30'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778641+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778642+05:30'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778643+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778643+05:30'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778644+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778644+05:30'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778645+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778646+05:30'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778647+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778647+05:30'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778648+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778648+05:30'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778649+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778650+05:30'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778650+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778651+05:30'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778652+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778652+05:30'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778653+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778653+05:30'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778654+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778655+05:30'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778656+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778656+05:30'
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778657+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778657+05:30'
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778658+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778659+05:30'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778659+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778660+05:30'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778661+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778661+05:30'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778662+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778663+05:30'
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778664+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778664+05:30'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778665+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778665+05:30'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778666+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778667+05:30'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778668+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778668+05:30'
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778669+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778669+05:30'
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778670+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778671+05:30'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778671+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778672+05:30'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778749+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778750+05:30'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778751+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778751+05:30'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778752+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778753+05:30'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778754+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778755+05:30'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778755+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778756+05:30'
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778757+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778757+05:30'
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778758+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778758+05:30'
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778759+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778760+05:30'
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = '2024-04-10T19:19:36.8778761+05:30', [UpdatedAt] = '2024-04-10T19:19:36.8778761+05:30'
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240410134937_CopilotConfigurationSeeding', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DECLARE @var0 sysname;
SELECT @var0 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Suggestions]') AND [c].[name] = N'UpdatedAt');
IF @var0 IS NOT NULL EXEC(N'ALTER TABLE [Suggestions] DROP CONSTRAINT [' + @var0 + '];');
ALTER TABLE [Suggestions] ALTER COLUMN [UpdatedAt] datetime2 NULL;
GO

DECLARE @var1 sysname;
SELECT @var1 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[Suggestions]') AND [c].[name] = N'CreatedAt');
IF @var1 IS NOT NULL EXEC(N'ALTER TABLE [Suggestions] DROP CONSTRAINT [' + @var1 + '];');
ALTER TABLE [Suggestions] ALTER COLUMN [CreatedAt] datetime2 NULL;
GO

CREATE TABLE [ChatHistorys] (
    [ID] int NOT NULL IDENTITY,
    [ChatId] nvarchar(max) NOT NULL,
    [MessageId] int NULL,
    [Message] nvarchar(max) NOT NULL,
    [SuggestionId] bigint NULL,
    [AdditionalInfo] nvarchar(max) NULL,
    [TimeToResolve] bigint NOT NULL,
    [UserRole] nvarchar(max) NOT NULL,
    [UserId] nvarchar(255) NOT NULL,
    [CreatedBy] nvarchar(max) NULL,
    [CreatedAt] datetime2 NOT NULL,
    [UpdatedBy] nvarchar(max) NULL,
    [UpdatedAt] datetime2 NOT NULL,
    CONSTRAINT [PK_ChatHistorys] PRIMARY KEY ([ID])
);
GO

CREATE TABLE [CopilotFeedbacks] (
    [ID] int NOT NULL IDENTITY,
    [Rating] int NOT NULL,
    [UserId] nvarchar(255) NOT NULL,
    [FeedbackText] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [UpdatedAt] datetime2 NOT NULL,
    CONSTRAINT [PK_CopilotFeedbacks] PRIMARY KEY ([ID])
);
GO

CREATE TABLE [MessageFeedbacks] (
    [ID] int NOT NULL IDENTITY,
    [IsLiked] bit NOT NULL,
    [ChatId] nvarchar(max) NOT NULL,
    [MessageId] bigint NOT NULL,
    [UserId] nvarchar(255) NOT NULL,
    [FeedbackText] nvarchar(max) NOT NULL,
    [CreatedAt] datetime2 NOT NULL,
    [UpdatedAt] datetime2 NOT NULL,
    CONSTRAINT [PK_MessageFeedbacks] PRIMARY KEY ([ID])
);
GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 18;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 22;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 23;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 24;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 25;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 29;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 30;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 31;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 33;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 34;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 35;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 44;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [CreatedAt] = NULL, [UpdatedAt] = NULL
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240423103127_FeedbackAndHistoryTables', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 18;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 22;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 23;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL
WHERE [ID] = 24;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'project-docs', [SuggestionText] = N'What is the governance structure for this project?'
WHERE [ID] = 25;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'project-docs', [SuggestionText] = N'List out various recurring meetings along with cadence'
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'project-docs', [SuggestionText] = N'What are key dates for this project?'
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'project-docs', [SuggestionText] = N'What do we know about the target and buyer for this project?'
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'project-docs', [SuggestionText] = N'What is EY’s scope of work ?'
WHERE [ID] = 29;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'project-docs', [SuggestionText] = N'Who is the program sponsor for this project ?'
WHERE [ID] = 30;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title;', [SuggestionText] = N'How many milestones does each team have?'
WHERE [ID] = 31;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(*) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title;', [SuggestionText] = N'How many risks does each team have?'
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(*) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title', [SuggestionText] = N'How many dependencies does each team have?'
WHERE [ID] = 33;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'select wp.Title, ri.Title from WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues WTRI left join workplan wp on wp.ID = WTRI.WorkPlanId left join RisksAndIssues ri on ri.ID = WTRI.RisksAndIssueId', [SuggestionText] = N'Which risks/issues have the most impact on the workplan?'
WHERE [ID] = 34;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT wp.Title from WorkPlan wp LEFT JOIN Statuses s on wp.WorkPlanTaskStatusId = s.ID where s.[Key] = ''BEHIND_SCHEDULE''', [SuggestionText] = N'List out behind schedule milestones'
WHERE [ID] = 35;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT RI.Title from RisksAndIssues RI LEFT JOIN Statuses s on RI.ItemStatusId = s.ID where s.[Key] = ''BEHIND_SCHEDULE''', [SuggestionText] = N'List out behind schedule risks'
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT I.Title from Interdependencies I LEFT JOIN Statuses s on I.InterdependencyStatusId = s.ID where s.[Key] = ''BEHIND_SCHEDULE''', [SuggestionText] = N'List out behind schedule dependencies'
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'How many milestones were assigned to me this week?'
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'How many risks were assigned to me this week?'
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'How many dependencies were assigned to me this week?'
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS MilestonesDueThisWeek FROM WorkPlan wp LEFT JOIN statuses s ON wp.WorkPlanTaskStatusId = s.ID WHERE wp.WorkPlanTaskType = ''Milestone''   AND YEAR(wp.TaskDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, wp.TaskDueDate) = DATEPART(WEEK, GETDATE())   AND (s.[Key] IS NULL OR s.[Key]  NOT IN (''COMPLETED'', ''CLOSED''));', [SuggestionText] = N'How many of my milestones are due this week?'
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS RisksAndIssuesDueThisWeek FROM RisksAndIssues RI LEFT JOIN statuses S ON RI.ItemStatusId = S.ID WHERE RI.IssueRiskCategory = ''Risk''   AND YEAR(RI.ItemDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, RI.ItemDueDate) = DATEPART(WEEK, GETDATE())   AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED''));', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How many risks are due this week?'
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      COUNT(*) AS InterdependenciesDueThisWeek FROM      Interdependencies I LEFT JOIN      statuses S ON I.InterdependencyStatusId = S.ID WHERE      YEAR(I.ItemDueDate) = YEAR(GETDATE())     AND DATEPART(WEEK, I.ItemDueDate) = DATEPART(WEEK, GETDATE())     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED''));', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How many dependencies are due this week?'
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT     pt.Title AS ProjectTeamTitle,     COUNT(*) AS OverdueMilestoneCount FROM      WorkPlan wp INNER JOIN      ProjectTeams pt ON wp.ProjectTeamId = pt.ID LEFT JOIN      statuses s ON wp.WorkPlanTaskStatusId = s.ID WHERE      wp.WorkPlanTaskType = ''Milestone''     AND wp.TaskDueDate < GETDATE()     AND (s.[Key] IS NULL OR s.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      pt.Title ORDER BY      OverdueMilestoneCount DESC', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Which project team has the most overdue milestones?'
WHERE [ID] = 44;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      pt.Title AS ProjectTeamTitle,     COUNT(*) AS OverdueRiskCount FROM      RisksAndIssues RI INNER JOIN      ProjectTeams pt ON RI.ProjectTeamId = pt.ID LEFT JOIN      statuses S ON RI.ItemStatusId = S.ID WHERE      RI.IssueRiskCategory = ''Risk''     AND RI.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      pt.Title ORDER BY ', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Which project team has the most overdue risks?'
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamTitle,     COUNT(*) AS OverdueDependencyCount FROM      Interdependencies I INNER JOIN      ProjectTeams ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID LEFT JOIN      statuses S ON I.InterdependencyStatusId = S.ID WHERE      I.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      ReceiverTeam.Title ORDER BY      OverdueDependencyCount DESC;', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Which project team has the most overdue dependencies?'
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      RiskImpact,     RiskProbability,     COUNT(*) AS RiskCount FROM      RisksAndIssues WHERE      IssueRiskCategory = ''Risk''     AND ItemStatusId NOT IN (SELECT ID FROM statuses WHERE [Key] IN (''COMPLETED'', ''CLOSED'')) AND (RiskImpact IS NOT NULL  OR RiskProbability IS NOT NULL ) GROUP BY      RiskImpact,     RiskProbability ORDER BY      RiskImpact, RiskProbability;', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Show me open risks broken down by impact and probability'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'What are our targets for this engagement?'
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'How much value are we planning to achieve from our initiatives?'
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How much value have we already achieved from our initiatives?'
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How are my initiatives doing?'
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Are there any risks or issues with initiatives that I’m responsible for?'
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Which initiatives have fallen off track?'
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Are our initiative projections exceeding our targets?'
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How will these initiatives impact the PnL?'
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What team has the most Current State processes?'
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What team has the most Day 1 processes?'
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are some of the processes that have High impact Risk/Issue linked?'
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'What are the corporate functions typically involved in the ${Sector} sector?'
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Show me the count of TSAs by sub function.'
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Show me the count of TSAs by region.'
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'How many of the TSAs are behind schedule?'
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'List out TSAs that have high impact risks or issues associated with them.'
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Show me the breakdown of TSAs by duration'
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'What team has the most Current State processes?'
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'What team has the most Day 1 processes?'
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'What are some of the processes that have High impact Risk/Issue linked?'
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do you hide a new field to the workplan?'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do you rename a new field to the workplan?'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How to export report to PDF?'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do I add a client user to the PMO app?'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'Can I import an existing Operating Model in PowerPoint to use as my current state model?'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What is a Process Group?'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'How to view side by side view of current State/Day 1/Future state?'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What are the most common types of TSAs?'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'How to configure TSA stages?'
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'How to set alerts/send email to TSA owners'
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Suggestions]'))
    SET IDENTITY_INSERT [Suggestions] ON;
INSERT INTO [Suggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy])
VALUES (124, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'When was the deal announced?', NULL, N'System'),
(125, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are some of the similar deals that have happened in the past?', NULL, N'System'),
(126, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System'),
(127, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best cost saving initiatives?', NULL, N'System'),
(128, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best revenue growth initiatives?', NULL, N'System'),
(129, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best strategies for improving a company in the ${Sector} sector?', NULL, N'System'),
(130, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are recent examples of improvements being made in the ${Sector} sector?', NULL, N'System'),
(131, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best ways to track actuals?', NULL, N'System'),
(132, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What should be the frequency of tracking dollar values during the engagement?', NULL, N'System'),
(133, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are typical implications for cross border deals?', NULL, N'System'),
(134, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What is a normative operating model for the ${Sector} sector?', NULL, N'System'),
(135, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What are key considerations when defining an operating model for a ${Sector} sector company?', NULL, N'System'),
(136, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What are examples of Day 1 process dispositions?', NULL, N'System'),
(137, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What are the corporate functions typically involved in the ${Sector} sector?', NULL, N'System'),
(138, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What are the typical services of the Sales and Marketing function?', NULL, N'System'),
(139, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.', NULL, N'System'),
(140, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Provides templates of TSA', NULL, N'System'),
(141, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What should be the typical duration for TSA', NULL, N'System'),
(142, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Things I should keep in mind for longer duration TSAs', NULL, N'System'),
(143, NULL, N'CE4-PL', NULL, N'System', N'internet', N'Generate a basic workplan template for my project.', NULL, N'System'),
(144, NULL, N'CE4-PL', NULL, N'System', N'internet', N'What are the key risks for a ${ProjectType} project?', NULL, N'System'),
(145, NULL, N'CE4-PL', NULL, N'System', N'internet', N'What are the key milestones for a ${ProjectType} project?', NULL, N'System'),
(146, NULL, N'CE4-PL', NULL, N'System', N'internet', N'What are the best practices to run weekly status meetings?', NULL, N'System'),
(147, NULL, N'CE4-PL', NULL, N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Suggestions]'))
    SET IDENTITY_INSERT [Suggestions] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240425142622_ProjectLevelDataInSuggestion', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DELETE FROM [Suggestions]
WHERE [ID] = 145;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 146;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 147;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How many interdependencies does each team have?'
WHERE [ID] = 33;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT wp.Title  from WorkPlan wp  LEFT JOIN Statuses s on wp.WorkPlanTaskStatusId = s.ID  where s.[Key] = ''BEHIND_SCHEDULE''  AND wp.WorkPlanTaskType = ''Milestone'''
WHERE [ID] = 35;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT RI.Title  from RisksAndIssues RI  LEFT JOIN Statuses s on RI.ItemStatusId = s.ID  where s.[Key] = ''BEHIND_SCHEDULE''  AND RI.IssueRiskCategory = ''Risk'''
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT I.Title  from Interdependencies I  LEFT JOIN Statuses s on I.InterdependencyStatusId = s.ID  where s.[Key] = ''BEHIND_SCHEDULE''', [SuggestionText] = N'List out behind schedule interdependencies'
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS MilestonesDueThisWeek FROM WorkPlan wp LEFT JOIN statuses s ON wp.WorkPlanTaskStatusId = s.ID LEFT JOIN UserProfiles up on wp.TaskOwnerId = up.ID WHERE wp.WorkPlanTaskType = ''Milestone''   AND YEAR(wp.TaskDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, wp.TaskDueDate) = DATEPART(WEEK, GETDATE())   AND (s.[Key] IS NULL OR s.[Key]  NOT IN (''COMPLETED'', ''CLOSED''))   AND up.EMail = ${Username}', [SuggestionText] = N'How many of my milestones are due this week?'
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS RisksAndIssuesDueThisWeek FROM RisksAndIssues RI LEFT JOIN statuses S ON RI.ItemStatusId = S.ID LEFT JOIN UserProfiles up on RI.ItemOwnerId = up.ID WHERE RI.IssueRiskCategory = ''Risk''   AND YEAR(RI.ItemDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, RI.ItemDueDate) = DATEPART(WEEK, GETDATE())   AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED''))   AND up.EMail = ${Username}', [SuggestionText] = N'How many of my risks are due this week?'
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      COUNT(*) AS InterdependenciesDueThisWeek FROM      Interdependencies I LEFT JOIN      statuses S ON I.InterdependencyStatusId = S.ID WHERE      YEAR(I.ItemDueDate) = YEAR(GETDATE())     AND DATEPART(WEEK, I.ItemDueDate) = DATEPART(WEEK, GETDATE())     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED''));', [SuggestionText] = N'How many interdependencies are due this week'
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT     pt.Title AS ProjectTeamTitle,     COUNT(*) AS OverdueMilestoneCount FROM      WorkPlan wp INNER JOIN      ProjectTeams pt ON wp.ProjectTeamId = pt.ID LEFT JOIN      statuses s ON wp.WorkPlanTaskStatusId = s.ID WHERE      wp.WorkPlanTaskType = ''Milestone''     AND wp.TaskDueDate < GETDATE()     AND (s.[Key] IS NULL OR s.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      pt.Title ORDER BY      OverdueMilestoneCount DESC', [SuggestionText] = N'Which project team has the most overdue milestones'
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      pt.Title AS ProjectTeamTitle,     COUNT(*) AS OverdueRiskCount FROM      RisksAndIssues RI INNER JOIN      ProjectTeams pt ON RI.ProjectTeamId = pt.ID LEFT JOIN      statuses S ON RI.ItemStatusId = S.ID WHERE      RI.IssueRiskCategory = ''Risk''     AND RI.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      pt.Title ORDER BY ', [SuggestionText] = N'Which project team has the most overdue risks?'
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamTitle,     COUNT(*) AS OverdueDependencyCount FROM      Interdependencies I INNER JOIN      ProjectTeams ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID LEFT JOIN      statuses S ON I.InterdependencyStatusId = S.ID WHERE      I.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      ReceiverTeam.Title ORDER BY      OverdueDependencyCount DESC;', [SuggestionText] = N'Which project team has the most overdue interdependencies?'
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      RiskImpact,     RiskProbability,     COUNT(*) AS RiskCount FROM      RisksAndIssues WHERE      IssueRiskCategory = ''Risk''     AND ItemStatusId NOT IN (SELECT ID FROM statuses WHERE [Key] IN (''COMPLETED'', ''CLOSED''))  AND (RiskImpact IS NOT NULL   OR RiskProbability IS NOT NULL  ) GROUP BY      RiskImpact,     RiskProbability ORDER BY      RiskImpact, RiskProbability;', [SuggestionText] = N'Show me open risks broken down by impact and probability'
WHERE [ID] = 44;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are our targets for this engagement?'
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How much value are we planning to achieve from our initiatives?'
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How much value have we already achieved from our initiatives?'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How are my initiatives doing?'
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Are there any risks or issues with initiatives that I’m responsible for?'
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Which initiatives have fallen off track?'
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Are our initiative projections exceeding our targets?'
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How will these initiatives impact the PnL?'
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What team has the most Current State processes?'
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What team has the most Day 1 processes?'
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are some of the processes that have High impact Risk/Issue linked?'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the corporate functions typically involved in the ${Sector} sector?'
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Show me the count of TSAs by sub function.'
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Show me the count of TSAs by region.'
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How many of the TSAs are behind schedule?'
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'List out TSAs that have high impact risks or issues associated with them.'
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Show me the breakdown of TSAs by duration'
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What team has the most Current State processes?'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What team has the most Day 1 processes?'
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are some of the processes that have High impact Risk/Issue linked?'
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do you hide a new field to the workplan?'
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do you rename a new field to the workplan?'
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to export report to PDF?'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I add a client user to the PMO app?'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Can I import an existing Operating Model in PowerPoint to use as my current state model?'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What is a Process Group?'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to view side by side view of current State/Day 1/Future state?'
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the most common types of TSAs?'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to configure TSA stages?'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to set alerts/send email to TSA owners'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'When was the deal announced?'
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best strategies for improving a company in the ${Sector} sector?'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are recent examples of improvements being made in the ${Sector} sector?'
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What is a normative operating model for the ${Sector} sector?'
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are key considerations when defining an operating model for a ${Sector} sector company?'
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the corporate functions typically involved in the ${Sector} sector?'
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provides templates of TSA'
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What should be the typical duration for TSA'
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Things I should keep in mind for longer duration TSAs'
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 143;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240426115250_UpdatePMOSuggestion', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS MilestonesDueThisWeek FROM WorkPlan wp LEFT JOIN statuses s ON wp.WorkPlanTaskStatusId = s.ID LEFT JOIN UserProfiles up on wp.TaskOwnerId = up.ID WHERE wp.WorkPlanTaskType = ''Milestone''   AND YEAR(wp.TaskDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, wp.TaskDueDate) = DATEPART(WEEK, GETDATE())   AND (s.[Key] IS NULL OR s.[Key]  NOT IN (''COMPLETED'', ''CLOSED''))   AND up.EMail = ''${Username}'''
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS RisksAndIssuesDueThisWeek FROM RisksAndIssues RI LEFT JOIN statuses S ON RI.ItemStatusId = S.ID LEFT JOIN UserProfiles up on RI.ItemOwnerId = up.ID WHERE RI.IssueRiskCategory = ''Risk''   AND YEAR(RI.ItemDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, RI.ItemDueDate) = DATEPART(WEEK, GETDATE())   AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED''))   AND up.EMail = ''${Username}'''
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240426123514_UpdateUserNameTag', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT ''Total Top Down Target'' AS KPI, FORMAT((SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate))/1000000,''N2'') AS ''Value (Million)'' FROM ValueCaptureTopDownEstimates '
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'DECLARE @Y INT; DECLARE @ColumnName NVARCHAR(50); DECLARE @SqlQuery NVARCHAR(MAX);  SELECT @Y = TRY_CAST(JSON_VALUE([Value], ''$[0].defaultValue.Id'') AS INT) FROM MetastoreGeneralSettings WHERE [Key] = ''VC_PROJECT_TIMEFRAME_CADENCE'';  SET @ColumnName = ''Y'' + CAST(@Y AS NVARCHAR(10)) + ''M12Estimate'';  SET @SqlQuery = ''     SELECT (SUM(ISNULL ('' + QUOTENAME(@ColumnName) + '', 0))*12)/1000000 AS ValuetoAchieve FROM ValueCaptureEstimates VCE JOIN ValueCaptureInitiatives VCI ON VCE.ValueCaptureInitiativeId = VCI.ID WHERE ISNULL(VCE.Recurring,0) = 1 AND VCI.IsItemActive=1 AND ProjectTeamID IN (SELECT ID FROM ProjectTeams WHERE ManageValueCapture = 1 AND TeamTypeID = 1) AND ValueCaptureValueTypeId = 1'';  EXEC sp_executesql @SqlQuery; '
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ${Useremail} GROUP BY S.Title; '
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = @UserEmail; '
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'DECLARE @Y INT; DECLARE @ColumnName NVARCHAR(50); DECLARE @SqlQuery NVARCHAR(MAX); DECLARE @TotalEstimate DECIMAL(18,2);  SELECT @Y = TRY_CAST(JSON_VALUE([Value], ''$[0].defaultValue.Id'') AS INT) FROM MetastoreGeneralSettings WHERE [Key] = ''VC_PROJECT_TIMEFRAME_CADENCE'';  SET @ColumnName = ''Y'' + CAST(@Y AS NVARCHAR(10)) + ''M12Estimate'';  SET @SqlQuery = ''     SELECT @TotalEstimate = (SUM(ISNULL ('' + QUOTENAME(@ColumnName) + '', 0))*12)     FROM ValueCaptureEstimates VCE      JOIN ValueCaptureInitiatives VCI ON VCE.ValueCaptureInitiativeId = VCI.ID      WHERE ISNULL(VCE.Recurring,0) = 1      AND VCI.IsItemActive=1     AND ProjectTeamID IN (SELECT ID FROM ProjectTeams WHERE ManageValueCapture = 1 AND TeamTypeID = 1)     AND ValueCaptureValueTypeId = 1'';  EXEC sp_executesql @SqlQuery, N''@TotalEstimate DECIMAL(18,2) OUTPUT'', @TotalEstimate OUTPUT;  WITH SubtractedValue AS (    SELECT ''Total Top Down Target'' AS KPI,    FORMAT((@TotalEstimate - (SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate)))/1000000,''N2'') AS ''Value (Million)''     FROM ValueCaptureTopDownEstimates ) SELECT * FROM SubtractedValue; '
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ${Useremail} ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How  many initiatives are assigned to me? '
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ${Useremail}; ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Give my cost reduction initiatives '
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title; ', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title  FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''; ', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title  FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE''; ', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What team has the most Current State processes?'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What team has the most Day 1 processes?'
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are some of the processes that have High impact Risk/Issue linked?'
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title  FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many assets  are tagged to Day 1 processes? '
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title  FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many assets are tagged to Current State processes? '
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(Title) AS TotalCount, BusinessEntityId      FROM Nodes      WHERE NodeTypeId = 3      GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID; ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Can you provide me number of processes by op model? '
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId      FROM Nodes N  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId     WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE''     GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID; ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many processes we have in current state? '
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId      FROM Nodes N  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId     WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE''     GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID; ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many processes we have in Day1 state? '
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the corporate functions typically involved in the ${Sector} sector?'
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the count of TSAs by sub function.'
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the count of TSAs by region.'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'How many of the TSAs are behind schedule?'
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'List out TSAs that have high impact risks or issues associated with them.'
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Show me the breakdown of TSAs by duration'
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Give me the list of TSAs by Provider '
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Give me the list of TSAs by Receiver '
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Can you provide me list of TSAs by phases? '
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Show me the breakdown of TSAs by duration  '
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'How many TSAs does each team have? '
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'What team has the most Current State processes?'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'What team has the most Day 1 processes?'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'What are some of the processes that have High impact Risk/Issue linked?'
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] != ''CAPITAL_EDGE_SUPPORT'' order by TT.Title ', [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'What are the project teams that make up the governance structure for this engagement? '
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title; ', [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'How many milestones does each team have? '
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'How many interdependencies does each team have '
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(1) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title; ', [AppAffinity] = N'CE4-PL', [Source] = N'project-data', [SuggestionText] = N'How many risks does each team have? '
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do you hide a new field to the workplan?'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do you rename a new field to the workplan?'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How to export report to PDF?'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do I add a client user to the PMO app?'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Can I import an existing Operating Model in PowerPoint to use as my current state model?'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What is a Process Group?'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'How to view side by side view of current State/Day 1/Future state?'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What are the most common types of TSAs?'
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'How to configure TSA stages?'
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'How to set alerts/send email to TSA owners'
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [Source] = N'ey-guidance', [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'When was the deal announced?'
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best strategies for improving a company in the ${Sector} sector?'
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are recent examples of improvements being made in the ${Sector} sector?'
WHERE [ID] = 143;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Suggestions]'))
    SET IDENTITY_INSERT [Suggestions] ON;
INSERT INTO [Suggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy])
VALUES (145, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What should be the frequency of tracking dollar values during the engagement?', NULL, N'System'),
(146, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are typical implications for cross border deals?', NULL, N'System'),
(147, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What is a normative operating model for the ${Sector} sector?', NULL, N'System'),
(148, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What are key considerations when defining an operating model for a ${Sector} sector company?', NULL, N'System'),
(149, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What are examples of Day 1 process dispositions?', NULL, N'System'),
(150, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What are the corporate functions typically involved in the ${Sector} sector?', NULL, N'System'),
(151, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What are the typical services of the Sales and Marketing function?', NULL, N'System'),
(152, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.', NULL, N'System'),
(153, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Provides templates of TSA', NULL, N'System'),
(154, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What should be the typical duration for TSA', NULL, N'System'),
(155, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Things I should keep in mind for longer duration TSAs', NULL, N'System'),
(156, NULL, N'CE4-PL', NULL, N'System', N'internet', N'Generate a basic workplan template for my project.', NULL, N'System'),
(157, NULL, N'CE4-PL', NULL, N'System', N'internet', N'What are the key risks for a ${ProjectType} project?', NULL, N'System'),
(158, NULL, N'CE4-PL', NULL, N'System', N'internet', N'What are the key milestones for a ${ProjectType} project?', NULL, N'System'),
(159, NULL, N'CE4-PL', NULL, N'System', N'internet', N'What are the best practices to run weekly status meetings?', NULL, N'System'),
(160, NULL, N'CE4-PL', NULL, N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Suggestions]'))
    SET IDENTITY_INSERT [Suggestions] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240502094658_SQLQueryForAllApps', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DELETE FROM [Suggestions]
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 143;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 145;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 146;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 147;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 148;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 149;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 150;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 151;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 152;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 153;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 154;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 155;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 156;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 157;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 158;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 159;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 160;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ${Useremail} GROUP BY S.Title; ', [SuggestionText] = N'How are my initiatives doing?'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = @UserEmail; ', [SuggestionText] = N'Are there any risks or issues with initiatives that I’m responsible for?'
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'DECLARE @Y INT; DECLARE @ColumnName NVARCHAR(50); DECLARE @SqlQuery NVARCHAR(MAX); DECLARE @TotalEstimate DECIMAL(18,2);  SELECT @Y = TRY_CAST(JSON_VALUE([Value], ''$[0].defaultValue.Id'') AS INT) FROM MetastoreGeneralSettings WHERE [Key] = ''VC_PROJECT_TIMEFRAME_CADENCE'';  SET @ColumnName = ''Y'' + CAST(@Y AS NVARCHAR(10)) + ''M12Estimate'';  SET @SqlQuery = ''     SELECT @TotalEstimate = (SUM(ISNULL ('' + QUOTENAME(@ColumnName) + '', 0))*12)     FROM ValueCaptureEstimates VCE      JOIN ValueCaptureInitiatives VCI ON VCE.ValueCaptureInitiativeId = VCI.ID      WHERE ISNULL(VCE.Recurring,0) = 1      AND VCI.IsItemActive=1     AND ProjectTeamID IN (SELECT ID FROM ProjectTeams WHERE ManageValueCapture = 1 AND TeamTypeID = 1)     AND ValueCaptureValueTypeId = 1'';  EXEC sp_executesql @SqlQuery, N''@TotalEstimate DECIMAL(18,2) OUTPUT'', @TotalEstimate OUTPUT;  WITH SubtractedValue AS (    SELECT ''Total Top Down Target'' AS KPI,    FORMAT((@TotalEstimate - (SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate)))/1000000,''N2'') AS ''Value (Million)''     FROM ValueCaptureTopDownEstimates ) SELECT * FROM SubtractedValue; ', [SuggestionText] = N'Are our initiative projections exceeding our targets?'
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ${Useremail} ', [SuggestionText] = N'How  many initiatives are assigned to me? '
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ${Useremail}; ', [SuggestionText] = N'Give my cost reduction initiatives '
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title; ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title  FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''; ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title  FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE''; ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title  FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets  are tagged to Day 1 processes? '
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title  FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Current State processes? '
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(Title) AS TotalCount, BusinessEntityId      FROM Nodes      WHERE NodeTypeId = 3      GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID; ', [SuggestionText] = N'Can you provide me number of processes by op model? '
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId      FROM Nodes N  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId     WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE''     GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID; ', [SuggestionText] = N'How many processes we have in current state? '
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId      FROM Nodes N  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId     WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE''     GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID; ', [SuggestionText] = N'How many processes we have in Day1 state? '
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the count of TSAs by sub function.'
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Give me the list of TSAs by Provider '
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Give me the list of TSAs by Receiver '
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Can you provide me list of TSAs by phases? '
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the breakdown of TSAs by duration  '
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', [SuggestionText] = N'How many TSAs does each team have? '
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] != ''CAPITAL_EDGE_SUPPORT'' order by TT.Title ', [AppAffinity] = N'CE4-PL', [SuggestionText] = N'What are the project teams that make up the governance structure for this engagement? '
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title; ', [AppAffinity] = N'CE4-PL', [SuggestionText] = N'How many milestones does each team have? '
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', [AppAffinity] = N'CE4-PL', [SuggestionText] = N'How many interdependencies does each team have '
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(1) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title; ', [AppAffinity] = N'CE4-PL', [SuggestionText] = N'How many risks does each team have? '
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do you hide a new field to the workplan?'
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do you rename a new field to the workplan?'
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How to export report to PDF?'
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do I add a client user to the PMO app?'
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Can I import an existing Operating Model in PowerPoint to use as my current state model?'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What is a Process Group?'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How to view side by side view of current State/Day 1/Future state?'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the most common types of TSAs?'
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'How to configure TSA stages?'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'How to set alerts/send email to TSA owners'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'When was the deal announced?'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are the best strategies for improving a company in the ${Sector} sector?'
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are recent examples of improvements being made in the ${Sector} sector?'
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'internet', [SuggestionText] = N'What is a normative operating model for the ${Sector} sector?'
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'internet', [SuggestionText] = N'What are key considerations when defining an operating model for a ${Sector} sector company?'
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'internet', [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'internet', [SuggestionText] = N'What are the corporate functions typically involved in the ${Sector} sector?'
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'internet', [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Provides templates of TSA'
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What should be the typical duration for TSA'
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Things I should keep in mind for longer duration TSAs'
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PL', [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240502124120_RemovingNoQuerySuggestionProjectApps', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

ALTER TABLE [ChatHistorys] ADD [Status] nvarchar(max) NULL;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240503061826_AddStatusToChatHistory', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 25;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 29;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 30;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240506090618_UpdateProjectLevelKey', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DELETE FROM [Suggestions]
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title'
WHERE [ID] = 31;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(*) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title'
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT wp.Title  from WorkPlan wp  LEFT JOIN Statuses s on wp.WorkPlanTaskStatusId = s.ID  where s.[Key] = ''BEHIND_SCHEDULE''  AND wp.WorkPlanTaskType = ''Milestone''', [SuggestionText] = N'List out behind schedule milestones'
WHERE [ID] = 34;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT RI.Title  from RisksAndIssues RI  LEFT JOIN Statuses s on RI.ItemStatusId = s.ID  where s.[Key] = ''BEHIND_SCHEDULE''  AND RI.IssueRiskCategory = ''Risk''', [SuggestionText] = N'List out behind schedule risks'
WHERE [ID] = 35;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT I.Title  from Interdependencies I  LEFT JOIN Statuses s on I.InterdependencyStatusId = s.ID  where s.[Key] = ''BEHIND_SCHEDULE''', [SuggestionText] = N'List out behind schedule interdependencies'
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS MilestonesDueThisWeek FROM WorkPlan wp LEFT JOIN statuses s ON wp.WorkPlanTaskStatusId = s.ID LEFT JOIN UserProfiles up on wp.TaskOwnerId = up.ID WHERE wp.WorkPlanTaskType = ''Milestone''   AND YEAR(wp.TaskDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, wp.TaskDueDate) = DATEPART(WEEK, GETDATE())   AND (s.[Key] IS NULL OR s.[Key]  NOT IN (''COMPLETED'', ''CLOSED''))   AND up.EMail = ''${Username}''', [SuggestionText] = N'How many of my milestones are due this week?'
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS RisksAndIssuesDueThisWeek FROM RisksAndIssues RI LEFT JOIN statuses S ON RI.ItemStatusId = S.ID LEFT JOIN UserProfiles up on RI.ItemOwnerId = up.ID WHERE RI.IssueRiskCategory = ''Risk''   AND YEAR(RI.ItemDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, RI.ItemDueDate) = DATEPART(WEEK, GETDATE())   AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED''))   AND up.EMail = ''${Username}''', [SuggestionText] = N'How many of my risks are due this week?'
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      COUNT(*) AS InterdependenciesDueThisWeek FROM      Interdependencies I LEFT JOIN      statuses S ON I.InterdependencyStatusId = S.ID WHERE      YEAR(I.ItemDueDate) = YEAR(GETDATE())     AND DATEPART(WEEK, I.ItemDueDate) = DATEPART(WEEK, GETDATE())     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED''))', [SuggestionText] = N'How many interdependencies are due this week'
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT     pt.Title AS ProjectTeamTitle,     COUNT(*) AS OverdueMilestoneCount FROM      WorkPlan wp INNER JOIN      ProjectTeams pt ON wp.ProjectTeamId = pt.ID LEFT JOIN      statuses s ON wp.WorkPlanTaskStatusId = s.ID WHERE      wp.WorkPlanTaskType = ''Milestone''     AND wp.TaskDueDate < GETDATE()     AND (s.[Key] IS NULL OR s.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      pt.Title ORDER BY      OverdueMilestoneCount DESC', [SuggestionText] = N'Which project team has the most overdue milestones'
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      pt.Title AS ProjectTeamTitle,     COUNT(*) AS OverdueRiskCount FROM      RisksAndIssues RI INNER JOIN      ProjectTeams pt ON RI.ProjectTeamId = pt.ID LEFT JOIN      statuses S ON RI.ItemStatusId = S.ID WHERE      RI.IssueRiskCategory = ''Risk''     AND RI.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      pt.Title ORDER BY ', [SuggestionText] = N'Which project team has the most overdue risks?'
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamTitle,     COUNT(*) AS OverdueDependencyCount FROM      Interdependencies I INNER JOIN      ProjectTeams ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID LEFT JOIN      statuses S ON I.InterdependencyStatusId = S.ID WHERE      I.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      ReceiverTeam.Title ORDER BY      OverdueDependencyCount DESC', [SuggestionText] = N'Which project team has the most overdue interdependencies?'
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      RiskImpact,     RiskProbability,     COUNT(*) AS RiskCount FROM      RisksAndIssues WHERE      IssueRiskCategory = ''Risk''     AND ItemStatusId NOT IN (SELECT ID FROM statuses WHERE [Key] IN (''COMPLETED'', ''CLOSED''))  AND (RiskImpact IS NOT NULL   OR RiskProbability IS NOT NULL  ) GROUP BY      RiskImpact,     RiskProbability ORDER BY      RiskImpact, RiskProbability', [SuggestionText] = N'Show me open risks broken down by impact and probability'
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT ''Total Top Down Target'' AS KPI, FORMAT((SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate))/1000000,''N2'') AS ''Value (Million)'' FROM ValueCaptureTopDownEstimates ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are our targets for this engagement?'
WHERE [ID] = 44;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'DECLARE @Y INT; DECLARE @ColumnName NVARCHAR(50); DECLARE @SqlQuery NVARCHAR(MAX);  SELECT @Y = TRY_CAST(JSON_VALUE([Value], ''$[0].defaultValue.Id'') AS INT) FROM MetastoreGeneralSettings WHERE [Key] = ''VC_PROJECT_TIMEFRAME_CADENCE'';  SET @ColumnName = ''Y'' + CAST(@Y AS NVARCHAR(10)) + ''M12Estimate'';  SET @SqlQuery = ''     SELECT (SUM(ISNULL ('' + QUOTENAME(@ColumnName) + '', 0))*12)/1000000 AS ValuetoAchieve FROM ValueCaptureEstimates VCE JOIN ValueCaptureInitiatives VCI ON VCE.ValueCaptureInitiativeId = VCI.ID WHERE ISNULL(VCE.Recurring,0) = 1 AND VCI.IsItemActive=1 AND ProjectTeamID IN (SELECT ID FROM ProjectTeams WHERE ManageValueCapture = 1 AND TeamTypeID = 1) AND ValueCaptureValueTypeId = 1'';  EXEC sp_executesql @SqlQuery', [SuggestionText] = N'How much value are we planning to achieve from our initiatives?'
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ${Useremail} GROUP BY S.Title ', [SuggestionText] = N'How are my initiatives doing?'
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = @UserEmail ', [SuggestionText] = N'Are there any risks or issues with initiatives that I’m responsible for?'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'DECLARE @Y INT; DECLARE @ColumnName NVARCHAR(50); DECLARE @SqlQuery NVARCHAR(MAX); DECLARE @TotalEstimate DECIMAL(18,2);  SELECT @Y = TRY_CAST(JSON_VALUE([Value], ''$[0].defaultValue.Id'') AS INT) FROM MetastoreGeneralSettings WHERE [Key] = ''VC_PROJECT_TIMEFRAME_CADENCE'';  SET @ColumnName = ''Y'' + CAST(@Y AS NVARCHAR(10)) + ''M12Estimate'';  SET @SqlQuery = ''     SELECT @TotalEstimate = (SUM(ISNULL ('' + QUOTENAME(@ColumnName) + '', 0))*12)     FROM ValueCaptureEstimates VCE      JOIN ValueCaptureInitiatives VCI ON VCE.ValueCaptureInitiativeId = VCI.ID      WHERE ISNULL(VCE.Recurring,0) = 1      AND VCI.IsItemActive=1     AND ProjectTeamID IN (SELECT ID FROM ProjectTeams WHERE ManageValueCapture = 1 AND TeamTypeID = 1)     AND ValueCaptureValueTypeId = 1'';  EXEC sp_executesql @SqlQuery, N''@TotalEstimate DECIMAL(18,2) OUTPUT'', @TotalEstimate OUTPUT;  WITH SubtractedValue AS (    SELECT ''Total Top Down Target'' AS KPI,    FORMAT((@TotalEstimate - (SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate)))/1000000,''N2'') AS ''Value (Million)''     FROM ValueCaptureTopDownEstimates ) SELECT * FROM SubtractedValue ', [SuggestionText] = N'Are our initiative projections exceeding our targets?'
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ${Useremail} ', [SuggestionText] = N'How  many initiatives are assigned to me? '
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ${Useremail} ', [SuggestionText] = N'Give my cost reduction initiatives '
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title  FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' ', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title  FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' ', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title  FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets  are tagged to Day 1 processes? '
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title  FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Current State processes? '
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(Title) AS TotalCount, BusinessEntityId      FROM Nodes      WHERE NodeTypeId = 3      GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [SuggestionText] = N'Can you provide me number of processes by op model? '
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId      FROM Nodes N  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId     WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE''     GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [SuggestionText] = N'How many processes we have in current state? '
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId      FROM Nodes N  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId     WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE''     GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [SuggestionText] = N'How many processes we have in Day1 state? '
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', [SuggestionText] = N'Show me the count of TSAs by sub function.'
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', [SuggestionText] = N'Give me the list of TSAs by Provider '
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', [SuggestionText] = N'Give me the list of TSAs by Receiver '
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', [SuggestionText] = N'Can you provide me list of TSAs by phases? '
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', [SuggestionText] = N'Show me the breakdown of TSAs by duration  '
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', [SuggestionText] = N'How many TSAs does each team have? '
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] != ''CAPITAL_EDGE_SUPPORT'' order by TT.Title ', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the project teams that make up the governance structure for this engagement? '
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title ', [SuggestionText] = N'How many milestones does each team have? '
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', [SuggestionText] = N'How many interdependencies does each team have '
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(1) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title ', [SuggestionText] = N'How many risks does each team have? '
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do you hide a new field to the workplan?'
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do you rename a new field to the workplan?'
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to export report to PDF?'
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I add a client user to the PMO app?'
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Can I import an existing Operating Model in PowerPoint to use as my current state model?'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What is a Process Group?'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to view side by side view of current State/Day 1/Future state?'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the most common types of TSAs?'
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to configure TSA stages?'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to set alerts/send email to TSA owners'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'When was the deal announced?'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best strategies for improving a company in the ${Sector} sector?'
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are recent examples of improvements being made in the ${Sector} sector?'
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What is a normative operating model for the ${Sector} sector?'
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are key considerations when defining an operating model for a ${Sector} sector company?'
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the corporate functions typically involved in the ${Sector} sector?'
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provides templates of TSA'
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What should be the typical duration for TSA'
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Things I should keep in mind for longer duration TSAs'
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240507144123_RemoveSemiColon', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      pt.Title AS ProjectTeamTitle,     COUNT(1) AS OverdueRiskCount FROM      RisksAndIssues RI INNER JOIN      ProjectTeams pt ON RI.ProjectTeamId = pt.ID LEFT JOIN      statuses S ON RI.ItemStatusId = S.ID WHERE      RI.IssueRiskCategory = ''Risk''     AND RI.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      pt.Title ORDER BY  OverdueRiskCount desc'
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240508145417_UpdateOneSqlQuery', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ${Username} GROUP BY S.Title '
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = ${Username} '
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ${Username} '
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ${Username} '
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240508160224_ModifyEmailToUsername', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ''${Username}'' GROUP BY S.Title '
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = ''${Username}'' '
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ''${Username}'' '
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ''${Username}'' '
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240508161158_AddingSingleQuoteToUsername', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DELETE FROM [Suggestions]
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title', [Source] = N'project-data', [SuggestionText] = N'How many milestones does each team have?'
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(*) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title', [Source] = N'project-data', [SuggestionText] = N'How many risks does each team have?'
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(*) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title', [Source] = N'project-data', [SuggestionText] = N'How many interdependencies does each team have?'
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT wp.Title  from WorkPlan wp  LEFT JOIN Statuses s on wp.WorkPlanTaskStatusId = s.ID  where s.[Key] = ''BEHIND_SCHEDULE''  AND wp.WorkPlanTaskType = ''Milestone''', [Source] = N'project-data', [SuggestionText] = N'List out behind schedule milestones'
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT RI.Title  from RisksAndIssues RI  LEFT JOIN Statuses s on RI.ItemStatusId = s.ID  where s.[Key] = ''BEHIND_SCHEDULE''  AND RI.IssueRiskCategory = ''Risk''', [Source] = N'project-data', [SuggestionText] = N'List out behind schedule risks'
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT I.Title  from Interdependencies I  LEFT JOIN Statuses s on I.InterdependencyStatusId = s.ID  where s.[Key] = ''BEHIND_SCHEDULE''', [Source] = N'project-data', [SuggestionText] = N'List out behind schedule interdependencies'
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS MilestonesDueThisWeek FROM WorkPlan wp LEFT JOIN statuses s ON wp.WorkPlanTaskStatusId = s.ID LEFT JOIN UserProfiles up on wp.TaskOwnerId = up.ID WHERE wp.WorkPlanTaskType = ''Milestone''   AND YEAR(wp.TaskDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, wp.TaskDueDate) = DATEPART(WEEK, GETDATE())   AND (s.[Key] IS NULL OR s.[Key]  NOT IN (''COMPLETED'', ''CLOSED''))   AND up.EMail = ''${Username}''', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'How many of my milestones are due this week?'
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS RisksAndIssuesDueThisWeek FROM RisksAndIssues RI LEFT JOIN statuses S ON RI.ItemStatusId = S.ID LEFT JOIN UserProfiles up on RI.ItemOwnerId = up.ID WHERE RI.IssueRiskCategory = ''Risk''   AND YEAR(RI.ItemDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, RI.ItemDueDate) = DATEPART(WEEK, GETDATE())   AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED''))   AND up.EMail = ''${Username}''', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'How many of my risks are due this week?'
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      COUNT(*) AS InterdependenciesDueThisWeek FROM      Interdependencies I LEFT JOIN      statuses S ON I.InterdependencyStatusId = S.ID WHERE      YEAR(I.ItemDueDate) = YEAR(GETDATE())     AND DATEPART(WEEK, I.ItemDueDate) = DATEPART(WEEK, GETDATE())     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED''))', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'How many interdependencies are due this week'
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT     pt.Title AS ProjectTeamTitle,     COUNT(*) AS OverdueMilestoneCount FROM      WorkPlan wp INNER JOIN      ProjectTeams pt ON wp.ProjectTeamId = pt.ID LEFT JOIN      statuses s ON wp.WorkPlanTaskStatusId = s.ID WHERE      wp.WorkPlanTaskType = ''Milestone''     AND wp.TaskDueDate < GETDATE()     AND (s.[Key] IS NULL OR s.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      pt.Title ORDER BY      OverdueMilestoneCount DESC', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'Which project team has the most overdue milestones'
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      pt.Title AS ProjectTeamTitle,     COUNT(1) AS OverdueRiskCount FROM      RisksAndIssues RI INNER JOIN      ProjectTeams pt ON RI.ProjectTeamId = pt.ID LEFT JOIN      statuses S ON RI.ItemStatusId = S.ID WHERE      RI.IssueRiskCategory = ''Risk''     AND RI.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      pt.Title ORDER BY  OverdueRiskCount desc', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'Which project team has the most overdue risks?'
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamTitle,     COUNT(*) AS OverdueDependencyCount FROM      Interdependencies I INNER JOIN      ProjectTeams ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID LEFT JOIN      statuses S ON I.InterdependencyStatusId = S.ID WHERE      I.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      ReceiverTeam.Title ORDER BY      OverdueDependencyCount DESC', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'Which project team has the most overdue interdependencies?'
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      RiskImpact,     RiskProbability,     COUNT(*) AS RiskCount FROM      RisksAndIssues WHERE      IssueRiskCategory = ''Risk''     AND ItemStatusId NOT IN (SELECT ID FROM statuses WHERE [Key] IN (''COMPLETED'', ''CLOSED''))  AND (RiskImpact IS NOT NULL   OR RiskProbability IS NOT NULL  ) GROUP BY      RiskImpact,     RiskProbability ORDER BY      RiskImpact, RiskProbability', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'Show me open risks broken down by impact and probability'
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT ''Total Top Down Target'' AS KPI, FORMAT((SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate))/1000000,''N2'') AS ''Value (Million)'' FROM ValueCaptureTopDownEstimates ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'What are our targets for this engagement?'
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'DECLARE @Y INT; DECLARE @ColumnName NVARCHAR(50); DECLARE @SqlQuery NVARCHAR(MAX);  SELECT @Y = TRY_CAST(JSON_VALUE([Value], ''$[0].defaultValue.Id'') AS INT) FROM MetastoreGeneralSettings WHERE [Key] = ''VC_PROJECT_TIMEFRAME_CADENCE'';  SET @ColumnName = ''Y'' + CAST(@Y AS NVARCHAR(10)) + ''M12Estimate'';  SET @SqlQuery = ''     SELECT (SUM(ISNULL ('' + QUOTENAME(@ColumnName) + '', 0))*12)/1000000 AS ValuetoAchieve FROM ValueCaptureEstimates VCE JOIN ValueCaptureInitiatives VCI ON VCE.ValueCaptureInitiativeId = VCI.ID WHERE ISNULL(VCE.Recurring,0) = 1 AND VCI.IsItemActive=1 AND ProjectTeamID IN (SELECT ID FROM ProjectTeams WHERE ManageValueCapture = 1 AND TeamTypeID = 1) AND ValueCaptureValueTypeId = 1'';  EXEC sp_executesql @SqlQuery', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'How much value are we planning to achieve from our initiatives?'
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ''${Username}'' GROUP BY S.Title ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'How are my initiatives doing?'
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = ''${Username}'' ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'Are there any risks or issues with initiatives that I’m responsible for?'
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'DECLARE @Y INT; DECLARE @ColumnName NVARCHAR(50); DECLARE @SqlQuery NVARCHAR(MAX); DECLARE @TotalEstimate DECIMAL(18,2);  SELECT @Y = TRY_CAST(JSON_VALUE([Value], ''$[0].defaultValue.Id'') AS INT) FROM MetastoreGeneralSettings WHERE [Key] = ''VC_PROJECT_TIMEFRAME_CADENCE'';  SET @ColumnName = ''Y'' + CAST(@Y AS NVARCHAR(10)) + ''M12Estimate'';  SET @SqlQuery = ''     SELECT @TotalEstimate = (SUM(ISNULL ('' + QUOTENAME(@ColumnName) + '', 0))*12)     FROM ValueCaptureEstimates VCE      JOIN ValueCaptureInitiatives VCI ON VCE.ValueCaptureInitiativeId = VCI.ID      WHERE ISNULL(VCE.Recurring,0) = 1      AND VCI.IsItemActive=1     AND ProjectTeamID IN (SELECT ID FROM ProjectTeams WHERE ManageValueCapture = 1 AND TeamTypeID = 1)     AND ValueCaptureValueTypeId = 1'';  EXEC sp_executesql @SqlQuery, N''@TotalEstimate DECIMAL(18,2) OUTPUT'', @TotalEstimate OUTPUT;  WITH SubtractedValue AS (    SELECT ''Total Top Down Target'' AS KPI,    FORMAT((@TotalEstimate - (SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate)))/1000000,''N2'') AS ''Value (Million)''     FROM ValueCaptureTopDownEstimates ) SELECT * FROM SubtractedValue ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'Are our initiative projections exceeding our targets?'
WHERE [ID] = 18;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ''${Username}'' ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'How  many initiatives are assigned to me? '
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ''${Username}'' ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'Give my cost reduction initiatives '
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title  FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 22;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title  FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 23;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title  FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many assets  are tagged to Day 1 processes? '
WHERE [ID] = 24;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title  FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many assets are tagged to Current State processes? '
WHERE [ID] = 25;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(Title) AS TotalCount, BusinessEntityId      FROM Nodes      WHERE NodeTypeId = 3      GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Can you provide me number of processes by op model? '
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId      FROM Nodes N  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId     WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE''     GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many processes we have in current state? '
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId      FROM Nodes N  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId     WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE''     GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many processes we have in Day1 state? '
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 29;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Show me the count of TSAs by sub function.'
WHERE [ID] = 30;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Give me the list of TSAs by Provider '
WHERE [ID] = 31;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Give me the list of TSAs by Receiver '
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Can you provide me list of TSAs by phases? '
WHERE [ID] = 33;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the breakdown of TSAs by duration  '
WHERE [ID] = 34;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'How many TSAs does each team have? '
WHERE [ID] = 35;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] != ''CAPITAL_EDGE_SUPPORT'' order by TT.Title ', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the project teams that make up the governance structure for this engagement? '
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title ', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How many milestones does each team have? '
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How many interdependencies does each team have '
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(1) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title ', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How many risks does each team have? '
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [Source] = N'ey-guidance', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [Source] = N'ey-guidance', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [Source] = N'ey-guidance', [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [Source] = N'ey-guidance', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do you hide a new field to the workplan?'
WHERE [ID] = 44;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do you rename a new field to the workplan?'
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How to export report to PDF?'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do I add a client user to the PMO app?'
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'Can I import an existing Operating Model in PowerPoint to use as my current state model?'
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What is a Process Group?'
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'How to view side by side view of current State/Day 1/Future state?'
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the most common types of TSAs?'
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'How to configure TSA stages?'
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'How to set alerts/send email to TSA owners'
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'When was the deal announced?'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are the best strategies for improving a company in the ${Sector} sector?'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are recent examples of improvements being made in the ${Sector} sector?'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'What is a normative operating model for the ${Sector} sector?'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'What are key considerations when defining an operating model for a ${Sector} sector company?'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'internet', [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'What are the corporate functions typically involved in the ${Sector} sector?'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'Provides templates of TSA'
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'What should be the typical duration for TSA'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'Things I should keep in mind for longer duration TSAs'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [Source] = N'internet', [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240510093440_RemovingProjectDocumentSuggestions', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title', [SuggestionText] = N'How many interdependencies does each receiver team have?'
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT I.Title  from Interdependencies I  LEFT JOIN InterdependencyStatuses s on I.InterdependencyStatusId = s.ID  where s.[Key] = ''BEHIND_SCHEDULE'''
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ProviderTeam.Title AS ProviderTeamTitle,     COUNT(1) AS OverdueDependencyCount FROM      Interdependencies I INNER JOIN      ProjectTeams ProviderTeam ON I.ProviderProjectTeamId = ProviderTeam.ID LEFT JOIN      InterdependencyStatuses S ON I.InterdependencyStatusId = S.ID WHERE      I.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      ProviderTeam.Title ORDER BY      OverdueDependencyCount DESC', [SuggestionText] = N'Which provider project team has the most overdue interdependencies?'
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamTitle,     COUNT(1) AS OverdueDependencyCount FROM      Interdependencies I INNER JOIN      ProjectTeams ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID LEFT JOIN      InterdependencyStatuses S ON I.InterdependencyStatusId = S.ID WHERE      I.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY      ReceiverTeam.Title ORDER BY      OverdueDependencyCount DESC', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Which receiver project team has the most overdue interdependencies?'
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ProviderTeam.Title AS ProviderTeamame,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ProviderTeam ON I.ProviderProjectTeamId = ProviderTeam.ID GROUP BY      ProviderTeam.Title', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How many interdependencies does each provider team have '
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT ''Total Top Down Target'' AS KPI, FORMAT((SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate))/1000000,''N2'') AS ''Value (Million)'' FROM ValueCaptureTopDownEstimates ', [SuggestionText] = N'What are our targets for this engagement?'
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'DECLARE @Y INT; DECLARE @ColumnName NVARCHAR(50); DECLARE @SqlQuery NVARCHAR(MAX);  SELECT @Y = TRY_CAST(JSON_VALUE([Value], ''$[0].defaultValue.Id'') AS INT) FROM MetastoreGeneralSettings WHERE [Key] = ''VC_PROJECT_TIMEFRAME_CADENCE'';  SET @ColumnName = ''Y'' + CAST(@Y AS NVARCHAR(10)) + ''M12Estimate'';  SET @SqlQuery = ''     SELECT (SUM(ISNULL ('' + QUOTENAME(@ColumnName) + '', 0))*12)/1000000 AS ValuetoAchieve FROM ValueCaptureEstimates VCE JOIN ValueCaptureInitiatives VCI ON VCE.ValueCaptureInitiativeId = VCI.ID WHERE ISNULL(VCE.Recurring,0) = 1 AND VCI.IsItemActive=1 AND ProjectTeamID IN (SELECT ID FROM ProjectTeams WHERE ManageValueCapture = 1 AND TeamTypeID = 1) AND ValueCaptureValueTypeId = 1'';  EXEC sp_executesql @SqlQuery', [SuggestionText] = N'How much value are we planning to achieve from our initiatives?'
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ''${Username}'' GROUP BY S.Title ', [SuggestionText] = N'How are my initiatives doing?'
WHERE [ID] = 18;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = ''${Username}'' ', [SuggestionText] = N'Are there any risks or issues with initiatives that I’m responsible for?'
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'DECLARE @Y INT; DECLARE @ColumnName NVARCHAR(50); DECLARE @SqlQuery NVARCHAR(MAX); DECLARE @TotalEstimate DECIMAL(18,2);  SELECT @Y = TRY_CAST(JSON_VALUE([Value], ''$[0].defaultValue.Id'') AS INT) FROM MetastoreGeneralSettings WHERE [Key] = ''VC_PROJECT_TIMEFRAME_CADENCE'';  SET @ColumnName = ''Y'' + CAST(@Y AS NVARCHAR(10)) + ''M12Estimate'';  SET @SqlQuery = ''     SELECT @TotalEstimate = (SUM(ISNULL ('' + QUOTENAME(@ColumnName) + '', 0))*12)     FROM ValueCaptureEstimates VCE      JOIN ValueCaptureInitiatives VCI ON VCE.ValueCaptureInitiativeId = VCI.ID      WHERE ISNULL(VCE.Recurring,0) = 1      AND VCI.IsItemActive=1     AND ProjectTeamID IN (SELECT ID FROM ProjectTeams WHERE ManageValueCapture = 1 AND TeamTypeID = 1)     AND ValueCaptureValueTypeId = 1'';  EXEC sp_executesql @SqlQuery, N''@TotalEstimate DECIMAL(18,2) OUTPUT'', @TotalEstimate OUTPUT;  WITH SubtractedValue AS (    SELECT ''Total Top Down Target'' AS KPI,    FORMAT((@TotalEstimate - (SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate)))/1000000,''N2'') AS ''Value (Million)''     FROM ValueCaptureTopDownEstimates ) SELECT * FROM SubtractedValue ', [SuggestionText] = N'Are our initiative projections exceeding our targets?'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ''${Username}'' ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How  many initiatives are assigned to me? '
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ''${Username}'' ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Give my cost reduction initiatives '
WHERE [ID] = 22;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title ', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 23;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title  FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' ', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 24;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title  FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' ', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 25;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title  FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets  are tagged to Day 1 processes? '
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title  FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Current State processes? '
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(Title) AS TotalCount, BusinessEntityId      FROM Nodes      WHERE NodeTypeId = 3      GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [SuggestionText] = N'Can you provide me number of processes by op model? '
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId      FROM Nodes N  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId     WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE''     GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many processes we have in current state? '
WHERE [ID] = 29;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM (     SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId      FROM Nodes N  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId     WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE''     GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many processes we have in Day1 state? '
WHERE [ID] = 30;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 31;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', [SuggestionText] = N'Show me the count of TSAs by sub function.'
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', [SuggestionText] = N'Give me the list of TSAs by Provider '
WHERE [ID] = 33;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', [SuggestionText] = N'Give me the list of TSAs by Receiver '
WHERE [ID] = 34;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', [SuggestionText] = N'Can you provide me list of TSAs by phases? '
WHERE [ID] = 35;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the breakdown of TSAs by duration  '
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'How many TSAs does each team have? '
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] != ''CAPITAL_EDGE_SUPPORT'' order by TT.Title ', [SuggestionText] = N'What are the project teams that make up the governance structure for this engagement? '
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title ', [SuggestionText] = N'How many milestones does each team have? '
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many interdependencies does each team have '
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(1) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title ', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many risks does each team have? '
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 44;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do you hide a new field to the workplan?'
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do you rename a new field to the workplan?'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to export report to PDF?'
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I add a client user to the PMO app?'
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Can I import an existing Operating Model in PowerPoint to use as my current state model?'
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What is a Process Group?'
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How to view side by side view of current State/Day 1/Future state?'
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the most common types of TSAs?'
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'How to configure TSA stages?'
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'How to set alerts/send email to TSA owners'
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How to export report to PPT?'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType}'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'When was the deal announced?'
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best strategies for improving a company in the ${Sector} sector?'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are recent examples of improvements being made in the ${Sector} sector?'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What is a normative operating model for the ${Sector} sector?'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are key considerations when defining an operating model for a ${Sector} sector company?'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the corporate functions typically involved in the ${Sector} sector?'
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provides templates of TSA'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What should be the typical duration for TSA'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Things I should keep in mind for longer duration TSAs'
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Suggestions]'))
    SET IDENTITY_INSERT [Suggestions] ON;
INSERT INTO [Suggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy])
VALUES (111, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the best practices to run weekly status meetings?', NULL, N'System'),
(112, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[Suggestions]'))
    SET IDENTITY_INSERT [Suggestions] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240513065824_SuggestionPMOInterdependencyUpdate', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DELETE FROM [Suggestions]
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best strategies for improving a company in the ${Sector} sector?'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are recent examples of improvements being made in the ${Sector} sector?'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What is a normative operating model for the ${Sector} sector?'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are key considerations when defining an operating model for a ${Sector} sector company?'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the corporate functions typically involved in the ${Sector} sector?'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provides templates of TSA'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What should be the typical duration for TSA'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Things I should keep in mind for longer duration TSAs'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240514083904_RemovingOneSuggestionFromPMO', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DELETE FROM [Suggestions]
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

DELETE FROM [Suggestions]
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I add a client user to the PMO app?'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past'
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType} project.'
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past'
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past.'
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'Help me understand PMO methodology for this ${ProjectType} project.'
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are the best strategies for improving a company in the ${Sector} sector?'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are recent examples of improvements being made in the ${Sector} sector?'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'internet', [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What is a normative operating model for the ${Sector} sector?'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are key considerations when defining an operating model for a ${Sector} sector company?'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are the best practices to optimize future state of ${XYZ} Workstream?'
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the corporate functions typically involved in the ${Sector} sector?'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Provides templates of TSA'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What should be the typical duration for TSA'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Things I should keep in mind for longer duration TSAs'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240515072150_SuggestionUpdateForAllAPP', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DELETE FROM [Suggestions]
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the corporate functions typically involved in the ${Sector} sector?'
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Provides templates of TSA'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What should be the typical duration for TSA'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'Things I should keep in mind for longer duration TSAs'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the key risks for a ${ProjectType} project?'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the key milestones for a ${ProjectType} project?'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [Suggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240515130948_RemovingTagWIthXYZInSuggestion', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

ALTER TABLE [Suggestions] DROP CONSTRAINT [PK_Suggestions];
GO

ALTER TABLE [MessageFeedbacks] DROP CONSTRAINT [PK_MessageFeedbacks];
GO

ALTER TABLE [CopilotFeedbacks] DROP CONSTRAINT [PK_CopilotFeedbacks];
GO

ALTER TABLE [CopilotConfigurations] DROP CONSTRAINT [PK_CopilotConfigurations];
GO

ALTER TABLE [ChatHistorys] DROP CONSTRAINT [PK_ChatHistorys];
GO

EXEC sp_rename N'[Suggestions]', N'AssistantSuggestions';
GO

EXEC sp_rename N'[MessageFeedbacks]', N'AssistantMessageFeedbacks';
GO

EXEC sp_rename N'[CopilotFeedbacks]', N'AssistantFeedbacks';
GO

EXEC sp_rename N'[CopilotConfigurations]', N'AssistantConfigurations';
GO

EXEC sp_rename N'[ChatHistorys]', N'AssistantChatHistory';
GO

ALTER TABLE [AssistantSuggestions] ADD CONSTRAINT [PK_AssistantSuggestions] PRIMARY KEY ([ID]);
GO

ALTER TABLE [AssistantMessageFeedbacks] ADD CONSTRAINT [PK_AssistantMessageFeedbacks] PRIMARY KEY ([ID]);
GO

ALTER TABLE [AssistantFeedbacks] ADD CONSTRAINT [PK_AssistantFeedbacks] PRIMARY KEY ([ID]);
GO

ALTER TABLE [AssistantConfigurations] ADD CONSTRAINT [PK_AssistantConfigurations] PRIMARY KEY ([ID]);
GO

ALTER TABLE [AssistantChatHistory] ADD CONSTRAINT [PK_AssistantChatHistory] PRIMARY KEY ([ID]);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240517094719_RenameTableToCopilot', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO


                CREATE OR ALTER VIEW [dbo].[ViewAssistantQuestionAnswer] AS
                select 
                    l.id as ID
                    ,x.instanceId as InstanceId
                    ,x.chatId as ChatId
                    ,x.messageId as QuestionId
                    ,x.inputSources as InputSources
                    ,x.question as Question
                    ,y.content as Answer
                    ,y.sourceName as OutputSourceName
                    ,y.status as OutputStatus
                    ,y.sqlQuery as OutputSqlQuery
                    ,y.citingSources as OutputCitingSources

                from AssistantChatHistory l

                cross apply openjson(l.additionalinfo, '$')  with(   
	                instanceId nvarchar(100) '$.instanceId',
                    messageId int '$.input.messageId',
	                chatId nvarchar(100) '$.input.chatId',
                    question nvarchar(max) '$.input.question',
	                inputSources nvarchar(max) '$.input.inputSources' as json
                ) x

                cross apply openjson(l.additionalinfo, '$.output.response') with (
                    sourceName      nvarchar(100),
                    content      nvarchar(100),
	                status      nvarchar(100),
                    sqlQuery      nvarchar(max),
                    citingSources nvarchar(max) as json
                ) y
            
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240524091203_AddingViewQuestionAnswer', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

ALTER TABLE [AssistantSuggestions] ADD [VisibleToAssistant] bit NULL;
GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS MilestonesDueThisWeek FROM WorkPlan wp LEFT JOIN statuses s ON wp.WorkPlanTaskStatusId = s.ID LEFT JOIN UserProfiles up on wp.TaskOwnerId = up.ID WHERE wp.WorkPlanTaskType = ''Milestone''   AND YEAR(wp.TaskDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, wp.TaskDueDate) = DATEPART(WEEK, GETDATE())   AND (s.[Key] IS NULL OR s.[Key]  NOT IN (''COMPLETED'', ''CLOSED''))   AND up.EMail = ''{Username}''', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS RisksAndIssuesDueThisWeek FROM RisksAndIssues RI LEFT JOIN statuses S ON RI.ItemStatusId = S.ID LEFT JOIN UserProfiles up on RI.ItemOwnerId = up.ID WHERE RI.IssueRiskCategory = ''Risk''   AND YEAR(RI.ItemDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, RI.ItemDueDate) = DATEPART(WEEK, GETDATE())   AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED''))   AND up.EMail = ''{Username}''', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title AS  WorkPlanItem FROM Workplan W LEFT JOIN UserProfiles UP ON W.TaskOwnerID = UP.ID WHERE UP.Title = {Username} ', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List out workplan items assigned to User', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1 CAST(PeriodEndDate AS DATE) AS WeeklyStatusDueDate FROM ReportingPeriods WHERE CAST(GETDATE() AS DATE) BETWEEN CAST(PeriodStartDate AS DATE) AND CAST(PeriodEndDate AS DATE) ORDER BY Modified DESC', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'When is my weekly status report due?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS FunctionalOwner FROM ProjectTeams PT JOIN Userprofiles UP ON PT.ItemOwnerID = UP.ID WHERE PT.Title = {ProjectTeam}', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Who is the functional owner of HR team?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 18;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT WP.Title FROM Workplan WP JOIN ProjectTeams PT ON WP.ProjectTeamId = PT.ID JOIN Statuses S ON WP.WorkPlanTaskStatusId = S.ID WHERE S.[Key] = ''BEHIND_SCHEDULE'' AND PT.Title = {ProjectTeam}', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List out Behind Schedule items for HR team', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM Workplan WHERE DATEPART(ww,TaskDueDate) = DATEPART(ww,GETDATE()) + 1', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List out workplan items due next week', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SF.Title FROM Subfunctions SF JOIN Functions F ON SF.FunctionID = F.ID WHERE F.Title = {ProjectTeam}', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List out sub functions of Finance', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT WS.Title FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN WeeklyStatusStatuses WS ON PSE.WeeklyStatusStatusId = WS.ID JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = {ProjectTeam} AND RP.ID = (SELECT ID -1 FROM ReportingPeriods WHERE GETDATE() BETWEEN PeriodStartDate AND PeriodEndDate)', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What was the status of Finance team last week?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 22;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AN.Title, AN.AccomplishmentNextstepCategory FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = {ProjectTeam} AND RP.ID = (SELECT ID -1 FROM ReportingPeriods WHERE GETDATE() BETWEEN PeriodStartDate AND PeriodEndDate) ORDER BY AN.AccomplishmentNextstepCategory', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What were the accomplishment and next steps of Finance team last week?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 23;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title  FROM Interdependencies  WHERE CAST(ItemDueDate AS DATE) < CAST(GETDATE() AS DATE)', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List out overdue interdependencies', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 24;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1 PT.Title Team, SUM(Counts) TotalInterdependencies FROM ( SELECT ProviderProjectTeamID TeamID, Count(ID) Counts FROM Interdependencies WHERE CAST(ItemDueDate AS DATE) < CAST(GETDATE() AS DATE) GROUP BY ProviderProjectTeamID UNION ALL SELECT ReceiverProjectTeamID, Count(ID) FROM Interdependencies WHERE CAST(ItemDueDate AS DATE) < CAST(GETDATE() AS DATE) GROUP BY ReceiverProjectTeamID ) SUB JOIN ProjectTeams PT ON SUB.TeamID = PT.ID GROUP BY PT.Title ORDER BY TotalInterdependencies DESC', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List out team with most overdue interdependencies', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 25;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title AS RisksWithNoMitigation FROM RisksandIssues WHERE RiskMitigation IS NULL AND IssueRiskCategory = ''Risk''', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List out Risks with no mitigation plan in place', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title AS RisksWithNoOwner FROM RisksandIssues WHERE ItemOwnerID IS NULL AND IssueRiskCategory = ''Risk''', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List out Risks with no owners assigned to them', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title As Milestones FROM Workplan W WHERE WorkplanTaskType = ''Milestone'' AND CAST(StartDate AS DATE) > CAST(GETDATE() AS DATE) AND EXISTS (SELECT 1 FROM [dbo].[WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues] WHERE WorkplanID = W.ID)', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Show me upcoming milestones that have risks linked to it?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title AS Team FROM ProjectTeams PT JOIN TeamTypes TT ON PT.TeamTypeID = TT.ID WHERE TT.[Key] = ''PROJECT_MANAGEMENT''', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How many teams do I have in PMO?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 29;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Child.Title AS Teams FROM ProjectTeams Parent JOIN ProjectTeams Child ON Child.ParentProjectTeamId = Parent.ID WHERE Parent.Title = {ProjectTeam}', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are child teams of Finance?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 30;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Parent.Title AS ParentTeam FROM ProjectTeams Parent JOIN ProjectTeams Child ON Child.ParentProjectTeamId = Parent.ID WHERE Child.Title = {ProjectTeam}', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What is the parent team of Tax', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 31;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AN.Title FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN UserProfiles UP ON PT.ItemOwnerID = UP.ID JOIN AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE UP.EMail = {Username} AND RP.ID = (SELECT ID -1 FROM ReportingPeriods WHERE GETDATE() BETWEEN PeriodStartDate AND PeriodEndDate) AND AN.AccomplishmentNextstepCategory = ''Accomplishment''', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are my accomplishments from last reporting period ?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AN.Title AS NextSteps FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = {ProjectTeam} AND RP.ID = (SELECT ID FROM ReportingPeriods WHERE GETDATE() BETWEEN PeriodStartDate AND PeriodEndDate) AND AN.AccomplishmentNextstepCategory = ''Next Step''', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are next steps for Finance team?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 33;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.Title FROM Interdependencies I JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID WHERE UP.EMail = {Username} ', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List the interdependencies for which I''m the provider ', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 34;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) IssueCoutnwithNoMitigationPlan FROM RisksandIssues WHERE RiskMitigation IS NULL AND IssueRiskCategory = ''Issue''', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How many issues don''t have a mitigation plan ?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 35;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UniqueItemIdentifier,Title FROM WORKPLAN WHERE TaskOwnerId IS NULL AND WorkPlanTaskType = ''Task''', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List tasks that have missing owners', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) [HighRiskItemCount] FROM RisksAndIssues R JOIN ProjectTeams PT ON PT.ID = R.ProjectTeamId WHERE RiskImpact = ''High'' AND IssueRiskCategory = ''Risk'' AND PT.Title ={ProjectTeam}', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How many high risk items are there for IT ?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  W.Title,''Workplan'' [Category] FROM Workplan W LEFT JOIN UserProfiles UP ON W.TaskOwnerID = UP.ID WHERE UP.Title = {Username} UNION ALL  SELECT RI.Title,IssueRiskCategory [Category] FROM RisksAndIssues RI LEFT JOIN UserProfiles UP ON RI.ItemOwnerId = UP.ID WHERE UP.Title = {Username} UNION ALL SELECT A.Title,''Action'' [Category] FROM Actions A LEFT JOIN UserProfiles UP ON A.ItemOwnerId = UP.ID WHERE UP.Title = {Username} UNION ALL  SELECT D.Title,''Decision'' [Category] FROM Decisions D LEFT JOIN UserProfiles UP ON D.ItemOwnerId = UP.ID WHERE UP.Title = {Username} UNION ALL  SELECT I.Title,''Interdependecy as Provider'' [Category] FROM Interdependencies I LEFT JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID WHERE UP.Title = {Username}  UNION ALL  SELECT I.Title,''Interdependecy as Receiver'' [Category] FROM Interdependencies I LEFT JOIN UserProfiles UP ON I.ReceiverOwnerId = UP.ID WHERE UP.Title = {Username}', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List all workplan, raid and interdependencies assigned to Amil Shah', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team] FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID JOIN WeeklyStatusStatuses WS ON WS.ID = PSE.WeeklyStatusStatusId WHERE  RP.ID = (SELECT ID  FROM ReportingPeriods WHERE GETDATE() BETWEEN PeriodStartDate AND PeriodEndDate) AND WS.[KEY] IN (''AT_RISK'',''BEHIND_SCHEDULE'')', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Are there any project teams that are ''At Risk'' or ''Behind Schedule''', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(W.ID) as TasksCompletedLastWeek FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID  WHERE  CAST(ActualEndDate AS DATE) >= DATEADD(week,DATEDIFF(week, 0, GETDATE()) -1,0) AND CAST(ActualEndDate AS DATE) < DATEADD(week, DATEDIFF(week, 0, GETDATE()), 0) AND S.[KEY] IN (''COMPLETED'')', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How many workplan tasks were completed last week?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(W.ID) as TasksCompletedThisWeek  FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID  WHERE CAST(ActualEndDate AS DATE) >= CAST(DATEADD(week,DATEDIFF(week,0,GETDATE()), 0) AS DATE) AND CAST(ActualEndDate AS DATE) < CAST( DATEADD(week,DATEDIFF(week,0, GETDATE()) + 1,0) AS DATE) AND S.[KEY] IN (''COMPLETED'') ', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How many workplan tasks are completed this week?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(W.ID) as TasksDueThisWeek  FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID WHERE CAST(TaskDueDate AS DATE) >= CAST(DATEADD(week, DATEDIFF(week, 0, GETDATE()),0) AS DATE) AND CAST(TaskDueDate AS DATE) < CAST( DATEADD(week, DATEDIFF(week,0, GETDATE()) + 1, 0) AS DATE) AND S.[KEY] NOT IN (''COMPLETED'', ''CANCELLED'') ', [Source] = N'project-data', [SuggestionText] = N'How many workplan tasks that are due this week?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(W.ID) as TasksDueNextWeek FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID  WHERE CAST(TaskDueDate AS DATE) >=  CAST(DATEADD(week, DATEDIFF(week,0, GETDATE()) + 1,0) AS DATE)   AND CAST(TaskDueDate AS DATE) < CAST(DATEADD(week,DATEDIFF(week,0,GETDATE()) + 2,0) AS DATE)   AND S.[KEY] NOT IN (''COMPLETED'', ''CANCELLED'') ', [Source] = N'project-data', [SuggestionText] = N'How many workplan tasks that are due next week?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.ID,W.Title FROM Workplan W LEFT JOIN Workstreams WS On  W.WorkstreamId=Ws.ID WHERE WS.Title LIKE {Workstream}', [Source] = N'project-data', [SuggestionText] = N'How can I export workplan for just Finance workstream?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 44;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT COUNT(WR.ID) Count,''Risks'' as Category FROM Workplan W JOIN WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues WR On WR.WorkPlanId = W.ID LEFT JOIN RisksAndIssues RI ON RI.ID = WR.RisksAndIssueId WHERE RI.IssueRiskCategory = ''Risk''  UNION ALL SELECT COUNT(WR.ID) Count, ''Issues'' as Category FROM Workplan W JOIN WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues WR On WR.WorkPlanId = W.ID LEFT JOIN RisksAndIssues RI ON RI.ID = WR.RisksAndIssueId  WHERE RI.IssueRiskCategory = ''Issue''  UNION ALL SELECT COUNT(WA.ID) Count, ''Actions'' as Category  FROM Workplan W JOIN WorkPlansToActionsForAssociatedActions WA On WA.WorkPlanId = W.ID  UNION ALL SELECT    COUNT(WD.ID) Count,    ''Decisions'' as Category  FROM    Workplan W    JOIN WorkPlansToDecisionsForAssociatedDecisions WD On WD.WorkPlanId = W.ID', [Source] = N'project-data', [SuggestionText] = N'How many Risks, Issues, Actions and Decisions linked to Workplan Tasks?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT WSS.Title StatusValue ,''CurrentStatus'' as Category FROM ProjectStatusEntries PSE LEFT JOIN WeeklyStatusStatuses WSS ON WSS.ID=PSE.WeeklyStatusStatusId LEFT JOIN ProjectTeams PT on PT.ID=PSE.ProjectTeamId WHERE PSE.ReportingPeriodId=(SELECT TOP 1 ReportingPeriods.ID FROM ReportingPeriods Where cast(ReportingPeriods.PeriodStartDate as date) <= cast(getDate() as date) Order BY PeriodEndDate DESC) AND PT.Title like {ProjectTeam}  UNION SELECT WSS.Title StatusValue ,''PreviousStatus'' as Category FROM ProjectStatusEntries PSE  LEFT JOIN WeeklyStatusStatuses WSS ON WSS.ID=PSE.WeeklyStatusStatusId LEFT JOIN ProjectTeams PT on PT.ID=PSE.ProjectTeamId WHERE PSE.ReportingPeriodId=(SELECT  ReportingPeriods.ID FROM   ReportingPeriods Where cast(ReportingPeriods.PeriodStartDate as date) <= cast(getDate() as date) Order BY PeriodEndDate DESC Offset 1 Rows FETCH NEXT 1 ROWS ONLY) AND  PT.Title like {ProjectTeam}', [Source] = N'project-data', [SuggestionText] = N'What''s prior week and current week status for Finance function?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.UniqueItemIdentifier, RI.Title, ''Risks'' as Category FROM RisksAndIssues RI LEFT JOIN Statuses S ON RI.ItemStatusId = S.ID WHERE S.[KEY] NOT IN (''COMPLETED'', ''CANCELLED'', ''CLOSED'', ''ON_HOLD'') AND RI.IssueRiskCategory = ''Risk'' UNION  SELECT RI.UniqueItemIdentifier, RI.Title, ''Issues'' as Category FROM RisksAndIssues RI LEFT JOIN Statuses S ON RI.ItemStatusId = S.ID  WHERE S.[KEY] NOT IN (''COMPLETED'', ''CANCELLED'', ''CLOSED'', ''ON_HOLD'') AND RI.IssueRiskCategory = ''Issue''  UNION  SELECT A.UniqueItemIdentifier,  A.Title,  ''Actions'' as Category FROM  Actions A  LEFT JOIN Statuses S ON A.ItemStatusId = S.ID WHERE  S.[KEY] NOT IN (   ''COMPLETED'', ''CANCELLED'', ''CLOSED'',   ''ON_HOLD''  ) UNION SELECT  D.UniqueItemIdentifier,  D.Title,  ''Decisions'' as Category FROM  Decisions D  LEFT JOIN Statuses S ON D.ItemStatusId = S.ID WHERE  S.[KEY] NOT IN (   ''COMPLETED'', ''CANCELLED'', ''CLOSED'',   ''ON_HOLD''  ) ', [Source] = N'project-data', [SuggestionText] = N'List all Open Risks, Issues, Actions and Decisions', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title as OpenInterdependencies, S.Title as Status FROM Interdependencies I LEFT JOIN InterdependencyStatuses S ON I.InterdependencyStatusId = S.ID  WHERE S.[KEY] NOT IN (''COMPLETED'', ''Canceled'') ', [Source] = N'project-data', [SuggestionText] = N'List all Open Interdependencies', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT W.UniqueItemIdentifier, W.TITLE as CriticalTasks FROM Workplan W WHERE W.IsCritical = 1', [Source] = N'project-data', [SuggestionText] = N'List all critical workplan tasks?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title as ITIntProvider FROM Interdependencies I LEFT JOIN PROJECTTEAMS PT ON PT.ID = I.ProviderProjectTeamID WHERE PT.Title = {ProjectTeam} ', [Source] = N'project-data', [SuggestionText] = N'List all Interdependencies where IT is Interdependency Provider', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title as ITIntReceiver FROM Interdependencies I LEFT JOIN PROJECTTEAMS PT ON PT.ID = I.ReceiverProjectTeamId WHERE PT.Title = {ProjectTeam} ', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'List all Interdependencies where IT is Interdependency Receiver', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(ID) as CountofCriticalPath FROM Workplan W WHERE W.IsCritical = 1 and W.WorkPlanTaskType = ''Milestone''', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'How many critical milestones in workplan?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(W.ID) AS TasksDueIn30Days FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID WHERE CAST(W.TaskDueDate AS DATE) <= CAST(GETDATE() + 30 AS DATE) AND CAST(W.TaskDueDate AS DATE) >= CAST(GETDATE() AS DATE) AND S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'')', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'How many tasks are due in next 30 days?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UniqueItemIdentifier,Title TasksWithoutOwner FROM WorkPlan W WHERE W.TaskOwnerId IS NULL ', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'List any workplan items that do not have an owner assigned.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UniqueItemIdentifier,Title TasksWithoutOwner FROM WorkPlan W WHERE W.TaskOwnerId IS NULL', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'List any workplan items that do not have an owner assigned.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UniqueItemIdentifier,Title ItemsWithoutOwner, ''RisksAndIssues'' AS Category FROM RisksAndIssues RI WHERE RI.ItemOwnerId IS NULL UNION SELECT UniqueItemIdentifier,Title ItemsWithoutOwner, ''Actions'' AS Category FROM Actions RI WHERE RI.ItemOwnerId IS NULL UNION SELECT UniqueItemIdentifier,Title ItemsWithoutOwner, ''Decisions'' AS Category FROM Decisions RI WHERE RI.ItemOwnerId IS NULL', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'List any RAID log items that do not have an owner assigned.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title AS InterdependencyWithoutTasks FROM Interdependencies I LEFT JOIN WorkPlansToInterdependenciesForProviderTasks WTP ON WTP.InterdependencyId = I.ID WHERE WTP.ID IS NULL  UNION  SELECT I.UniqueItemIdentifier, I.Title AS InterdependencyWithoutTasks FROM Interdependencies I LEFT JOIN WorkPlansToInterdependenciesForReceiverTasks WTR ON WTR.InterdependencyId = I.ID WHERE WTR.ID IS NULL;', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'List interdependencies that do not have a provider or receiver task linked.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT UP.Title AS UserName FROM WorkPlan W LEFT JOIN UserProfiles UP ON UP.ID = W.TaskOwnerId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId WHERE S.[Key] IN (''AT_RISK'',''BEHIND_SCHEDULE'') AND UP.Title IS NOT NULL', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'Show me a list of all users that have behind schedule or at risk items assigned to them ', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title RisksAndIssues, IssueRiskCategory FROM RisksAndIssues RI LEFT JOIN Statuses S ON S.ID = RI.ItemStatusId WHERE IsCritical IN (1) AND S.[Key] NOT IN (''CLOSED'')', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'Show me all Risks and issues that are flagged as Critical and not complete', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ProjectTeam FROM( SELECT PT.Title AS Projectteam, COUNT(PT.ID) AS TeamUpdateCount, DENSE_RANK() OVER (ORDER BY COUNT(PT.ID)) ROW_NUM FROM WorkPlan W LEFT JOIN ProjectTeams PT ON PT.ID = W.ProjectTeamId WHERE CAST(W.Modified AS DATE) BETWEEN DATEADD(day, -14, CAST(GETDATE() AS DATE)) AND DATEADD(day, -7, CAST(GETDATE() AS DATE)) AND PT.ItemIsActive=1 GROUP BY pt.title) A', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'Which functions has made the least # of updates to their workplan in last week?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title AS [List of Critical Milestones due in next 15 days with no owners Assigned yet] FROM WorkPlan WHERE WorkPlanTaskType IN (''Milestone'') AND CAST(TaskDueDate AS DATE) BETWEEN CAST(GETDATE() AS DATE) AND DATEADD(day, 15, CAST(GETDATE() AS DATE)) AND IsCritical IN (1) AND TaskOwnerId IS NULL', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'Can you please list down all milestones due in next 15 days which are on critical path and have no owners assigned to them?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title as [List down all tasks associated with interdependencies] from Workplan where ID in ( SELECT WorkPlanId FROM WorkPlansToInterdependenciesForReceiverTasks UNION select WorkPlanId FROM WorkPlansToInterdependenciesForProviderTasks) AND WorkPlanTaskType=''Task''', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'Can you please list down all tasks associated with interdependencies?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title AS WorkplanAssociatedWithInterdependencies FROM WorkPlan W INNER JOIN WorkPlansToInterdependenciesForReceiverTasks WPRT ON W.id = WPRT.WorkPlanId LEFT JOIN Interdependencies IR ON WPRT.InterdependencyId = IR.ID WHERE CAST(W.TaskDueDate AS DATE) < CAST(IR.ItemDueDate AS DATE) AND W.WorkPlanTaskType=''Task'' UNION SELECT W.Title AS WorkplanAssociatedWithInterdependencies FROM WorkPlan W INNER JOIN WorkPlansToInterdependenciesForProviderTasks WPPT ON W.id = WPPT.WorkPlanId LEFT JOIN Interdependencies IR ON WPPT.InterdependencyId = IR.ID WHERE CAST(W.TaskDueDate AS DATE) < CAST(IR.ItemDueDate AS DATE) AND W.WorkPlanTaskType=''Task''', [AppAffinity] = N'CE4-PMO', [Source] = N'project-data', [SuggestionText] = N'Can you please list down all tasks whose due date is less than the due date of the associated interdependency', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ''Total Top Down Target'' AS KPI, FORMAT((SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate))/1000000,''N2'') AS ''Value (Million)'' FROM ValueCaptureTopDownEstimates ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'What are our targets for this engagement?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ''{Username}'' GROUP BY S.Title ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'How are my initiatives doing?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = ''{Username}'' ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'Are there any risks or issues with initiatives that I’m responsible for?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ''{Username}'' ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'How  many initiatives are assigned to me? ', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ''{Username}'' ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'Give my cost reduction initiatives ', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(RevenueGrowthEstimate,0)) [RevenueGrowthTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title = {ProjectTeam}', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'What are the revenue growth targets for Sales & Marketing ?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(CostToAchieveEstimate,0)) [CostToAchieveTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title ={ProjectTeam}', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'What are the cost to achieve targets for R&D ?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT S.Title [Value Capture Stage] , COUNT(VI.ID) [No. of Initiatives] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} GROUP BY S.Title', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'How many initiatives are there in IT across different stages ?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Approved Initiaves] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} AND S.Title = ''Approved''', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'List IT initiatives that are in approved stage', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves with Workplan] FROM ValueCaptureInitiatives VI JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WV ON VI.ID = WV.ValueCaptureInitiativeId', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'List initiatives that have workplan item linked to them', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT VI.Title [Initiaves with Risk] FROM ValueCaptureInitiatives VI JOIN RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RV ON VI.ID = RV.ValueCaptureInitiativeId LEFT JOIN RisksAndIssues RI ON RI.ID = RV.RisksAndIssueId WHERE RI.IssueRiskCategory = ''Risk''', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'How many initiatives have Risks linked ?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(HeadcountCostReductionEst,0)) [HeadCountCostReductionTarget] FROM [ValueCaptureTopDownEstimates] VT', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'What is the total headcount cost reduction target ?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Non Active Initiaves] FROM ValueCaptureInitiatives VI WHERE ISNULL(VI.IsItemActive ,0) = 0', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'List initiatives that are not active', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages  VCS ON VCI.ValueCaptureStageId = VCS.ID WHERE VCS.Title = {ValueCaptureStage} ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'How many initiatives have been realized?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(NonHeadcountCostReductionEst) + SUM(RevenueGrowthEstimate) + SUM(HeadcountCostReductionEst) ''Total Top Down Target Value'' FROM ValueCaptureTopDownEstimates', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'What is the Total Top Down Target Value ?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(RevenueGrowthEstimate) RevenueGrowth,SUM(TotalCostReduction) CostReduction FROM ValueCaptureTopDownEstimates', [Source] = N'project-data', [SuggestionText] = N'Show my top down target values by cost reduction and revenue growth', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(ID) FROM ValueCaptureInitiatives WHERE IsItemActive = 1', [Source] = N'project-data', [SuggestionText] = N'How many active initatives are there in my project ?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team] ,CAST(SUM(ISNULL(RevenueGrowthEstimate,0))/1000000 AS FLOAT) [Revenue Growth(in Million)] FROM [ValueCaptureTopDownEstimates] VT 	LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId GROUP BY PT.Title', [Source] = N'project-data', [SuggestionText] = N'What is the total of revenue growth by team?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VC.Title AS [ValueCaptureInitiatives with no Owners] FROM ValueCaptureInitiatives VC WHERE ItemOwnerId IS NULL', [Source] = N'project-data', [SuggestionText] = N'List out initiatives with no owners assigned.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiative with Workplan at Risk] FROM WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WTVI LEFT JOIN Workplan W ON W.ID = WTVI.WorkPlanId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId LEFT JOIN ValueCaptureInitiatives VI on VI.ID = WTVI.ValueCaptureInitiativeId WHERE S.[KEY] = ''AT_RISK''', [Source] = N'project-data', [SuggestionText] = N'List out initiatives that have at risk workplan task linked.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VP.Title AS ValueCapturepriority, COUNT(VC.ValueCapturePriorityId) AS ValueCapturePriorityCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId where ValueCapturePriorityId is not null GROUP BY ValueCapturePriorityId, VP.Title', [Source] = N'project-data', [SuggestionText] = N'Show me initiatives count by priority.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS UserProfile, COUNT(VC.ID) AS ValueCaptureOwnerwiseCount FROM ValueCaptureInitiatives VC LEFT JOIN UserProfiles UP ON UP.ID = VC.ItemOwnerId WHERE ItemOwnerId IS NOT NULL GROUP BY ItemOwnerId, UP.Title', [Source] = N'project-data', [SuggestionText] = N'Show me initiatives count by owner.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves] FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Title = {Username}', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'List initiatives where I''m assigned as the Owner', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as IdentifiedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Identified''', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'How many initiatives are identified?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as ApprovedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Approved'' ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'How many initiatives have been approved?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as ValidatedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Validated'' ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'How many initiatives have been validated?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS [Value Capture Stage] ,COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCI.ValueCaptureStageId = VCS.ID GROUP BY VCS.Title', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'Can you provide breakdown of the initiatives across various stages?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = {Username}', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'What initatives have I been assigned to ?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VS.Title ValueCaptureStage FROM ValueCaptureInitiatives VI JOIN ValueCaptureStages VS ON VI.ValueCaptureStageID = VS.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = {Username} ORDER BY ValueCaptureStage', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'List my initatives by stages', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VT.Title ValueCaptureType FROM ValueCaptureInitiatives VI JOIN ValueCaptureTypes VT ON VI.ValueCaptureStageID = VT.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = {Username} ORDER BY ValueCaptureType', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'List my initatives by Value Capture Type', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title,SUM(ISNULL(NonHeadcountCostReductionEst,0)) + SUM(ISNULL(RevenueGrowthEstimate,0)) + SUM(ISNULL(HeadcountCostReductionEst,0)) AS TotalTopDownTarget FROM ValueCaptureTopDownEstimates LEFT JOIN ProjectTeams PT ON PT.ID = ValueCaptureTopDownEstimates.Projectteamid GROUP BY PT.Title', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'What is the top-down target for this project?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS ValueCaptureStage, COUNT(VC.ID) AS ValueCaptureStageCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VC.ValueCaptureStageId GROUP BY ValueCaptureStageId, VCS.Title', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'Show me initiatives count by stage.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title as Functions, COUNT(VC.FunctionId) AS ValueCaptureFunction FROM ValueCaptureInitiatives VC LEFT JOIN Functions f ON f.ID = VC.FunctionId WHERE FunctionId IS NOT NULL GROUP BY FunctionId, F.Title ', [AppAffinity] = N'CE4-VC', [Source] = N'project-data', [SuggestionText] = N'Show me initiatives count by function.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many systems are tagged to Current State processes?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many systems are tagged to Day 1 processes?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] ON;
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (100, N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', N'CE4-OM', NULL, N'System', N'project-data', N'How many assets are tagged to Day 1 processes? ', NULL, N'System', CAST(1 AS bit)),
(101, N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', N'CE4-OM', NULL, N'System', N'project-data', N'How many assets are tagged to Current State processes? ', NULL, N'System', CAST(1 AS bit)),
(102, N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(Title) AS TotalCount, BusinessEntityId FROM Nodes WHERE NodeTypeId = 3 GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', N'CE4-OM', NULL, N'System', N'project-data', N'Can you provide me number of processes by op model? ', NULL, N'System', CAST(1 AS bit)),
(103, N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', N'CE4-OM', NULL, N'System', N'project-data', N'How many processes we have in current state? ', NULL, N'System', CAST(1 AS bit)),
(104, N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', N'CE4-OM', NULL, N'System', N'project-data', N'How many processes we have in Day1 state? ', NULL, N'System', CAST(1 AS bit)),
(105, N'SELECT COUNT(1) FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''  AND N.NodeTypeId = 3  AND N.ID NOT IN (   SELECT DISTINCT NTO.NodeId   FROM Nodes N1   LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null  )', N'CE4-OM', NULL, N'System', N'project-data', N'How many processes don''t have an Owner assigned in Current State ?', NULL, N'System', CAST(1 AS bit)),
(106, N'SELECT PR.ID 	,PR.Title FROM Nodes PR JOIN TransactionStates T ON T.ID = PR.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' 	AND PR.NodeTypeId = 3 	AND NOT EXISTS  				(SELECT 1 FROM [NodesToDispositionsForDispositionNew] D WHERE D.NodeId = PR.ID)', N'CE4-OM', NULL, N'System', N'project-data', N'List processes that don''t have Disposition assigned in Day 1 state', NULL, N'System', CAST(1 AS bit)),
(107, N'SELECT Title FROM Dispositions', N'CE4-OM', NULL, N'System', N'project-data', N'List the Disposition options available ', NULL, N'System', CAST(1 AS bit)),
(108, N'SELECT N.Title [ProcessGroup] ,COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) [Enablers Count] FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 2 GROUP BY N.Title ORDER BY [Enablers Count] DESC', N'CE4-OM', NULL, N'System', N'project-data', N'How many enablers are associated with each Process Group ?', NULL, N'System', CAST(1 AS bit)),
(109, N'SELECT D.Title [Disposition] 	,COUNT(SD.SystemId) [SystemCount] FROM Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID GROUP BY D.Title', N'CE4-OM', NULL, N'System', N'project-data', N'List the total number of systems by disposition', NULL, N'System', CAST(1 AS bit)),
(110, N' SELECT PR.Title [Process] , D.DispositionId FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId  	LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 	AND D.NodeId IS NULL 	AND S.[Key] = ''DAY_ONE''', N'CE4-OM', NULL, N'System', N'project-data', N'Can you please list down all Day 1 processes where no disposition has been tagged?', NULL, N'System', CAST(1 AS bit)),
(111, N' SELECT 	N.Title [Process]	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 3 GROUP BY N.Title HAVING COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) = 0', N'CE4-OM', NULL, N'System', N'project-data', N'Can you please list all processes with no Enablers?', NULL, N'System', CAST(1 AS bit)),
(112, N'SELECT PR.Title as MissingInDay1 FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''CURRENT_STATE'' EXCEPT SELECT 	PR.Title [Process] FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''DAY_ONE''', N'CE4-OM', NULL, N'System', N'project-data', N'Can you please compare the Current state & day 1 operating model and list all processes which are missing in Day1 as compared to current state', NULL, N'System', CAST(1 AS bit)),
(113, N'SELECT DISTINCT A.Title Enabler, ''Asset'' as Category	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID LEFT JOIN [Assets] A ON A.ID = NA.AssetsId WHERE A.Title IS NOT NULL UNION ALL SELECT DISTINCT F.Title Enabler, ''Facility'' as Category FROM Nodes N LEFT JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID LEFT JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE F.Title IS NOT NULL  UNION ALL SELECT DISTINCT S.Title Enabler , ''System'' as Category FROM Nodes N LEFT JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID LEFT JOIN [Systems] S ON S.ID = NS.SystemsId WHERE S.Title IS NOT NULL  UNION ALL SELECT DISTINCT T.Title Enabler	, ''TPA'' as Category FROM Nodes N LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID LEFT JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId WHERE T.Title IS NOT NULL ', N'CE4-OM', NULL, N'System', N'project-data', N'What Enablers are we tracking for this project ?', NULL, N'System', CAST(1 AS bit)),
(114, N'SELECT Count(ID) AS [# Systems present in this functional OP model] FROM Systems', N'CE4-OM', NULL, N'System', N'project-data', N'How many Systems are there in this functional op model ?', NULL, N'System', CAST(1 AS bit)),
(115, N'SELECT Count(ID) AS [# TPAs present in this functional OP model] FROM ThirdPartyAgreements', N'CE4-OM', NULL, N'System', N'project-data', N'How many TPAs are there in this functional op model ?', NULL, N'System', CAST(1 AS bit)),
(116, N'SELECT ST.Title AS SystemType, COUNT(S.ID) [# Systems by Type] FROM Systems S LEFT JOIN SystemTypes ST ON ST.ID = S.TypeId WHERE S.TypeId IS NOT NULL GROUP BY ST.Title', N'CE4-OM', NULL, N'System', N'project-data', N'Lsit the number of Systems by Type', NULL, N'System', CAST(1 AS bit)),
(117, N'SELECT O.Title AS Owners, Count(*) AS [# TPAs by Ownership] FROM ThirdPartyAgreements TP LEFT JOIN Owners O ON O.ID = TP.OwnerID WHERE TP.OwnerID IS NOT NULL GROUP BY O.Title', N'CE4-OM', NULL, N'System', N'project-data', N'List the number of TPAs by Ownership', NULL, N'System', CAST(1 AS bit)),
(118, N'SELECT Title [ProcessGroups With No Process] FROM Nodes WHERE nodetypeid = 2 AND ID NOT IN (SELECT NodeParentId FROM Nodes)', N'CE4-OM', NULL, N'System', N'project-data', N'List down all process groups with no process within them?', NULL, N'System', CAST(1 AS bit)),
(119, N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'Show me the count of TSAs by function.', NULL, N'System', CAST(1 AS bit)),
(120, N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'Show me the count of TSAs by sub function.', NULL, N'System', CAST(1 AS bit)),
(121, N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'Give me the list of TSAs by Provider ', NULL, N'System', CAST(1 AS bit)),
(122, N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'Give me the list of TSAs by Receiver ', NULL, N'System', CAST(1 AS bit)),
(123, N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'Can you provide me list of TSAs by phases? ', NULL, N'System', CAST(1 AS bit)),
(124, N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', N'CE4-TSA', NULL, N'System', N'project-data', N'Show me the breakdown of TSAs by duration  ', NULL, N'System', CAST(1 AS bit)),
(125, N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'How many TSAs does each team have? ', NULL, N'System', CAST(1 AS bit)),
(126, N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] != ''CAPITAL_EDGE_SUPPORT'' order by TT.Title ', N'PROJECT_LEVEL', NULL, N'System', N'project-data', N'What are the project teams that make up the governance structure for this engagement? ', NULL, N'System', CAST(1 AS bit)),
(127, N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title ', N'PROJECT_LEVEL', NULL, N'System', N'project-data', N'How many milestones does each team have? ', NULL, N'System', CAST(1 AS bit)),
(128, N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', N'PROJECT_LEVEL', NULL, N'System', N'project-data', N'How many interdependencies does each team have ', NULL, N'System', CAST(1 AS bit)),
(129, N'SELECT pt.Title, COUNT(1) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title ', N'PROJECT_LEVEL', NULL, N'System', N'project-data', N'How many risks does each team have? ', NULL, N'System', CAST(1 AS bit)),
(130, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'What PMO workplan templates are available?', NULL, N'System', CAST(1 AS bit)),
(131, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'What are the best practices to run weekly status meetings with the client?', NULL, N'System', CAST(1 AS bit)),
(132, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'What is the difference between Progress and Calculated Status?', NULL, N'System', CAST(1 AS bit)),
(133, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'How do you add a new field to the workplan?', NULL, N'System', CAST(1 AS bit)),
(134, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'How do I set alerts/send email for various item owners?', NULL, N'System', CAST(1 AS bit)),
(135, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'How do I add a client user to the PMO app?', NULL, N'System', CAST(1 AS bit)),
(136, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'How do I link a Workplan Task to RAID?', NULL, N'System', CAST(1 AS bit)),
(137, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'Provide case studies/credentials for similar deals that EY has supported in the past', NULL, N'System', CAST(1 AS bit)),
(138, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'Help me understand PMO methodology for this {ProjectType} project.', NULL, N'System', CAST(1 AS bit)),
(139, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'What cost savings levers are available?', NULL, N'System', CAST(1 AS bit)),
(140, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'What revenue growth levers are available?', NULL, N'System', CAST(1 AS bit)),
(141, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'What are typical one-time costs that we should be considering?', NULL, N'System', CAST(1 AS bit));
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (142, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'What are the IT cost savings levers that I should be thinking about?', NULL, N'System', CAST(1 AS bit)),
(143, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?', NULL, N'System', CAST(1 AS bit)),
(144, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?', NULL, N'System', CAST(1 AS bit)),
(145, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'Provide case studies/credentials for similar deals that EY have supported in the past', NULL, N'System', CAST(1 AS bit)),
(146, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'Help understand VC methodology.', NULL, N'System', CAST(1 AS bit)),
(147, NULL, N'CE4-OM', NULL, N'System', N'ey-guidance', N'What normative operating models are available?', NULL, N'System', CAST(1 AS bit)),
(148, NULL, N'CE4-OM', NULL, N'System', N'ey-guidance', N'How can I upload systems in bulk to the Op Model app?', NULL, N'System', CAST(1 AS bit)),
(149, NULL, N'CE4-OM', NULL, N'System', N'ey-guidance', N'What are the steps to setup the Op Model app?', NULL, N'System', CAST(1 AS bit)),
(150, NULL, N'CE4-OM', NULL, N'System', N'ey-guidance', N'What reports are available in the Op Model app?', NULL, N'System', CAST(1 AS bit)),
(151, NULL, N'CE4-OM', NULL, N'System', N'ey-guidance', N'Provide case studies/credentials for similar deals that EY has supported in the past', NULL, N'System', CAST(1 AS bit)),
(152, NULL, N'CE4-TSA', NULL, N'System', N'ey-guidance', N'What TSAs would you suggest?', NULL, N'System', CAST(1 AS bit)),
(153, NULL, N'CE4-TSA', NULL, N'System', N'ey-guidance', N'What are examples for TSAs?', NULL, N'System', CAST(1 AS bit)),
(154, NULL, N'CE4-TSA', NULL, N'System', N'ey-guidance', N'Why are TSAs important?', NULL, N'System', CAST(1 AS bit)),
(155, NULL, N'CE4-TSA', NULL, N'System', N'ey-guidance', N'Provide case studies/credentials for similar deals that EY have supported in the past.', NULL, N'System', CAST(1 AS bit)),
(156, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'What PMO workplan templates are available?', NULL, N'System', CAST(1 AS bit)),
(157, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'What are the best practices to run weekly status meetings with the client?', NULL, N'System', CAST(1 AS bit)),
(158, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'How do you add a new field to the workplan?', NULL, N'System', CAST(1 AS bit)),
(159, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'How do I link a Workplan Task to RAID?', NULL, N'System', CAST(1 AS bit)),
(160, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'Help me understand PMO methodology for this {ProjectType} project.', NULL, N'System', CAST(1 AS bit)),
(161, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'Generate a basic workplan template for my project.', NULL, N'System', CAST(1 AS bit)),
(162, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the key risks for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(163, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the key milestones for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(164, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the best practices to run weekly status meetings?', NULL, N'System', CAST(1 AS bit)),
(165, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are some of the similar deals that have happened in the past?', NULL, N'System', CAST(1 AS bit)),
(166, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System', CAST(1 AS bit)),
(167, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best cost saving initiatives?', NULL, N'System', CAST(1 AS bit)),
(168, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best revenue growth initiatives?', NULL, N'System', CAST(1 AS bit)),
(169, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best strategies for improving a company in the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(170, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are recent examples of improvements being made in the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(171, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best ways to track actuals?', NULL, N'System', CAST(1 AS bit)),
(172, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What should be the frequency of tracking dollar values during the engagement?', NULL, N'System', CAST(1 AS bit)),
(173, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are typical implications for cross border deals?', NULL, N'System', CAST(1 AS bit)),
(174, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What is a normative operating model for the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(175, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What are key considerations when defining an operating model for a {Sector} sector company?', NULL, N'System', CAST(1 AS bit)),
(176, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What are examples of Day 1 process dispositions?', NULL, N'System', CAST(1 AS bit)),
(177, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What are the corporate functions typically involved in the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(178, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What are the typical services of the Sales and Marketing function?', NULL, N'System', CAST(1 AS bit)),
(179, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.', NULL, N'System', CAST(1 AS bit)),
(180, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Provides templates of TSA', NULL, N'System', CAST(1 AS bit)),
(181, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What should be the typical duration for TSA', NULL, N'System', CAST(1 AS bit)),
(182, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Things I should keep in mind for longer duration TSAs', NULL, N'System', CAST(1 AS bit)),
(183, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'Generate a basic workplan template for my project.', NULL, N'System', CAST(1 AS bit));
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (184, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the key risks for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(185, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the key milestones for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(186, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the best practices to run weekly status meetings?', NULL, N'System', CAST(1 AS bit)),
(187, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System', CAST(1 AS bit));
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240531090246_AddNewSuggestionsAndColumn', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM Workplan WHERE DATEPART(ww,TaskDueDate) = DATEPART(ww,GETDATE())', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List out workplan items due this week', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title, W.WorkPlanTaskType, W.StartDate, W.TaskDueDate, PT.Title ProjectTeam, S.Title [Status], UP.Title TaskOwner FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN UserProfiles UP ON W.TaskOwnerId = UP.ID WHERE UniqueItemIdentifier = ''HR.2.2.6''', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Provide details for workplan ID HR.2.2.6', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(RI.ID) IssueCoutnwithPendingStatus FROM RisksandIssues RI JOIN RiskAndIssueStatuses RS ON RI.ItemStatusID = RS.ID WHERE RiskMitigation IS NULL 	AND IssueRiskCategory = ''Issue'' 	AND RS.Title = ''Pending''', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How many issues are in pending status ?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	UniqueItemIdentifier 	,Title 	,IssueRiskCategory FROM RisksAndIssues WHERE  	ItemOwnerId IS NULL  UNION ALL  SELECT  	UniqueItemIdentifier 	,Title 	,''Decision'' FROM Decisions WHERE  	ItemOwnerId IS NULL  UNION ALL  SELECT  	UniqueItemIdentifier 	,Title 	,''Action'' FROM Actions WHERE  	ItemOwnerId IS NULL', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List RAID items that do not have an owner assigned', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    W.UniqueItemIdentifier,    W.TITLE NotStartedWorkplansWithStartDatePassed  FROM    Workplan W    LEFT JOIN Statuses S On S.ID = W.WorkPlanTaskStatusId  WHERE    S.[KEY] = ''NOT_STARTED''    AND CAST(W.StartDate as DATE)< CAST(     GETDATE() AS DATE   ) ', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List all Workplan tasks that are ''Not Started'' and planned start date has passed', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    W.UniqueItemIdentifier,    W.TITLE as WorkplansWithDueDatePassed  FROM    Workplan W    LEFT JOIN Statuses S On S.ID = W.WorkPlanTaskStatusId  WHERE    S.[KEY] NOT IN ( ''COMPLETED'' , ''CANCELLED'')   AND CAST(W.TaskDueDate as DATE)< CAST(GETDATE() AS DATE)', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List all Workplan tasks which are past due', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT PT.Title as ProjectTeams_With_Items_At_Risk  FROM ProjectTeams PT    JOIN Workplan W ON W.ProjectTeamID = PT.ID    JOIN Statuses S ON S.ID = W.WorkplanTaskStatusID  WHERE    S.[Key] = ''AT_RISK''', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'List all project teams with workplan items that are ''At Risk'''
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ProjectTeams WHERE ManageProjectStatus = 1 EXCEPT SELECT PT.Title FROM ProjectStatusEntries PSE LEFT JOIN ReportingPeriods RP ON PSE.ReportingPeriodId = RP.ID LEFT JOIN ProjectTeams PT ON PSE.ProjectTeamId = PT.ID WHERE RP.ID = (SELECT ID FROM ReportingPeriods 				WHERE CAST(GETDATE() AS DATE) BETWEEN CAST(PeriodStartDate AS DATE) AND CAST(PeriodEndDate AS DATE) 					) 	AND PSE.WeeklyStatusStatusId IS NOT NULL', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Which teams have not entered thier weekly status report for this reporting period?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	COUNT(ID) AS NewRisksCount FROM  	RisksAndIssues WHERE  	 IssueRiskCategory like $[IssueRiskCategory] 	AND DATEDIFF(day, Created, GETDATE()) <= 5', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How many new risks have been created in the last 5 days?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title Workplan FROM (     SELECT          DISTINCT W.Title, WorkPlanLinksTargetId AS TaskID     FROM          WorkPlanLinks WL         LEFT JOIN WorkPlan W ON W.ID = WL.WorkPlanLinksTargetId      UNION      SELECT          DISTINCT W.Title, WorkPlanLinksSourceId AS TaskID     FROM          WorkPlanLinks WL         LEFT JOIN WorkPlan W ON W.ID = WL.WorkPlanLinksSourceId ) AS SubQuery ORDER BY TaskID', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Which tasks have a predecessor or successor linked to them?'
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ProjectTeam FROM(   SELECT      PT.Title AS Projectteam,     COUNT(PT.ID) AS TeamUpdateCount, 	DENSE_RANK() OVER (ORDER BY COUNT(PT.ID) DESC) ROW_NUM FROM      RisksAndIssues RI LEFT JOIN      ProjectTeams PT ON PT.ID = RI.ProjectTeamId WHERE PT.ItemIsActive=1 and RI.IssueRiskCategory = ''Risk'' GROUP BY      pt.title) A', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Which function has the highest number of risk associated with?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      W.Title AS [List of Milestones due in next 7 days and Not Updated Since Last 2 weeks] FROM      WorkPlan W 	LEFT JOIN Statuses S on s.ID = W.WorkPlanTaskStatusId WHERE      W.WorkPlanTaskType IN (''Milestone'')     AND W.IsCritical IN (1)     AND CAST(W.Modified AS DATE) < DATEADD(day, -14, CAST(GETDATE() AS DATE)) 	AND S.[Key] not in (''COMPLETED'', ''CANCELLED'')', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Can you please list down all milestones due in next 7 days which are on critical path and have no update made to them in last 2 weeks?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     RI.TITLE AS [Risk items that does not have Risk Mitigation plan] FROM     RisksAndIssues RI WHERE     RI.IssueRiskCategory = ''Risk''     AND RI.RiskMitigation IS NOT NULL', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Are there any risks items that doesn''t have risk mitigation plan?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ''Total Top Down Target'' AS KPI, FORMAT((SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate))/1000000,''N2'') AS ''Value (Million)'' FROM ValueCaptureTopDownEstimates ', [SuggestionText] = N'What are our targets for this engagement?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ''{Username}'' GROUP BY S.Title ', [SuggestionText] = N'How are my initiatives doing?'
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = ''{Username}'' ', [SuggestionText] = N'Are there any risks or issues with initiatives that I’m responsible for?'
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ''{Username}'' ', [SuggestionText] = N'How  many initiatives are assigned to me? '
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ''{Username}'' ', [SuggestionText] = N'Give my cost reduction initiatives '
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(RevenueGrowthEstimate,0)) [RevenueGrowthTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title = {ProjectTeam}', [SuggestionText] = N'What are the revenue growth targets for Sales & Marketing ?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(CostToAchieveEstimate,0)) [CostToAchieveTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title ={ProjectTeam}', [SuggestionText] = N'What are the cost to achieve targets for R&D ?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT S.Title [Value Capture Stage] , COUNT(VI.ID) [No. of Initiatives] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} GROUP BY S.Title', [SuggestionText] = N'How many initiatives are there in IT across different stages ?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Approved Initiaves] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} AND S.Title = ''Approved''', [SuggestionText] = N'List IT initiatives that are in approved stage', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves with Workplan] FROM ValueCaptureInitiatives VI JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WV ON VI.ID = WV.ValueCaptureInitiativeId', [SuggestionText] = N'List initiatives that have workplan item linked to them'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT VI.Title [Initiaves with Risk] FROM ValueCaptureInitiatives VI JOIN RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RV ON VI.ID = RV.ValueCaptureInitiativeId LEFT JOIN RisksAndIssues RI ON RI.ID = RV.RisksAndIssueId WHERE RI.IssueRiskCategory = ''Risk''', [SuggestionText] = N'How many initiatives have Risks linked ?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(HeadcountCostReductionEst,0)) [HeadCountCostReductionTarget] FROM [ValueCaptureTopDownEstimates] VT', [SuggestionText] = N'What is the total headcount cost reduction target ?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Non Active Initiaves] FROM ValueCaptureInitiatives VI WHERE ISNULL(VI.IsItemActive ,0) = 0', [SuggestionText] = N'List initiatives that are not active', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages  VCS ON VCI.ValueCaptureStageId = VCS.ID WHERE VCS.Title = {ValueCaptureStage} ', [SuggestionText] = N'How many initiatives have been realized?'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(NonHeadcountCostReductionEst) + SUM(RevenueGrowthEstimate) + SUM(HeadcountCostReductionEst) ''Total Top Down Target Value'' FROM ValueCaptureTopDownEstimates', [SuggestionText] = N'What is the Total Top Down Target Value ?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(RevenueGrowthEstimate) RevenueGrowth,SUM(TotalCostReduction) CostReduction FROM ValueCaptureTopDownEstimates', [SuggestionText] = N'Show my top down target values by cost reduction and revenue growth'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(ID) FROM ValueCaptureInitiatives WHERE IsItemActive = 1', [SuggestionText] = N'How many active initatives are there in my project ?'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team] ,CAST(SUM(ISNULL(RevenueGrowthEstimate,0))/1000000 AS FLOAT) [Revenue Growth(in Million)] FROM [ValueCaptureTopDownEstimates] VT 	LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId GROUP BY PT.Title', [SuggestionText] = N'What is the total of revenue growth by team?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VC.Title AS [ValueCaptureInitiatives with no Owners] FROM ValueCaptureInitiatives VC WHERE ItemOwnerId IS NULL', [SuggestionText] = N'List out initiatives with no owners assigned.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiative with Workplan at Risk] FROM WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WTVI LEFT JOIN Workplan W ON W.ID = WTVI.WorkPlanId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId LEFT JOIN ValueCaptureInitiatives VI on VI.ID = WTVI.ValueCaptureInitiativeId WHERE S.[KEY] = ''AT_RISK''', [SuggestionText] = N'List out initiatives that have at risk workplan task linked.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VP.Title AS ValueCapturepriority, COUNT(VC.ValueCapturePriorityId) AS ValueCapturePriorityCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId where ValueCapturePriorityId is not null GROUP BY ValueCapturePriorityId, VP.Title', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Show me initiatives count by priority.'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS UserProfile, COUNT(VC.ID) AS ValueCaptureOwnerwiseCount FROM ValueCaptureInitiatives VC LEFT JOIN UserProfiles UP ON UP.ID = VC.ItemOwnerId WHERE ItemOwnerId IS NOT NULL GROUP BY ItemOwnerId, UP.Title', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Show me initiatives count by owner.'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves] FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Title = {Username}', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List initiatives where I''m assigned as the Owner'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as IdentifiedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Identified''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How many initiatives are identified?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as ApprovedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Approved'' ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How many initiatives have been approved?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as ValidatedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Validated'' ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How many initiatives have been validated?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS [Value Capture Stage] ,COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCI.ValueCaptureStageId = VCS.ID GROUP BY VCS.Title', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Can you provide breakdown of the initiatives across various stages?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = {Username}', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What initatives have I been assigned to ?'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VS.Title ValueCaptureStage FROM ValueCaptureInitiatives VI JOIN ValueCaptureStages VS ON VI.ValueCaptureStageID = VS.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = {Username} ORDER BY ValueCaptureStage', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List my initatives by stages'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VT.Title ValueCaptureType FROM ValueCaptureInitiatives VI JOIN ValueCaptureTypes VT ON VI.ValueCaptureStageID = VT.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = {Username} ORDER BY ValueCaptureType', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List my initatives by Value Capture Type'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title,SUM(ISNULL(NonHeadcountCostReductionEst,0)) + SUM(ISNULL(RevenueGrowthEstimate,0)) + SUM(ISNULL(HeadcountCostReductionEst,0)) AS TotalTopDownTarget FROM ValueCaptureTopDownEstimates LEFT JOIN ProjectTeams PT ON PT.ID = ValueCaptureTopDownEstimates.Projectteamid GROUP BY PT.Title', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What is the top-down target for this project?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS ValueCaptureStage, COUNT(VC.ID) AS ValueCaptureStageCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VC.ValueCaptureStageId GROUP BY ValueCaptureStageId, VCS.Title', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Show me initiatives count by stage.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title as Functions, COUNT(VC.FunctionId) AS ValueCaptureFunction FROM ValueCaptureInitiatives VC LEFT JOIN Functions f ON f.ID = VC.FunctionId WHERE FunctionId IS NOT NULL GROUP BY FunctionId, F.Title ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Show me initiatives count by function.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT     CC.Title AS [Cost/Revenue Centers linked to PnL Line Items], CC.Account FROM CostCenters CC     LEFT JOIN ValueCaptureFinancialLineItems Fin         ON CC.FinancialLineItemId = Fin.ID     LEFT JOIN ValueCaptureFinancialLineItemTypes FinType         ON Fin.FinancialLineItemTypeId = FinType.ID WHERE FinType.Title = ''PnL''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List all Cost/Revenue Centers linked to PnL Line Items'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(ID) AS [Top Down targets #],        SUM(ISNULL(NonHeadcountCostReductionEst, 0)) AS [Total Non Headcount Cost Reduction Estimate],        SUM(ISNULL(RevenueGrowthEstimate, 0)) AS [Total Revenue Growth Estimate],        SUM(ISNULL(CostToAchieveEstimate, 0)) AS [Total Cost To Achieve Estimate],        SUM(ISNULL(HeadcountCostReductionEst, 0)) AS [Total Headcount Cost Reduction Estimate],        SUM(ISNULL(HeadcountCostReductionEst, 0)) + SUM(ISNULL(NonHeadcountCostReductionEst, 0))        + SUM(ISNULL(RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Can you provide Top Down Targets KPIs?'
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  VCTT.Title, PT.Title, VCTT.CostToAchieveEstimate, VCTT.NonHeadcountCostReductionEst, VCTT.HeadcountCostReductionEst, VCTT.RevenueGrowthEstimate FROM   ValueCaptureTopDownEstimates VCTT  Left Join ProjectTeams PT on PT.ID = VCTT.ProjectTeamId', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How many top down targets do we have for this project ?'
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(HeadcountCostReductionEst,0)) AS HeadcountCostReduction FROM ValueCaptureTopDownEstimates', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What is the Total Headcount Cost Reduction Target ?'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(NonHeadcountCostReductionEst,0)) AS NonHeadcountCostReduction FROM  ValueCaptureTopDownEstimates', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What is the Total Non Headcount Cost Reduction Target ?'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(RevenueGrowthEstimate,0)) AS RevenueGrowth FROM  ValueCaptureTopDownEstimates', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What is the Total Revenue Growth Target ?'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(CostToAchieveEstimate,0)) AS CostToAchive FROM  ValueCaptureTopDownEstimates', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What is the Total Cost to Achieve Target ?'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PT.Title ProjectTeams, VBM.Title Benchmark FROM  ValueCaptureCostBenchmarks VBM LEFT JOIN  ProjectTeams PT ON PT.ID = VBM.ProjectTeamId', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Are there any benchmarks for this project ?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title ', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many assets are tagged to Day 1 processes? '
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many assets are tagged to Current State processes? '
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(Title) AS TotalCount, BusinessEntityId FROM Nodes WHERE NodeTypeId = 3 GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Can you provide me number of processes by op model? '
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many processes we have in current state? '
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many processes we have in Day1 state? '
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''  AND N.NodeTypeId = 3  AND N.ID NOT IN (   SELECT DISTINCT NTO.NodeId   FROM Nodes N1   LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null  )', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many processes don''t have an Owner assigned in Current State ?'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.ID 	,PR.Title FROM Nodes PR JOIN TransactionStates T ON T.ID = PR.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' 	AND PR.NodeTypeId = 3 	AND NOT EXISTS  				(SELECT 1 FROM [NodesToDispositionsForDispositionNew] D WHERE D.NodeId = PR.ID)', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List processes that don''t have Disposition assigned in Day 1 state'
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM Dispositions', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List the Disposition options available '
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [ProcessGroup] ,COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) [Enablers Count] FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 2 GROUP BY N.Title ORDER BY [Enablers Count] DESC', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many enablers are associated with each Process Group ?'
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title [Disposition] 	,COUNT(SD.SystemId) [SystemCount] FROM Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID GROUP BY D.Title', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the total number of systems by disposition'
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT PR.Title [Process] , D.DispositionId FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId  	LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 	AND D.NodeId IS NULL 	AND S.[Key] = ''DAY_ONE''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Can you please list down all Day 1 processes where no disposition has been tagged?'
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT 	N.Title [Process]	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 3 GROUP BY N.Title HAVING COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) = 0', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Can you please list all processes with no Enablers?'
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.Title as MissingInDay1 FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''CURRENT_STATE'' EXCEPT SELECT 	PR.Title [Process] FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''DAY_ONE''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Can you please compare the Current state & day 1 operating model and list all processes which are missing in Day1 as compared to current state'
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title Enabler, ''Asset'' as Category	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID LEFT JOIN [Assets] A ON A.ID = NA.AssetsId WHERE A.Title IS NOT NULL UNION ALL SELECT DISTINCT F.Title Enabler, ''Facility'' as Category FROM Nodes N LEFT JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID LEFT JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE F.Title IS NOT NULL  UNION ALL SELECT DISTINCT S.Title Enabler , ''System'' as Category FROM Nodes N LEFT JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID LEFT JOIN [Systems] S ON S.ID = NS.SystemsId WHERE S.Title IS NOT NULL  UNION ALL SELECT DISTINCT T.Title Enabler	, ''TPA'' as Category FROM Nodes N LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID LEFT JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId WHERE T.Title IS NOT NULL ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'What Enablers are we tracking for this project ?'
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# Systems present in this functional OP model] FROM Systems', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many Systems are there in this functional op model ?'
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# TPAs present in this functional OP model] FROM ThirdPartyAgreements', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many TPAs are there in this functional op model ?'
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ST.Title AS SystemType, COUNT(S.ID) [# Systems by Type] FROM Systems S LEFT JOIN SystemTypes ST ON ST.ID = S.TypeId WHERE S.TypeId IS NOT NULL GROUP BY ST.Title', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Lsit the number of Systems by Type'
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT O.Title AS Owners, Count(*) AS [# TPAs by Ownership] FROM ThirdPartyAgreements TP LEFT JOIN Owners O ON O.ID = TP.OwnerID WHERE TP.OwnerID IS NOT NULL GROUP BY O.Title', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the number of TPAs by Ownership'
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title [ProcessGroups With No Process] FROM Nodes WHERE nodetypeid = 2 AND ID NOT IN (SELECT NodeParentId FROM Nodes)', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List down all process groups with no process within them?'
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(P.[ID]) AS [Number of Process across Op Model] FROM Nodes P     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = ''Process''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the number of processes across op models'
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog WHERE Modified >= DATEADD(hh, -1, GETDATE())', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List history of changes to the op model in the past one hour'
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog WHERE FieldImpacted = ''Owner''       AND CAST(Modified AS DATE) = CAST(GETDATE() AS DATE)', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the history of changes to Ownership in the op model today'
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog WHERE Title = ''Deleted''       AND DATEPART(wk, CAST(Modified AS DATE)) = DATEPART(wk, CAST(GETDATE() AS DATE))       AND YEAR(Modified) = YEAR(GETDATE())', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the history of deletes in the op model this week'
WHERE [ID] = 143;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title [State], N.Title AS OperatingModel FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId  WHERE N.NodeTypeId = 1', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the functional operating models across different states'
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title Opmodel, L.Title LiveNote, Note FROM OperatingModelLiveNotes L LEFT JOIN Nodes N ON N.Id = L.NodeId', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Are there any Live Notes in this op model ?'
WHERE [ID] = 145;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process FROM OperatingModelActivityLog OL  LEFT JOIN Nodes N ON N.ID = Ol.ObjectID WHERE OL.Title = ''Updated'' AND Object = ''Process'' AND (CAST(OL.Modified AS DATE) BETWEEN DATEADD(DAY, -7, CAST(GETDATE()AS DATE))  AND CAST(GETDATE() AS DATE))', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List down all processes which were updated since last 1 week?'
WHERE [ID] = 146;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process, OldValue, NewValue  FROM OperatingModelActivityLog PL  LEFT JOIN Nodes N ON N.ID = PL.ObjectID  WHERE Object = ''Process'' AND PL.Title = ''Updated'' AND FieldImpacted = ''Title'' AND N.TransactionStateId = 6', [Source] = N'project-data', [SuggestionText] = N'List down all processes which have been renamed in Day 1 op model?'
WHERE [ID] = 147;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 148;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Show me the count of TSAs by sub function.'
WHERE [ID] = 149;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Give me the list of TSAs by Provider '
WHERE [ID] = 150;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Give me the list of TSAs by Receiver '
WHERE [ID] = 151;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', [Source] = N'project-data', [SuggestionText] = N'Can you provide me list of TSAs by phases? '
WHERE [ID] = 152;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', [Source] = N'project-data', [SuggestionText] = N'Show me the breakdown of TSAs by duration  '
WHERE [ID] = 153;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', [Source] = N'project-data', [SuggestionText] = N'How many TSAs does each team have? '
WHERE [ID] = 154;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    TST.Title as [Phase],    COUNT(TC.ID) AS [# TSAs across different phases] FROM    TSAItems TC    LEFT JOIN TSAPhases TST ON TC.PhaseID = TST.ID  Group BY    TST.Title ', [Source] = N'project-data', [SuggestionText] = N'List the number of TSAs across different phases '
WHERE [ID] = 155;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    T.Title PendingTSAItems  FROM    TSAItems T    JOIN TSAStatuses TS ON T.TSAItemTSAStatusId = TS.ID  WHERE    T.AuthorId = ${Useremail}    AND TS.[key] = ''ACTIVE'' ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'How many pending TSA items do I have ?'
WHERE [ID] = 156;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Title as [Billing Period Name],    DeadlineDate as [Contribution Deadlines]  FROM    TSABillingPeriods ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'In Cost Tracking, how is my billing periods setup ?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 157;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT    Title AS [TSA Phases]  FROM TSAPhases', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'What are the different TSA phases in my project ?'
WHERE [ID] = 158;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ProviderLegalEntityId = L.ID where  L.ServiceLocation is not null UNION  SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ReceiverLegalEntityId = L.ID   where  L.ServiceLocation is not null ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'List the TSA service locations in my project', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 159;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] != ''CAPITAL_EDGE_SUPPORT'' order by TT.Title ', [Source] = N'project-data', [SuggestionText] = N'What are the project teams that make up the governance structure for this engagement? '
WHERE [ID] = 160;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title ', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many milestones does each team have? '
WHERE [ID] = 161;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many interdependencies does each team have '
WHERE [ID] = 162;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(1) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title ', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many risks does each team have? '
WHERE [ID] = 163;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [Source] = N'ey-guidance', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 164;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [Source] = N'ey-guidance', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 165;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [Source] = N'ey-guidance', [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 166;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 167;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 168;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do I add a client user to the PMO app?'
WHERE [ID] = 169;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 170;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past'
WHERE [ID] = 171;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 172;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [Source] = N'ey-guidance', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 173;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 174;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 175;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 176;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 177;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 178;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past'
WHERE [ID] = 179;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 180;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 181;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 182;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 183;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 184;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past'
WHERE [ID] = 185;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 186;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 187;
SELECT @@ROWCOUNT;

GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] ON;
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (188, NULL, N'CE4-TSA', NULL, N'System', N'ey-guidance', N'Why are TSAs important?', NULL, N'System', CAST(1 AS bit)),
(189, NULL, N'CE4-TSA', NULL, N'System', N'ey-guidance', N'Provide case studies/credentials for similar deals that EY have supported in the past.', NULL, N'System', CAST(1 AS bit)),
(190, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'What PMO workplan templates are available?', NULL, N'System', CAST(1 AS bit)),
(191, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'What are the best practices to run weekly status meetings with the client?', NULL, N'System', CAST(1 AS bit)),
(192, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'How do you add a new field to the workplan?', NULL, N'System', CAST(1 AS bit)),
(193, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'How do I link a Workplan Task to RAID?', NULL, N'System', CAST(1 AS bit)),
(194, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'Help me understand PMO methodology for this {ProjectType} project.', NULL, N'System', CAST(1 AS bit)),
(195, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'Generate a basic workplan template for my project.', NULL, N'System', CAST(1 AS bit)),
(196, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the key risks for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(197, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the key milestones for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(198, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the best practices to run weekly status meetings?', NULL, N'System', CAST(1 AS bit)),
(199, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are some of the similar deals that have happened in the past?', NULL, N'System', CAST(1 AS bit)),
(200, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System', CAST(1 AS bit)),
(201, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best cost saving initiatives?', NULL, N'System', CAST(1 AS bit)),
(202, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best revenue growth initiatives?', NULL, N'System', CAST(1 AS bit)),
(203, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best strategies for improving a company in the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(204, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are recent examples of improvements being made in the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(205, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best ways to track actuals?', NULL, N'System', CAST(1 AS bit)),
(206, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What should be the frequency of tracking dollar values during the engagement?', NULL, N'System', CAST(1 AS bit)),
(207, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are typical implications for cross border deals?', NULL, N'System', CAST(1 AS bit)),
(208, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What is a normative operating model for the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(209, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What are key considerations when defining an operating model for a {Sector} sector company?', NULL, N'System', CAST(1 AS bit)),
(210, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What are examples of Day 1 process dispositions?', NULL, N'System', CAST(1 AS bit)),
(211, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What are the corporate functions typically involved in the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(212, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What are the typical services of the Sales and Marketing function?', NULL, N'System', CAST(1 AS bit)),
(213, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.', NULL, N'System', CAST(1 AS bit)),
(214, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Provides templates of TSA', NULL, N'System', CAST(1 AS bit)),
(215, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What should be the typical duration for TSA', NULL, N'System', CAST(1 AS bit)),
(216, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Things I should keep in mind for longer duration TSAs', NULL, N'System', CAST(1 AS bit)),
(217, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'Generate a basic workplan template for my project.', NULL, N'System', CAST(1 AS bit)),
(218, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the key risks for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(219, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the key milestones for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(220, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the best practices to run weekly status meetings?', NULL, N'System', CAST(1 AS bit)),
(221, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System', CAST(1 AS bit));
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240604065249_AddNewSuggestionForProjectData', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List out behind schedule milestones.'
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List out behind schedule risks.'
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List out behind schedule interdependencies.'
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many interdependencies are due this week?'
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Which project team has the most overdue milestones?'
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Show me open risks broken down by impact and probability.'
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many interdependencies does each provider team have?'
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List out workplan items assigned to User.'
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List out Behind Schedule items for HR team.'
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List out workplan items due next week.'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List out sub functions of Finance.'
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List out overdue interdependencies.'
WHERE [ID] = 24;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List out team with most overdue interdependencies.'
WHERE [ID] = 25;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List out Risks with no mitigation plan in place.'
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List out Risks with no owners assigned to them.'
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Show me upcoming milestones that have risks linked to it.'
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What is the parent team of Tax?'
WHERE [ID] = 31;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are my accomplishments from last reporting period?'
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List the interdependencies for which I''m the provider.'
WHERE [ID] = 34;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many issues don''t have a mitigation plan?'
WHERE [ID] = 35;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List tasks that have missing owners.'
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many high risk items are there for IT?'
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List all workplan, raid and interdependencies assigned to user.'
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Are there any project teams that are ''At Risk'' or ''Behind Schedule''?'
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List all Open Risks, Issues, Actions and Decisions.'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List all Open Interdependencies.'
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List all critical workplan tasks.'
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List all Interdependencies where IT is Interdependency Provider.'
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List all Interdependencies where IT is Interdependency Receiver.'
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Show me a list of all users that have behind schedule or at risk items assigned to them.'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Show me all Risks and issues that are flagged as Critical and not complete.'
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Can you please list down all tasks whose due date is less than the due date of the associated interdependency?'
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List out workplan items due this week.'
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide details for workplan ID HR.2.2.6.'
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many issues are in pending status?'
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List RAID items that do not have an owner assigned.'
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List all Workplan tasks that are ''Not Started'' and planned start date has passed.'
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List all Workplan tasks which are past due.'
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List all project teams with workplan items that are ''At Risk''.'
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How  many initiatives are assigned to me?'
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Give my cost reduction initiatives.'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the revenue growth targets for Sales & Marketing?'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the cost to achieve targets for R&D?'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many initiatives are there in IT across different stages?'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List IT initiatives that are in approved stage.'
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List initiatives that have workplan item linked to them.'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many initiatives have Risks linked?'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What is the total headcount cost reduction target?'
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List initiatives that are not active.'
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What is the Total Top Down Target Value?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Show my top down target values by cost reduction and revenue growth.'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many active initatives are there in my project?'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List initiatives where I''m assigned as the Owner.'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What initatives have I been assigned to?'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List my initatives by stages.'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List my initatives by Value Capture Type.'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List all Cost/Revenue Centers linked to PnL Line Items.'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many top down targets do we have for this project?'
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What is the Total Headcount Cost Reduction Target?'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What is the Total Non Headcount Cost Reduction Target?'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What is the Total Revenue Growth Target?'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What is the Total Cost to Achieve Target?'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Are there any benchmarks for this project?'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Can you provide me number of processes by op model?'
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many processes we have in current state?'
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many processes we have in Day1 state?'
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many processes don''t have an Owner assigned in Current State?'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List processes that don''t have Disposition assigned in Day 1 state.'
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List the Disposition options available.'
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many enablers are associated with each Process Group?'
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List the total number of systems by disposition.'
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Can you please compare the Current state & day 1 operating model and list all processes which are missing in Day1 as compared to current state?'
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What Enablers are we tracking for this project?'
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many Systems are there in this functional op model?'
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many TPAs are there in this functional op model?'
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List the number of Systems by Type.'
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List the number of TPAs by Ownership.'
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List down all process groups with no process within them.'
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List the number of processes across op models.'
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List history of changes to the op model in the past one hour.'
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List the history of changes to Ownership in the op model today.'
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List the history of deletes in the op model this week.'
WHERE [ID] = 143;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List the functional operating models across different states.'
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Are there any Live Notes in this op model?'
WHERE [ID] = 145;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List down all processes which have been renamed in Day 1 op model.'
WHERE [ID] = 147;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Give me the list of TSAs by Provider.'
WHERE [ID] = 150;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Give me the list of TSAs by Receiver.'
WHERE [ID] = 151;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Can you provide me list of TSAs by phases?'
WHERE [ID] = 152;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Show me the breakdown of TSAs by duration.'
WHERE [ID] = 153;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many TSAs does each team have?'
WHERE [ID] = 154;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List the number of TSAs across different phases.'
WHERE [ID] = 155;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many pending TSA items do I have?'
WHERE [ID] = 156;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'In Cost Tracking, how is my billing periods setup?'
WHERE [ID] = 157;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the different TSA phases in my project?'
WHERE [ID] = 158;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List the TSA service locations in my project.'
WHERE [ID] = 159;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the project teams that make up the governance structure for this engagement?'
WHERE [ID] = 160;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many milestones does each team have?'
WHERE [ID] = 161;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many interdependencies does each team have?'
WHERE [ID] = 162;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many risks does each team have?'
WHERE [ID] = 163;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past.'
WHERE [ID] = 171;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past.'
WHERE [ID] = 179;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past.'
WHERE [ID] = 185;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provides templates of TSA.'
WHERE [ID] = 214;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What should be the typical duration for TSA?'
WHERE [ID] = 215;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Things I should keep in mind for longer duration TSAs?'
WHERE [ID] = 216;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240606094539_AddPunctuationForSuggestions', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title AS  WorkPlanItem FROM Workplan W LEFT JOIN UserProfiles UP ON W.TaskOwnerID = UP.ID WHERE UP.Title = ''{Username}'' '
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AN.Title FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN UserProfiles UP ON PT.ItemOwnerID = UP.ID JOIN AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE UP.EMail = ''{Username}'' AND RP.ID = (SELECT ID -1 FROM ReportingPeriods WHERE GETDATE() BETWEEN PeriodStartDate AND PeriodEndDate) AND AN.AccomplishmentNextstepCategory = ''Accomplishment'''
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.Title FROM Interdependencies I JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID WHERE UP.EMail = ''{Username}'' '
WHERE [ID] = 34;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  W.Title,''Workplan'' [Category] FROM Workplan W LEFT JOIN UserProfiles UP ON W.TaskOwnerID = UP.ID WHERE UP.Title = ''{Username}'' UNION ALL  SELECT RI.Title,IssueRiskCategory [Category] FROM RisksAndIssues RI LEFT JOIN UserProfiles UP ON RI.ItemOwnerId = UP.ID WHERE UP.Title = ''{Username}'' UNION ALL SELECT A.Title,''Action'' [Category] FROM Actions A LEFT JOIN UserProfiles UP ON A.ItemOwnerId = UP.ID WHERE UP.Title = ''{Username}'' UNION ALL  SELECT D.Title,''Decision'' [Category] FROM Decisions D LEFT JOIN UserProfiles UP ON D.ItemOwnerId = UP.ID WHERE UP.Title = ''{Username}'' UNION ALL  SELECT I.Title,''Interdependecy as Provider'' [Category] FROM Interdependencies I LEFT JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID WHERE UP.Title = ''{Username}''  UNION ALL  SELECT I.Title,''Interdependecy as Receiver'' [Category] FROM Interdependencies I LEFT JOIN UserProfiles UP ON I.ReceiverOwnerId = UP.ID WHERE UP.Title = ''{Username}'''
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves] FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Title = ''{Username}'''
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}'''
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VS.Title ValueCaptureStage FROM ValueCaptureInitiatives VI JOIN ValueCaptureStages VS ON VI.ValueCaptureStageID = VS.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}'' ORDER BY ValueCaptureStage'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VT.Title ValueCaptureType FROM ValueCaptureInitiatives VI JOIN ValueCaptureTypes VT ON VI.ValueCaptureStageID = VT.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}'' ORDER BY ValueCaptureType'
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240607131811_AddUsernameInsideQuote', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Amount as [Client Baseline PnL Amount], A.FinancialLineItem as FinancialLineItem FROM( SELECT F.ID, F.Ordinal, F.Title FinancialLineItem , SUM(C.Amount)/1000000 Amount FROM ValueCaptureFinancialLineItems F LEFT JOIN CostCenters C ON C.FinancialLineItemId = F.ID  GROUP BY F.ID, F.Title, F.Ordinal ) A WHERE A.Amount IS NOT NULL', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What is my program Client Baseline PnL?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Recommended Initiatives List] FROM     ValueCaptureRecommendedInitiatives', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List all recommended initiatives for my program.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	SUM(a.[Total Top Down Target Value]) AS [Top Down Targets],      SUM(b.[Bottom Up Initiatives Value]) AS [Bottom Up Initiatives Value], 	( SUM(b.[Bottom Up Initiatives Value])-SUM(a.[Total Top Down Target Value])) AS Variance FROM ( SELECT   SUM(ISNULL(HeadcountCostReductionEst, 0)) + SUM(ISNULL(NonHeadcountCostReductionEst, 0))        + SUM(ISNULL(RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates) a, ( select SUM(Amount)*12 as [Bottom Up Initiatives Value]  FROM vwUnpivotEstimates where MYear=''Y3M12'' AND Recurring =1 ) b ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Compare Top Down Targets vs Bottom Up Initiatives for my project.'
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'   SELECT ISNULL(SUM(Act.AMOUNT),0.0) AS [Cumulative One Time Cost Amount] 			   FROM vwUnpivotActuals Act 			   LEFT JOIN ValueCaptureImpactTypes VCIT ON Act.ValueCaptureImpactTypeID=VCIT.ID 			   LEFT JOIN ValueCaptureInitiatives VCI ON Act.ValueCaptureInitiativeID=VCI.ID 			   WHERE VCIT.PositiveOrNegativeValues=''Negative'' 			   AND Act.Recurring<>1 			   AND VCI.Title = ${ValueCaptureInitiative}', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What is cumulative one-time cost for all initiatives?'
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'  SELECT  	   WP.Title AS [Workplan Items Linked to Value Capture Initiatives]  	   FROM WorkPlan WP 	   LEFT JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WPVC  	             ON WP.ID=WPVC.WorkPlanId 	   LEFT JOIN ValueCaptureInitiatives VCI  	             ON VCI.ID=WPVC.ValueCaptureInitiativeId', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List all workplan items linked to VC initiatives.'
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID     WHERE          E.Recurring = 1     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID     WHERE          A.Recurring = 1      GROUP BY          A.ValueCaptureInitiativeId, B.Title )   SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , (A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List all initiatives that had an estimate annualized run-rate differed by more than 10% from the Actual annualized run-rate?'
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     CONCAT(''Tracking Period of the Program is from '', CAST(MIN(StartDt) AS DATE), '' to '', CAST(MAX(EndDt) AS DATE)) FROM     ValueCaptureTransactionMonths WHERE     IsItemActive = 1', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What''s the tracking period for my project?'
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ${ProjectTeam}'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ${ProjectTeam}     ) Act         ON 1 = 1', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What''s the variance for Legal function?'
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT   	    COUNT(VCI.ID) AS [Initiative Count for Selected Evaluator Quad]  		     FROM ValueCaptureInitiatives VCI 		LEFT JOIN VCInitiativeEvaluatorQuadInfo VCQ  		    ON VCI.VCInitiativeEvaluatorQuadInfoId=VCQ.ID 		       WHERE VCQ.Title= ${EvaluatorQuad}', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Based on Evaluator comparison, how many initiatives have ''High Benefit, High Complexity''?'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title ', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' ', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' ', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Day 1 processes? '
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Current State processes? '
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(Title) AS TotalCount, BusinessEntityId FROM Nodes WHERE NodeTypeId = 3 GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [SuggestionText] = N'Can you provide me number of processes by op model?'
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [SuggestionText] = N'How many processes we have in current state?'
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [SuggestionText] = N'How many processes we have in Day1 state?'
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''  AND N.NodeTypeId = 3  AND N.ID NOT IN (   SELECT DISTINCT NTO.NodeId   FROM Nodes N1   LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null  )', [SuggestionText] = N'How many processes don''t have an Owner assigned in Current State?'
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.ID 	,PR.Title FROM Nodes PR JOIN TransactionStates T ON T.ID = PR.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' 	AND PR.NodeTypeId = 3 	AND NOT EXISTS  				(SELECT 1 FROM [NodesToDispositionsForDispositionNew] D WHERE D.NodeId = PR.ID)', [SuggestionText] = N'List processes that don''t have Disposition assigned in Day 1 state.'
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM Dispositions', [SuggestionText] = N'List the Disposition options available.'
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [ProcessGroup] ,COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) [Enablers Count] FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 2 GROUP BY N.Title ORDER BY [Enablers Count] DESC', [SuggestionText] = N'How many enablers are associated with each Process Group?'
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title [Disposition] 	,COUNT(SD.SystemId) [SystemCount] FROM Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID GROUP BY D.Title', [SuggestionText] = N'List the total number of systems by disposition.'
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT PR.Title [Process] , D.DispositionId FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId  	LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 	AND D.NodeId IS NULL 	AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'Can you please list down all Day 1 processes where no disposition has been tagged?'
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT 	N.Title [Process]	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 3 GROUP BY N.Title HAVING COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) = 0', [SuggestionText] = N'Can you please list all processes with no Enablers?'
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.Title as MissingInDay1 FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''CURRENT_STATE'' EXCEPT SELECT 	PR.Title [Process] FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'Can you please compare the Current state & day 1 operating model and list all processes which are missing in Day1 as compared to current state?'
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title Enabler, ''Asset'' as Category	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID LEFT JOIN [Assets] A ON A.ID = NA.AssetsId WHERE A.Title IS NOT NULL UNION ALL SELECT DISTINCT F.Title Enabler, ''Facility'' as Category FROM Nodes N LEFT JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID LEFT JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE F.Title IS NOT NULL  UNION ALL SELECT DISTINCT S.Title Enabler , ''System'' as Category FROM Nodes N LEFT JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID LEFT JOIN [Systems] S ON S.ID = NS.SystemsId WHERE S.Title IS NOT NULL  UNION ALL SELECT DISTINCT T.Title Enabler	, ''TPA'' as Category FROM Nodes N LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID LEFT JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId WHERE T.Title IS NOT NULL ', [SuggestionText] = N'What Enablers are we tracking for this project?'
WHERE [ID] = 143;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# Systems present in this functional OP model] FROM Systems', [SuggestionText] = N'How many Systems are there in this functional op model?'
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# TPAs present in this functional OP model] FROM ThirdPartyAgreements', [SuggestionText] = N'How many TPAs are there in this functional op model?'
WHERE [ID] = 145;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ST.Title AS SystemType, COUNT(S.ID) [# Systems by Type] FROM Systems S LEFT JOIN SystemTypes ST ON ST.ID = S.TypeId WHERE S.TypeId IS NOT NULL GROUP BY ST.Title', [SuggestionText] = N'List the number of Systems by Type.'
WHERE [ID] = 146;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT O.Title AS Owners, Count(*) AS [# TPAs by Ownership] FROM ThirdPartyAgreements TP LEFT JOIN Owners O ON O.ID = TP.OwnerID WHERE TP.OwnerID IS NOT NULL GROUP BY O.Title', [SuggestionText] = N'List the number of TPAs by Ownership.'
WHERE [ID] = 147;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title [ProcessGroups With No Process] FROM Nodes WHERE nodetypeid = 2 AND ID NOT IN (SELECT NodeParentId FROM Nodes)', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List down all process groups with no process within them.'
WHERE [ID] = 148;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(P.[ID]) AS [Number of Process across Op Model] FROM Nodes P     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = ''Process''', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List the number of processes across op models.'
WHERE [ID] = 149;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog WHERE Modified >= DATEADD(hh, -1, GETDATE())', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List history of changes to the op model in the past one hour.'
WHERE [ID] = 150;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog WHERE FieldImpacted = ''Owner''       AND CAST(Modified AS DATE) = CAST(GETDATE() AS DATE)', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List the history of changes to Ownership in the op model today.'
WHERE [ID] = 151;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog WHERE Title = ''Deleted''       AND DATEPART(wk, CAST(Modified AS DATE)) = DATEPART(wk, CAST(GETDATE() AS DATE))       AND YEAR(Modified) = YEAR(GETDATE())', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List the history of deletes in the op model this week.'
WHERE [ID] = 152;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title [State], N.Title AS OperatingModel FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId  WHERE N.NodeTypeId = 1', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List the functional operating models across different states.'
WHERE [ID] = 153;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title Opmodel, L.Title LiveNote, Note FROM OperatingModelLiveNotes L LEFT JOIN Nodes N ON N.Id = L.NodeId', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Are there any Live Notes in this op model?'
WHERE [ID] = 154;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process FROM OperatingModelActivityLog OL  LEFT JOIN Nodes N ON N.ID = Ol.ObjectID WHERE OL.Title = ''Updated'' AND Object = ''Process'' AND (CAST(OL.Modified AS DATE) BETWEEN DATEADD(DAY, -7, CAST(GETDATE()AS DATE))  AND CAST(GETDATE() AS DATE))', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List down all processes which were updated since last 1 week?'
WHERE [ID] = 155;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process, OldValue, NewValue  FROM OperatingModelActivityLog PL  LEFT JOIN Nodes N ON N.ID = PL.ObjectID  WHERE Object = ''Process'' AND PL.Title = ''Updated'' AND FieldImpacted = ''Title'' AND N.TransactionStateId = 6', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List down all processes which have been renamed in Day 1 op model.'
WHERE [ID] = 156;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 5     S.Title AS [Systems],     Count(NSS.NodesID) AS [ProcessCount] FROM Nodes N     LEFT JOIN [dbo].[NodesToSystemsForEnablerSystems] NSS         ON N.ID = NSS.NodesId     LEFT JOIN [dbo].[Systems] S         ON NSS.SystemsId = S.ID WHERE N.NodeTypeId = 3 GROUP BY S.Title ORDER BY Count(NSS.NodesID) DESC', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Please provide top 5 systems that are linked to various processes', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 157;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [List of processes for CurrentState where ownership is not present] FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''   AND N.NodeTypeId = 3   AND N.ID NOT IN (     SELECT DISTINCT NTO.NodeId     FROM Nodes N1     LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null   )', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'For Current State, list all processes that doesn''t have any ownership.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 158;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT     PR.Title [Process] FROM     Nodes                                    PR     JOIN         TransactionStates                    S             ON S.ID = PR.TransactionStateId     LEFT JOIN         NodesToDispositionsForDispositionNew D             ON D.NodeId = PR.ID WHERE     PR.NodeTypeId = 3     AND D.NodeId IS NULL     AND S.[Key] = ''DAY_ONE''', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'For Day 1 Operating Models, list all processes that doesn''t have any dispositions.'
WHERE [ID] = 159;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.NodeTypeId,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  ,       --SELECT * FROM PG_Hierarchy         ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID     FROM     (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT TOP 1     Functions AS [Function with highest number of processes] FROM (     SELECT Functions,            COUNT(ID) as [Process Count]     FROM ProcessCTE     GROUP BY Functions ) A order by [Process Count] desc    ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Which function has the highest number of processes?'
WHERE [ID] = 160;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Processes with Disposition as TSA] FROM   Nodes   N   LEFT JOIN     NodesToDispositionsForDispositionNew NTD             ON NTD.NodeId = N.ID     LEFT JOIN         Dispositions                         D             ON NTD.DispositionId = D.ID WHERE     D.Title = ''TSA''     AND N.NodeTypeId = 3 -- To get the list of Processes', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List down all Processes which have their disposition set as TSA.'
WHERE [ID] = 161;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT       N.Title as [List of Processes with No Disposition] FROM Nodes N          WHERE N.NodeTypeId=3  		  AND N.ID NOT IN  		             (SELECT NodeId FROM NodesToDispositionsForDispositionNew)', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List down all processes with no Disposition assigned.'
WHERE [ID] = 162;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 163;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Show me the count of TSAs by sub function.'
WHERE [ID] = 164;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Give me the list of TSAs by Provider.'
WHERE [ID] = 165;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Give me the list of TSAs by Receiver.'
WHERE [ID] = 166;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Can you provide me list of TSAs by phases?'
WHERE [ID] = 167;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'Show me the breakdown of TSAs by duration.'
WHERE [ID] = 168;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'How many TSAs does each team have?'
WHERE [ID] = 169;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    TST.Title as [Phase],    COUNT(TC.ID) AS [# TSAs across different phases] FROM    TSAItems TC    LEFT JOIN TSAPhases TST ON TC.PhaseID = TST.ID  Group BY    TST.Title ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'List the number of TSAs across different phases.'
WHERE [ID] = 170;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    T.Title PendingTSAItems  FROM    TSAItems T    JOIN TSAStatuses TS ON T.TSAItemTSAStatusId = TS.ID  WHERE    T.AuthorId = ${Useremail}    AND TS.[key] = ''ACTIVE'' ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'How many pending TSA items do I have?'
WHERE [ID] = 171;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Title as [Billing Period Name],    DeadlineDate as [Contribution Deadlines]  FROM    TSABillingPeriods ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'In Cost Tracking, how is my billing periods setup?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 172;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT    Title AS [TSA Phases]  FROM TSAPhases', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'What are the different TSA phases in my project?'
WHERE [ID] = 173;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ProviderLegalEntityId = L.ID where  L.ServiceLocation is not null UNION  SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ReceiverLegalEntityId = L.ID   where  L.ServiceLocation is not null ', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'List the TSA service locations in my project.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 174;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs],     s.Title   AS [TSA Statuses] FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID     LEFT JOIN         Functions   F             ON TSA.FunctionId = F.ID WHERE     F.Title = ${FunctionName}', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'List the TSAs for the Finance fucntion with their status.'
WHERE [ID] = 175;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] != ''CAPITAL_EDGE_SUPPORT'' order by TT.Title ', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'What are the project teams that make up the governance structure for this engagement?'
WHERE [ID] = 176;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title ', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many milestones does each team have?'
WHERE [ID] = 177;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many interdependencies does each team have?'
WHERE [ID] = 178;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(1) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title ', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many risks does each team have?'
WHERE [ID] = 179;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 180;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 181;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 182;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 183;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 184;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do I add a client user to the PMO app?'
WHERE [ID] = 185;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 186;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past.'
WHERE [ID] = 187;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 188;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 189;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 190;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 191;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 192;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 193;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 194;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past.'
WHERE [ID] = 195;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [Source] = N'ey-guidance', [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 196;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 197;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 198;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 199;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 200;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past.'
WHERE [ID] = 201;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 202;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 203;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 204;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past.'
WHERE [ID] = 205;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 206;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 207;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 208;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 209;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 210;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 211;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 212;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 213;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 214;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 215;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 216;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 217;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 218;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best strategies for improving a company in the {Sector} sector?'
WHERE [ID] = 219;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are recent examples of improvements being made in the {Sector} sector?'
WHERE [ID] = 220;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 221;
SELECT @@ROWCOUNT;

GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] ON;
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (222, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What should be the frequency of tracking dollar values during the engagement?', NULL, N'System', CAST(1 AS bit)),
(223, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are typical implications for cross border deals?', NULL, N'System', CAST(1 AS bit)),
(224, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What is a normative operating model for the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(225, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What are key considerations when defining an operating model for a {Sector} sector company?', NULL, N'System', CAST(1 AS bit)),
(226, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What are examples of Day 1 process dispositions?', NULL, N'System', CAST(1 AS bit)),
(227, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What are the corporate functions typically involved in the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(228, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What are the typical services of the Sales and Marketing function?', NULL, N'System', CAST(1 AS bit)),
(229, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.', NULL, N'System', CAST(1 AS bit)),
(230, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Provides templates of TSA.', NULL, N'System', CAST(1 AS bit)),
(231, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What should be the typical duration for TSA?', NULL, N'System', CAST(1 AS bit)),
(232, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Things I should keep in mind for longer duration TSAs?', NULL, N'System', CAST(1 AS bit)),
(233, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'Generate a basic workplan template for my project.', NULL, N'System', CAST(1 AS bit)),
(234, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the key risks for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(235, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the key milestones for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(236, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the best practices to run weekly status meetings?', NULL, N'System', CAST(1 AS bit)),
(237, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System', CAST(1 AS bit));
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240610142955_AddNewSuggestionForProjectData_2', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(ID) AS NewRisksCount FROM RisksAndIssues WHERE IssueRiskCategory = ''Risk'' AND DATEDIFF(day, Created, GETDATE()) <= 5'
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240612064650_UpdateOneSuggestionQuery', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DECLARE @var2 sysname;
SELECT @var2 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[AssistantMessageFeedbacks]') AND [c].[name] = N'IsLiked');
IF @var2 IS NOT NULL EXEC(N'ALTER TABLE [AssistantMessageFeedbacks] DROP CONSTRAINT [' + @var2 + '];');
ALTER TABLE [AssistantMessageFeedbacks] ALTER COLUMN [IsLiked] bit NULL;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240612085831_isLikedFeedbackColumnSchemaUpdate', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title AS WorkPlanItem FROM Workplan W LEFT JOIN UserProfiles UP ON W.TaskOwnerID = UP.ID LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE UP.Title = ''{Username}'' AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List out workplan items assigned to User in PMO app.'
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT WP.Title FROM Workplan WP JOIN ProjectTeams PT ON WP.ProjectTeamId = PT.ID JOIN Statuses S ON WP.WorkPlanTaskStatusId = S.ID JOIN TeamTypes TT ON PT.TeamTypeID = TT.ID WHERE S.[Key] = ''BEHIND_SCHEDULE'' AND TT.[Key] = ''PROJECT_MANAGEMENT'' AND PT.Title = {ProjectTeam}', [SuggestionText] = N'List out Behind Schedule items for HR team in PMO app.'
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title AS WorkPlanItem FROM Workplan W LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE TT.[Key] = ''PROJECT_MANAGEMENT'' AND DATEPART(ww,TaskDueDate) = DATEPART(ww,GETDATE()) + 1', [SuggestionText] = N'List out workplan items due next week in PMO app.'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title AS RisksWithNoMitigation FROM RisksandIssues RI LEFT JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE RiskMitigation IS NULL AND IssueRiskCategory = ''Risk'' AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List out Risks with no mitigation plan in place in PMO app.'
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title AS RisksWithNoMitigation FROM RisksandIssues RI LEFT JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE RI.ItemOwnerID IS NULL AND IssueRiskCategory = ''Risk'' AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List out Risks with no owners assigned to them in PMO app.'
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title As Milestones FROM Workplan W LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE WorkplanTaskType = ''Milestone''  AND CAST(StartDate AS DATE) > CAST(GETDATE() AS DATE) AND TT.[Key] = ''PROJECT_MANAGEMENT'' AND EXISTS (SELECT 1 FROM [dbo].[WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues] WHERE WorkplanID = W.ID)', [SuggestionText] = N'Show me upcoming milestones that have risks linked to it in PMO app.'
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How many teams do I have in PMO app?'
WHERE [ID] = 29;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are child teams of Finance in PMO app?'
WHERE [ID] = 30;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Parent.Title AS ParentTeam FROM ProjectTeams Parent JOIN ProjectTeams Child ON Child.ParentProjectTeamId = Parent.ID JOIN TeamTypes TT ON Parent.TeamTypeId = TT.ID WHERE TT.[Key] = ''PROJECT_MANAGEMENT'' AND Child.Title = {ProjectTeam}', [SuggestionText] = N'What is the parent team of Tax in PMO app?'
WHERE [ID] = 31;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(RI.ID) IssueCoutnwithNoMitigationPlan FROM RisksandIssues RI LEFT JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE RiskMitigation IS NULL AND IssueRiskCategory = ''Issue'' AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'How many issues don''t have a mitigation plan in PMO app?'
WHERE [ID] = 35;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  WP.UniqueItemIdentifier ,WP.Title FROM WORKPLAN WP JOIN ProjectTeams PT ON WP.ProjectTeamId = PT.ID JOIN Statuses S ON WP.WorkPlanTaskStatusId = S.ID JOIN TeamTypes TT ON PT.TeamTypeID = TT.ID WHERE  TaskOwnerId IS NULL AND WorkPlanTaskType = ''Task'' AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List tasks that have missing owners in PMO app.'
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  COUNT(1) [HighRiskItemCount] FROM RisksAndIssues R JOIN ProjectTeams PT ON PT.ID = R.ProjectTeamId WHERE  RiskImpact = ''High''  AND IssueRiskCategory = ''Risk'' AND PT.Title ={ProjectTeam}', [SuggestionText] = N'How many high risk items are there for IT in PMO app?'
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksCompletedLastWeek  FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID    JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID   JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    CAST(ActualEndDate AS DATE) >= DATEADD(week,DATEDIFF(week, 0, GETDATE()) -1,0)    AND CAST(ActualEndDate AS DATE) < DATEADD(week, DATEDIFF(week, 0, GETDATE()), 0)    AND S.[KEY] IN (''COMPLETED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'How many workplan tasks were completed last week in PMO app?'
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksCompletedLastWeek  FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID    JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID   JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  CAST(ActualEndDate AS DATE) >= CAST(DATEADD(week,DATEDIFF(week,0,GETDATE()), 0) AS DATE)   AND CAST(ActualEndDate AS DATE) < CAST( DATEADD(week,DATEDIFF(week,0, GETDATE()) + 1,0) AS DATE)   AND S.[KEY] IN (''COMPLETED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'How many workplan tasks are completed this week in PMO app?'
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksCompletedLastWeek  FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID    JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID   JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  CAST(ActualEndDate AS DATE) >= CAST(DATEADD(week,DATEDIFF(week,0,GETDATE()), 0) AS DATE)   AND CAST(ActualEndDate AS DATE) < CAST( DATEADD(week,DATEDIFF(week,0, GETDATE()) + 1,0) AS DATE)   AND S.[KEY] NOT IN (''COMPLETED'', ''CANCELLED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'How many workplan tasks that are due this week in PMO app?'
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksCompletedLastWeek  FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID    JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID   JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE   CAST(TaskDueDate AS DATE) >=  CAST(DATEADD(week, DATEDIFF(week,0, GETDATE()) + 1,0) AS DATE)   AND CAST(TaskDueDate AS DATE) < CAST(DATEADD(week,DATEDIFF(week,0,GETDATE()) + 2,0) AS DATE)   AND S.[KEY] NOT IN (''COMPLETED'', ''CANCELLED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'How many workplan tasks that are due next week in PMO app?'
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT   W.ID,W.Title FROM Workplan W LEFT JOIN Workstreams WS On  W.WorkstreamId=Ws.ID WHERE WS.Title LIKE {Workstream}', [SuggestionText] = N'How can I export workplan for just Finance workstream from PMO app?'
WHERE [ID] = 44;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    RI.UniqueItemIdentifier,    RI.Title,    ''Risks'' as Category  FROM    RisksAndIssues RI   JOIN Statuses S ON RI.ItemStatusId = S.ID  JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[KEY] NOT IN (     ''COMPLETED'', ''CANCELLED'', ''CLOSED'',      ''ON_HOLD''   )    AND RI.IssueRiskCategory = ''Risk''    AND TT.[Key] = ''PROJECT_MANAGEMENT'' UNION  SELECT    RI.UniqueItemIdentifier,    RI.Title,    ''Issues'' as Category  FROM    RisksAndIssues RI   JOIN Statuses S ON RI.ItemStatusId = S.ID  JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[KEY] NOT IN (     ''COMPLETED'', ''CANCELLED'', ''CLOSED'',      ''ON_HOLD''   )    AND RI.IssueRiskCategory = ''Issue''    AND TT.[Key] = ''PROJECT_MANAGEMENT'' UNION  SELECT    A.UniqueItemIdentifier,    A.Title,    ''Actions'' as Category  FROM    Actions A    JOIN Statuses S ON A.ItemStatusId = S.ID    JOIN ProjectTeams PT ON A.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[KEY] NOT IN (     ''COMPLETED'', ''CANCELLED'', ''CLOSED'',      ''ON_HOLD''   )    AND TT.[Key] = ''PROJECT_MANAGEMENT'' UNION  SELECT    D.UniqueItemIdentifier,    D.Title,    ''Decisions'' as Category  FROM    Decisions D    LEFT JOIN Statuses S ON D.ItemStatusId = S.ID      JOIN ProjectTeams PT ON D.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[KEY] NOT IN (     ''COMPLETED'', ''CANCELLED'', ''CLOSED'',      ''ON_HOLD''   )   AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List all Open Risks, Issues, Actions and Decisions in PMO app.'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    W.UniqueItemIdentifier,    W.TITLE as CriticalTasks  FROM    Workplan W      JOIN ProjectTeams PT On W.WorkstreamId = PT.ID  JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    W.IsCritical = 1   AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List all critical workplan tasks in PMO app.'
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    COUNT(W.ID) as CountofCriticalPath   FROM    Workplan W      JOIN ProjectTeams PT On W.WorkstreamId = PT.ID  JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    W.IsCritical = 1   AND TT.[Key] = ''PROJECT_MANAGEMENT''   and W.WorkPlanTaskType = ''Milestone''', [SuggestionText] = N'How many critical milestones in workplan in PMO app?'
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    COUNT(W.ID) AS TasksDueIn30Days  FROM    Workplan W    LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID        JOIN ProjectTeams PT On W.WorkstreamId = PT.ID  JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    CAST(W.TaskDueDate AS DATE) <= CAST(GETDATE() + 30 AS DATE)    AND CAST(W.TaskDueDate AS DATE) >= CAST(GETDATE() AS DATE)    AND S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'How many tasks are due in next 30 days in PMO app?'
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  W.UniqueItemIdentifier,W.Title TasksWithoutOwner FROM  WorkPlan W JOIN ProjectTeams PT On W.WorkstreamId = PT.ID  JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  W.TaskOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List any workplan items that do not have an owner assigned in PMO app.'
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  RI.UniqueItemIdentifier,RI.Title ItemsWithoutOwner, IssueRiskCategory AS Category FROM  RisksAndIssues RI LEFT JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  WHERE  RI.ItemOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT'' UNION  SELECT  A.UniqueItemIdentifier,A.Title  ItemsWithoutOwner, ''Actions'' AS Category FROM  Actions A LEFT JOIN ProjectTeams PT ON A.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  A.ItemOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT''  UNION  SELECT  D.UniqueItemIdentifier,D.Title  ItemsWithoutOwner, ''Decisions'' AS Category FROM  Decisions D LEFT JOIN ProjectTeams PT ON D.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  D.ItemOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List any RAID log items that do not have an owner assigned in PMO app.'
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title AS InterdependencyWithoutTasks FROM Interdependencies I LEFT JOIN WorkPlansToInterdependenciesForProviderTasks WTP ON WTP.InterdependencyId = I.ID WHERE WTP.ID IS NULL  UNION  SELECT I.UniqueItemIdentifier, I.Title AS InterdependencyWithoutTasks FROM Interdependencies I LEFT JOIN WorkPlansToInterdependenciesForReceiverTasks WTR ON WTR.InterdependencyId = I.ID WHERE WTR.ID IS NULL;', [SuggestionText] = N'List interdependencies that do not have a provider or receiver task linked.'
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT      UP.Title AS UserName  FROM      WorkPlan W JOIN UserProfiles UP ON UP.ID = W.TaskOwnerId JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE      S.[Key] IN (''AT_RISK'', ''BEHIND_SCHEDULE'')     AND UP.Title IS NOT NULL AND TT.[Key] =  ''PROJECT_MANAGEMENT''', [SuggestionText] = N'Show me a list of all users that have behind schedule or at risk items assigned to them in PMO app.'
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title RisksAndIssues, IssueRiskCategory FROM RisksAndIssues RI LEFT JOIN Statuses S ON S.ID = RI.ItemStatusId WHERE IsCritical IN (1) AND S.[Key] NOT IN (''CLOSED'')', [SuggestionText] = N'Show me all Risks and issues that are flagged as Critical and not complete.'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ProjectTeam FROM(   SELECT      PT.Title AS Projectteam,     COUNT(PT.ID) AS TeamUpdateCount, DENSE_RANK() OVER (ORDER BY COUNT(PT.ID)) ROW_NUM FROM      WorkPlan W JOIN ProjectTeams PT ON PT.ID = W.ProjectTeamId JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE      CAST(W.Modified AS DATE) BETWEEN DATEADD(day, -14, CAST(GETDATE() AS DATE)) AND DATEADD(day, -7, CAST(GETDATE() AS DATE)) AND PT.ItemIsActive=1 AND TT.[Key] =  ''PROJECT_MANAGEMENT'' GROUP BY      pt.title) A', [SuggestionText] = N'Which functions has made the least # of updates to their workplan in last week in PMO app?'
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      W.Title AS [List of Critical Milestones due in next 15 days with no owners Assigned yet] FROM      WorkPlan W JOIN ProjectTeams PT ON PT.ID = W.ProjectTeamId JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE      WorkPlanTaskType IN (''Milestone'')     AND CAST(TaskDueDate AS DATE) BETWEEN CAST(GETDATE() AS DATE) AND DATEADD(day, 15, CAST(GETDATE() AS DATE))     AND IsCritical IN (1)     AND TaskOwnerId IS NULL AND TT.[Key] =  ''PROJECT_MANAGEMENT''', [SuggestionText] = N'Can you please list down all milestones due in next 15 days which are on critical path and have no owners assigned to them in PMO app??'
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title as [List down all tasks associated with interdependencies] from Workplan where ID in ( SELECT WorkPlanId FROM WorkPlansToInterdependenciesForReceiverTasks UNION select WorkPlanId FROM WorkPlansToInterdependenciesForProviderTasks) AND WorkPlanTaskType=''Task''', [SuggestionText] = N'Can you please list down all tasks associated with interdependencies?'
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title AS WorkplanAssociatedWithInterdependencies FROM WorkPlan W INNER JOIN WorkPlansToInterdependenciesForReceiverTasks WPRT ON W.id = WPRT.WorkPlanId LEFT JOIN Interdependencies IR ON WPRT.InterdependencyId = IR.ID WHERE CAST(W.TaskDueDate AS DATE) < CAST(IR.ItemDueDate AS DATE) AND W.WorkPlanTaskType=''Task'' UNION SELECT W.Title AS WorkplanAssociatedWithInterdependencies FROM WorkPlan W INNER JOIN WorkPlansToInterdependenciesForProviderTasks WPPT ON W.id = WPPT.WorkPlanId LEFT JOIN Interdependencies IR ON WPPT.InterdependencyId = IR.ID WHERE CAST(W.TaskDueDate AS DATE) < CAST(IR.ItemDueDate AS DATE) AND W.WorkPlanTaskType=''Task''', [SuggestionText] = N'Can you please list down all tasks whose due date is less than the due date of the associated interdependency?'
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title AS WorkPlanItem FROM Workplan W LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE TT.[Key] = ''PROJECT_MANAGEMENT''  AND DATEPART(ww,TaskDueDate) = DATEPART(ww,GETDATE())', [SuggestionText] = N'List out workplan items due this week in PMO app.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title, W.WorkPlanTaskType, W.StartDate, W.TaskDueDate, PT.Title ProjectTeam, S.Title [Status], UP.Title TaskOwner FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN UserProfiles UP ON W.TaskOwnerId = UP.ID WHERE UniqueItemIdentifier = ''HR.2.2.6''', [SuggestionText] = N'Provide details for workplan ID HR.2.2.6.'
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(RI.ID) IssueCoutnwithPendingStatus FROM RisksandIssues RI LEFT JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID JOIN RiskAndIssueStatuses RS ON RI.ItemStatusID = RS.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE IssueRiskCategory = ''Issue'' AND TT.[Key] = ''PROJECT_MANAGEMENT'' AND RS.Title = ''Pending''', [SuggestionText] = N'How many issues are in pending status in PMO app?'
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	UniqueItemIdentifier 	,Title 	,IssueRiskCategory FROM RisksAndIssues WHERE  	ItemOwnerId IS NULL  UNION ALL  SELECT  	UniqueItemIdentifier 	,Title 	,''Decision'' FROM Decisions WHERE  	ItemOwnerId IS NULL  UNION ALL  SELECT  	UniqueItemIdentifier 	,Title 	,''Action'' FROM Actions WHERE  	ItemOwnerId IS NULL', [SuggestionText] = N'List RAID items that do not have an owner assigned.'
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    W.UniqueItemIdentifier,    W.TITLE as WorkplansWithDueDatePassed  FROM    Workplan W    LEFT JOIN Statuses S On S.ID = W.WorkPlanTaskStatusId   LEFT JOIN ProjectTeams PT on PT.ID = W.ProjectTeamId   LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId WHERE    S.[KEY] NOT IN ( ''COMPLETED'' , ''CANCELLED'')   AND CAST(W.TaskDueDate as DATE)< CAST(GETDATE() AS DATE)    AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List all Workplan tasks that are ''Not Started'' and planned start date has passed in PMO app.'
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    W.UniqueItemIdentifier,    W.TITLE as WorkplansWithDueDatePassed  FROM    Workplan W    LEFT JOIN Statuses S On S.ID = W.WorkPlanTaskStatusId    LEFT JOIN ProjectTeams PT on PT.ID = W.ProjectTeamId   LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId WHERE    S.[KEY] NOT IN ( ''COMPLETED'' , ''CANCELLED'')   AND CAST(W.TaskDueDate as DATE)< CAST(GETDATE() AS DATE)    AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List all Workplan tasks which are past due in PMO app.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT PT.Title as ProjectTeams_With_Items_At_Risk  FROM ProjectTeams PT    JOIN Workplan W ON W.ProjectTeamID = PT.ID    JOIN Statuses S ON S.ID = W.WorkplanTaskStatusID    JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[Key] = ''AT_RISK''   AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List all project teams with workplan items that are ''At Risk'' in PMO app.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ProjectTeams WHERE ManageProjectStatus = 1 EXCEPT SELECT PT.Title FROM ProjectStatusEntries PSE LEFT JOIN ReportingPeriods RP ON PSE.ReportingPeriodId = RP.ID LEFT JOIN ProjectTeams PT ON PSE.ProjectTeamId = PT.ID WHERE RP.ID = (SELECT ID FROM ReportingPeriods 				WHERE CAST(GETDATE() AS DATE) BETWEEN CAST(PeriodStartDate AS DATE) AND CAST(PeriodEndDate AS DATE) 					) 	AND PSE.WeeklyStatusStatusId IS NOT NULL', [SuggestionText] = N'Which teams have not entered thier weekly status report for this reporting period?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  COUNT(R.ID) AS NewRisksCount FROM  RisksAndIssues R JOIN ProjectTeams PT ON R.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  IssueRiskCategory = ''Risk'' AND DATEDIFF(day, R.Created, GETDATE()) <= 5 AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'How many new risks have been created in the last 5 days in PMO app?'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title Workplan FROM (     SELECT          DISTINCT W.Title, WorkPlanLinksTargetId AS TaskID     FROM          WorkPlanLinks WL         LEFT JOIN WorkPlan W ON W.ID = WL.WorkPlanLinksTargetId      UNION      SELECT          DISTINCT W.Title, WorkPlanLinksSourceId AS TaskID     FROM          WorkPlanLinks WL         LEFT JOIN WorkPlan W ON W.ID = WL.WorkPlanLinksSourceId ) AS SubQuery ORDER BY TaskID', [SuggestionText] = N'Which tasks have a predecessor or successor linked to them?'
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ProjectTeam FROM(   SELECT      PT.Title AS Projectteam,     COUNT(PT.ID) AS TeamUpdateCount, DENSE_RANK() OVER (ORDER BY COUNT(PT.ID) DESC) ROW_NUM FROM      RisksAndIssues RI JOIN ProjectTeams PT ON PT.ID = RI.ProjectTeamId JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE PT.ItemIsActive=1 and RI.IssueRiskCategory = ''Risk'' AND TT.[Key] =  ''PROJECT_MANAGEMENT'' GROUP BY      pt.title) A', [SuggestionText] = N'Which function has the highest number of risk associated with in PMO app?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      W.Title AS [List of Milestones due in next 7 days and Not Updated Since Last 2 weeks] FROM      WorkPlan W JOIN Statuses S on s.ID = W.WorkPlanTaskStatusId JOIN ProjectTeams PT ON PT.ID = W.ProjectTeamId JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE      W.WorkPlanTaskType IN (''Milestone'')     AND W.IsCritical IN (1)     AND CAST(W.Modified AS DATE) < DATEADD(day, -14, CAST(GETDATE() AS DATE)) AND S.[Key] not in (''COMPLETED'', ''CANCELLED'') AND TT.[Key] =  ''PROJECT_MANAGEMENT''', [SuggestionText] = N'Can you please list down all milestones due in next 7 days which are on critical path and have no update made to them in last 2 weeks in PMO app?'
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     RI.TITLE AS [Risk items that does not have Risk Mitigation plan] FROM     RisksAndIssues RI WHERE     RI.IssueRiskCategory = ''Risk''     AND RI.RiskMitigation IS NOT NULL', [SuggestionText] = N'Are there any risks items that doesn''t have risk mitigation plan?'
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(R.ID) [Reports available in PMO] FROM Reports R JOIN MenuOptions M ON R.ParentMenuItemId = M.ID WHERE M.[Key] = ''PROJECT_ANALYTICS'' AND R.ReportIsActive = 1', [SuggestionText] = N'How many Analytics reports are available for PMO App?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      A.*,     B.StartOfWeek,     B.EndOfWeek FROM (     SELECT TOP 1         COUNT(*) AS NumberOfItemsDue,         DATEPART(week, TaskDueDate) AS WeekNumber     FROM          WorkPlan      LEFT JOIN          Statuses S ON S.ID = WorkPlan.WorkPlanTaskStatusId     WHERE          TaskDueDate IS NOT NULL AND          S.[key] <> ''COMPLETE''     GROUP BY          DATEPART(week, TaskDueDate)     ORDER BY          COUNT(*) DESC ) AS A INNER JOIN (     SELECT          DATEADD(week, DATEDIFF(week, 0, TaskDueDate), 0) AS StartOfWeek,         DATEADD(week, DATEDIFF(week, 0, TaskDueDate) + 1, 0) - 1 AS EndOfWeek,         DATEPART(week, TaskDueDate) AS WeekNumber     FROM          WorkPlan      LEFT JOIN          Statuses S ON S.ID = WorkPlan.WorkPlanTaskStatusId     WHERE          TaskDueDate IS NOT NULL AND          S.[key] <> ''COMPLETE''     GROUP BY          DATEPART(week, TaskDueDate),          DATEADD(week, DATEDIFF(week, 0, TaskDueDate), 0),          DATEADD(week, DATEDIFF(week, 0, TaskDueDate) + 1, 0) ) AS B ON B.WeekNumber = A.WeekNumber', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What week has the most workplan items due across the project?'
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      A.*,     B.StartOfWeek,     B.EndOfWeek FROM (     SELECT TOP 1         COUNT(*) AS NumberOfItemsDue,         DATEPART(week, TaskDueDate) AS WeekNumber     FROM          WorkPlan      LEFT JOIN          Statuses S ON S.ID = WorkPlan.WorkPlanTaskStatusId     WHERE          TaskDueDate IS NOT NULL AND          S.[key] <> ''COMPLETE''     GROUP BY          DATEPART(week, TaskDueDate)     ORDER BY          COUNT(*) DESC ) AS A INNER JOIN (     SELECT          DATEADD(week, DATEDIFF(week, 0, TaskDueDate), 0) AS StartOfWeek,         DATEADD(week, DATEDIFF(week, 0, TaskDueDate) + 1, 0) - 1 AS EndOfWeek,         DATEPART(week, TaskDueDate) AS WeekNumber     FROM          WorkPlan      LEFT JOIN          Statuses S ON S.ID = WorkPlan.WorkPlanTaskStatusId     WHERE          TaskDueDate IS NOT NULL AND          S.[key] <> ''COMPLETE''     GROUP BY          DATEPART(week, TaskDueDate),          DATEADD(week, DATEDIFF(week, 0, TaskDueDate), 0),          DATEADD(week, DATEDIFF(week, 0, TaskDueDate) + 1, 0) ) AS B ON B.WeekNumber = A.WeekNumber', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What week has the most workplan items due across the project?'
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      AccomplishmentsAndNextSteps.Title FROM     ProjectStatusEntries     LEFT OUTER JOIN AccomplishmentsAndNextSteps ON ProjectStatusEntries.ID = AccomplishmentsAndNextSteps.ProjectStatusEntryId     LEFT JOIN ProjectTeams PT ON PT.ID = ProjectStatusEntries.ProjectTeamId     LEFT OUTER JOIN ReportingPeriods ON ProjectStatusEntries.ReportingPeriodId = ReportingPeriods.ID  WHERE     AccomplishmentNextStepCategory IN ''{AccomplishmentNextStepCategory}'' AND ReportingPeriods.PeriodStartDate = (         SELECT TOP 1 PeriodStartDate          FROM ReportingPeriods          WHERE CAST (GETDATE() AS DATE) BETWEEN CAST(PeriodStartDate AS DATE) AND CAST(PeriodEndDate AS DATE)      ) ', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the key action items scheduled for next week?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH CTE AS (SELECT COUNT(*) AS OverdueItemCount,        PT.Title AS [ProjectTeam With Most Overdue Item] FROM WorkPlan W LEFT JOIN [ProjectTeams] PT ON PT.ID = W.ProjectteamId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId WHERE  	  S.[Key] <> ''{Key}''       AND CAST(W.TaskDueDate AS DATE ) < CAST(GETDATE() AS DATE) 	  AND PT.Title IS NOT NULL	 GROUP BY PT.Title ) SELECT Top 1 [ProjectTeam With Most Overdue Item] FROM CTE ORDER BY OverdueItemCount DESC', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Which function has the most overdue items?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ''Total Top Down Target'' AS KPI, FORMAT((SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate))/1000000,''N2'') AS ''Value (Million)'' FROM ValueCaptureTopDownEstimates ', [SuggestionText] = N'What are our targets for this engagement?'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ''{Username}'' GROUP BY S.Title ', [SuggestionText] = N'How are my initiatives doing?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = ''{Username}'' ', [SuggestionText] = N'Are there any risks or issues with initiatives that I’m responsible for?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ''{Username}'' ', [SuggestionText] = N'How  many initiatives are assigned to me?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ''{Username}'' ', [SuggestionText] = N'Give my cost reduction initiatives.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(RevenueGrowthEstimate,0)) [RevenueGrowthTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title = {ProjectTeam}', [SuggestionText] = N'What are the revenue growth targets for Sales & Marketing?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(CostToAchieveEstimate,0)) [CostToAchieveTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title ={ProjectTeam}', [SuggestionText] = N'What are the cost to achieve targets for R&D?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT S.Title [Value Capture Stage] , COUNT(VI.ID) [No. of Initiatives] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} GROUP BY S.Title', [SuggestionText] = N'How many initiatives are there in IT across different stages?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Approved Initiaves] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} AND S.Title = ''Approved''', [SuggestionText] = N'List IT initiatives that are in approved stage.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves with Workplan] FROM ValueCaptureInitiatives VI JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WV ON VI.ID = WV.ValueCaptureInitiativeId', [SuggestionText] = N'List initiatives that have workplan item linked to them.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT VI.Title [Initiaves with Risk] FROM ValueCaptureInitiatives VI JOIN RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RV ON VI.ID = RV.ValueCaptureInitiativeId LEFT JOIN RisksAndIssues RI ON RI.ID = RV.RisksAndIssueId WHERE RI.IssueRiskCategory = ''Risk''', [SuggestionText] = N'How many initiatives have Risks linked?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(HeadcountCostReductionEst,0)) [HeadCountCostReductionTarget] FROM [ValueCaptureTopDownEstimates] VT', [SuggestionText] = N'What is the total headcount cost reduction target?'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Non Active Initiaves] FROM ValueCaptureInitiatives VI WHERE ISNULL(VI.IsItemActive ,0) = 0', [SuggestionText] = N'List initiatives that are not active.'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages  VCS ON VCI.ValueCaptureStageId = VCS.ID WHERE VCS.Title = {ValueCaptureStage} ', [SuggestionText] = N'How many initiatives have been realized?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(NonHeadcountCostReductionEst) + SUM(RevenueGrowthEstimate) + SUM(HeadcountCostReductionEst) ''Total Top Down Target Value'' FROM ValueCaptureTopDownEstimates', [SuggestionText] = N'What is the Total Top Down Target Value?'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(RevenueGrowthEstimate) RevenueGrowth,SUM(TotalCostReduction) CostReduction FROM ValueCaptureTopDownEstimates', [SuggestionText] = N'Show my top down target values by cost reduction and revenue growth.'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(ID) FROM ValueCaptureInitiatives WHERE IsItemActive = 1', [SuggestionText] = N'How many active initatives are there in my project?'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team] ,CAST(SUM(ISNULL(RevenueGrowthEstimate,0))/1000000 AS FLOAT) [Revenue Growth(in Million)] FROM [ValueCaptureTopDownEstimates] VT 	LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId GROUP BY PT.Title', [SuggestionText] = N'What is the total of revenue growth by team?'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VC.Title AS [ValueCaptureInitiatives with no Owners] FROM ValueCaptureInitiatives VC WHERE ItemOwnerId IS NULL', [SuggestionText] = N'List out initiatives with no owners assigned.'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiative with Workplan at Risk] FROM WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WTVI LEFT JOIN Workplan W ON W.ID = WTVI.WorkPlanId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId LEFT JOIN ValueCaptureInitiatives VI on VI.ID = WTVI.ValueCaptureInitiativeId WHERE S.[KEY] = ''AT_RISK''', [SuggestionText] = N'List out initiatives that have at risk workplan task linked.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VP.Title AS ValueCapturepriority, COUNT(VC.ValueCapturePriorityId) AS ValueCapturePriorityCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId where ValueCapturePriorityId is not null GROUP BY ValueCapturePriorityId, VP.Title', [SuggestionText] = N'Show me initiatives count by priority.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS UserProfile, COUNT(VC.ID) AS ValueCaptureOwnerwiseCount FROM ValueCaptureInitiatives VC LEFT JOIN UserProfiles UP ON UP.ID = VC.ItemOwnerId WHERE ItemOwnerId IS NOT NULL GROUP BY ItemOwnerId, UP.Title', [SuggestionText] = N'Show me initiatives count by owner.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves] FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Title = ''{Username}''', [SuggestionText] = N'List initiatives where I''m assigned as the Owner.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as IdentifiedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Identified''', [SuggestionText] = N'How many initiatives are identified?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as ApprovedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Approved'' ', [SuggestionText] = N'How many initiatives have been approved?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as ValidatedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Validated'' ', [SuggestionText] = N'How many initiatives have been validated?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS [Value Capture Stage] ,COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCI.ValueCaptureStageId = VCS.ID GROUP BY VCS.Title', [SuggestionText] = N'Can you provide breakdown of the initiatives across various stages?'
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}''', [SuggestionText] = N'What initatives have I been assigned to?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VS.Title ValueCaptureStage FROM ValueCaptureInitiatives VI JOIN ValueCaptureStages VS ON VI.ValueCaptureStageID = VS.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}'' ORDER BY ValueCaptureStage', [SuggestionText] = N'List my initatives by stages.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VT.Title ValueCaptureType FROM ValueCaptureInitiatives VI JOIN ValueCaptureTypes VT ON VI.ValueCaptureStageID = VT.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}'' ORDER BY ValueCaptureType', [SuggestionText] = N'List my initatives by Value Capture Type.'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title,SUM(ISNULL(NonHeadcountCostReductionEst,0)) + SUM(ISNULL(RevenueGrowthEstimate,0)) + SUM(ISNULL(HeadcountCostReductionEst,0)) AS TotalTopDownTarget FROM ValueCaptureTopDownEstimates LEFT JOIN ProjectTeams PT ON PT.ID = ValueCaptureTopDownEstimates.Projectteamid GROUP BY PT.Title', [SuggestionText] = N'What is the top-down target for this project?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS ValueCaptureStage, COUNT(VC.ID) AS ValueCaptureStageCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VC.ValueCaptureStageId GROUP BY ValueCaptureStageId, VCS.Title', [SuggestionText] = N'Show me initiatives count by stage.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title as Functions, COUNT(VC.FunctionId) AS ValueCaptureFunction FROM ValueCaptureInitiatives VC LEFT JOIN Functions f ON f.ID = VC.FunctionId WHERE FunctionId IS NOT NULL GROUP BY FunctionId, F.Title ', [SuggestionText] = N'Show me initiatives count by function.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT     CC.Title AS [Cost/Revenue Centers linked to PnL Line Items], CC.Account FROM CostCenters CC     LEFT JOIN ValueCaptureFinancialLineItems Fin         ON CC.FinancialLineItemId = Fin.ID     LEFT JOIN ValueCaptureFinancialLineItemTypes FinType         ON Fin.FinancialLineItemTypeId = FinType.ID WHERE FinType.Title = ''PnL''', [SuggestionText] = N'List all Cost/Revenue Centers linked to PnL Line Items.'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(ID) AS [Top Down targets #],        SUM(ISNULL(NonHeadcountCostReductionEst, 0)) AS [Total Non Headcount Cost Reduction Estimate],        SUM(ISNULL(RevenueGrowthEstimate, 0)) AS [Total Revenue Growth Estimate],        SUM(ISNULL(CostToAchieveEstimate, 0)) AS [Total Cost To Achieve Estimate],        SUM(ISNULL(HeadcountCostReductionEst, 0)) AS [Total Headcount Cost Reduction Estimate],        SUM(ISNULL(HeadcountCostReductionEst, 0)) + SUM(ISNULL(NonHeadcountCostReductionEst, 0))        + SUM(ISNULL(RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates ', [SuggestionText] = N'Can you provide Top Down Targets KPIs?'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  VCTT.Title, PT.Title, VCTT.CostToAchieveEstimate, VCTT.NonHeadcountCostReductionEst, VCTT.HeadcountCostReductionEst, VCTT.RevenueGrowthEstimate FROM   ValueCaptureTopDownEstimates VCTT  Left Join ProjectTeams PT on PT.ID = VCTT.ProjectTeamId', [SuggestionText] = N'How many top down targets do we have for this project?'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(HeadcountCostReductionEst,0)) AS HeadcountCostReduction FROM ValueCaptureTopDownEstimates', [SuggestionText] = N'What is the Total Headcount Cost Reduction Target?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(NonHeadcountCostReductionEst,0)) AS NonHeadcountCostReduction FROM  ValueCaptureTopDownEstimates', [SuggestionText] = N'What is the Total Non Headcount Cost Reduction Target?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(RevenueGrowthEstimate,0)) AS RevenueGrowth FROM  ValueCaptureTopDownEstimates', [SuggestionText] = N'What is the Total Revenue Growth Target?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(CostToAchieveEstimate,0)) AS CostToAchive FROM  ValueCaptureTopDownEstimates', [SuggestionText] = N'What is the Total Cost to Achieve Target?'
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PT.Title ProjectTeams, VBM.Title Benchmark FROM  ValueCaptureCostBenchmarks VBM LEFT JOIN  ProjectTeams PT ON PT.ID = VBM.ProjectTeamId', [SuggestionText] = N'Are there any benchmarks for this project?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Amount as [Client Baseline PnL Amount], A.FinancialLineItem as FinancialLineItem FROM( SELECT F.ID, F.Ordinal, F.Title FinancialLineItem , SUM(C.Amount)/1000000 Amount FROM ValueCaptureFinancialLineItems F LEFT JOIN CostCenters C ON C.FinancialLineItemId = F.ID  GROUP BY F.ID, F.Title, F.Ordinal ) A WHERE A.Amount IS NOT NULL', [SuggestionText] = N'What is my program Client Baseline PnL?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Recommended Initiatives List] FROM     ValueCaptureRecommendedInitiatives', [SuggestionText] = N'List all recommended initiatives for my program.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	SUM(a.[Total Top Down Target Value]) AS [Top Down Targets],      SUM(b.[Bottom Up Initiatives Value]) AS [Bottom Up Initiatives Value], 	( SUM(b.[Bottom Up Initiatives Value])-SUM(a.[Total Top Down Target Value])) AS Variance FROM ( SELECT   SUM(ISNULL(HeadcountCostReductionEst, 0)) + SUM(ISNULL(NonHeadcountCostReductionEst, 0))        + SUM(ISNULL(RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates) a, ( select SUM(Amount)*12 as [Bottom Up Initiatives Value]  FROM vwUnpivotEstimates where MYear=''Y3M12'' AND Recurring =1 ) b ', [SuggestionText] = N'Compare Top Down Targets vs Bottom Up Initiatives for my project.'
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'   SELECT ISNULL(SUM(Act.AMOUNT),0.0) AS [Cumulative One Time Cost Amount] 			   FROM vwUnpivotActuals Act 			   LEFT JOIN ValueCaptureImpactTypes VCIT ON Act.ValueCaptureImpactTypeID=VCIT.ID 			   LEFT JOIN ValueCaptureInitiatives VCI ON Act.ValueCaptureInitiativeID=VCI.ID 			   WHERE VCIT.PositiveOrNegativeValues=''Negative'' 			   AND Act.Recurring<>1 			   AND VCI.Title = ''{ValueCaptureInitiative}''', [SuggestionText] = N'What is cumulative one-time cost for all initiatives?'
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'  SELECT  	   WP.Title AS [Workplan Items Linked to Value Capture Initiatives]  	   FROM WorkPlan WP 	   LEFT JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WPVC  	             ON WP.ID=WPVC.WorkPlanId 	   LEFT JOIN ValueCaptureInitiatives VCI  	             ON VCI.ID=WPVC.ValueCaptureInitiativeId', [SuggestionText] = N'List all workplan items linked to VC initiatives.'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID     WHERE          E.Recurring = 1     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID     WHERE          A.Recurring = 1      GROUP BY          A.ValueCaptureInitiativeId, B.Title )   SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , (A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List all initiatives that had an estimate annualized run-rate differed by more than 10% from the Actual annualized run-rate.'
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     CONCAT(''Tracking Period of the Program is from '', CAST(MIN(StartDt) AS DATE), '' to '', CAST(MAX(EndDt) AS DATE)) FROM     ValueCaptureTransactionMonths WHERE     IsItemActive = 1', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What''s the tracking period for my project?'
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''{ProjectTeam}'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''{ProjectTeam}''    ) Act         ON 1 = 1', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What''s the variance for Legal function?'
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT   	    COUNT(VCI.ID) AS [Initiative Count for Selected Evaluator Quad]  		     FROM ValueCaptureInitiatives VCI 		LEFT JOIN VCInitiativeEvaluatorQuadInfo VCQ  		    ON VCI.VCInitiativeEvaluatorQuadInfoId=VCQ.ID 		       WHERE VCQ.Title= {EvaluatorQuad}', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Based on Evaluator comparison, how many initiatives have ''High Benefit, High Complexity''?'
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''{ProjectTeam}'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''{ProjectTeam}''     ) Act         ON 1 = 1', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What is my variance for the IT initiatives?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title Initiatives FROM ValueCaptureInitiatives WHERE ValueCapturePriorityId = 1', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List all initiatives that requires attention.'
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ISNULL(SUM(Est.Amount), 0.0) AS Estimates,        ISNULL(SUM(Act.Amount), 0.0) AS Actuals,        ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''Finance''           and VCI.Title = ''Initiative 1''           and Est.MYear = ''Y1M1'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''Finance''               AND VCI.Title = ''Initiative 1''               AND MYear = ''Y1M1''     ) Act         ON 1 = 1', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What is my Y1M1 Estimates, Actuals and Variance for Finance - [Initiative 1]?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID 	LEFT JOIN ValueCaptureTransactionMonths VT ON VT.[Key] = E.MYear      WHERE          E.Recurring = 1 		AND (CAST( DATEADD(MM, 3 , GETDATE()) AS DATE) BETWEEN VT.StartDt AND VT.EndDt)     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID  	LEFT JOIN ValueCaptureTransactionMonths VT ON VT.[Key] = A.MYear      WHERE          A.Recurring = 1  		AND (CAST( DATEADD(MM, 3 , GETDATE()) AS DATE) BETWEEN VT.StartDt AND VT.EndDt)     GROUP BY          A.ValueCaptureInitiativeId, B.Title )  SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , ABS(A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List initiatives that had an Estimate ARR that differed by 10% (higher or lower) from the Actual ARR for previous month.'
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS TotalNetSales FROM ValueCaptureEstimates VE LEFT JOIN ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId WHERE FLT.Title = ''PnL'' -- pnl 	AND FL.Title in (''Net sales'') -- net total', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'In the PnL, what is my net sales?'
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS TotalOperatingPerformance FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL''  AND FLG.Title in (''Total Operating Performance'') ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'In the PnL, what is my total operating performance?'
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS GrossProfit FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL''  AND FLG.Title in (''Gross Profit'') ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'In the PnL, what is my gross profit?'
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [EBITA & Net Income] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL'' AND FLG.Title in (''EBITDA'',''Net Income'') ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'In the PnL, what is my EBITDA and Net Income?'
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Assets] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Total Current Assets'',''Total Non-Current Assets'') ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'In the Balance Sheet, what is my Total Assets?'
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Liabilities] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Total Current Liabilities'',''Total Non-Current Liabilities'') ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'In the Balance Sheet, what is my Total Liabilities?'
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Equity] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Equity'') ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'In the Balance Sheet, what is my Total Equity?'
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	SUM(NonHeadcountCostReductionEst) NonHeadcountCostReduction, 	SUM(HeadcountCostReductionEst) HeadcountCostReduction FROM ValueCaptureTopDownEstimateS', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What is the total of headcount and non-headcount related cost reduction?'
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH CTE AS  ( 	SELECT ProjectTeamID  	FROM ValueCaptureEstimates E 		LEFT JOIN ValueCaptureInitiatives I ON I.ID = E.ValueCaptureInitiativeId 	EXCEPT 	SELECT ProjectTeamID FROM [ValueCaptureTopDownEstimates] )  SELECT PT.Title [ProjectTeam]  FROM CTE LEFT JOIN ProjectTeams PT ON PT.ID = CTE.ProjectTeamID', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List out teams that have bottom-up estimates but missing top-down targets.'
WHERE [ID] = 143;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' DECLARE @CurrentYR NVARCHAR(10), @SQL NVARCHAR(MAX)  SELECT  TOP 1 @CurrentYR = [YEAR] FROM vwValueCaptureTransactionMonths WHERE RelativeYear = YEAR(GETDATE())   SELECT @SQL = '' ;WITH TopDownCTE AS ( 	SELECT  		PT.ID  PROJECTTEAMID 		,PT.Title [ProjectTeam] 		,(SUM(ISNULL(RevenueGrowthEstimate,0))  + SUM(ISNULL(NonHeadcountCostReductionEst,0)) + SUM(ISNULL(HeadcountCostReductionEst,0)))/1000000  [Target] 	FROM [ValueCaptureTopDownEstimates] VT 		LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId 	WHERE PT.ManageValueCapture = 1 	GROUP BY  		PT.ID  		,PT.Title 	UNION ALL 	SELECT  		-1 		,''''Overall'''' 		,(SUM(ISNULL(RevenueGrowthEstimate,0))  + SUM(ISNULL(NonHeadcountCostReductionEst,0)) + SUM(ISNULL(HeadcountCostReductionEst,0)))/1000000  [Target] 	FROM [ValueCaptureTopDownEstimates] VT 		LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId 	WHERE PT.ManageValueCapture = 1 ) , BottomUPCTE AS ( 	SELECT  		VI.PROJECTTEAMID 		,PT.Title [ProjectTeam] 		,(SUM(ISNULL(E.''+@CurrentYR+''M12Estimate,0))*12)/1000000 [Estimate] 	FROM ValueCaptureEstimates E 	 JOIN ValueCaptureInitiatives VI ON VI.ID =E.ValueCaptureInitiativeId 	 LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId 	WHERE  		VI.IsItemActive = 1  		AND E.Recurring = 1  		AND PT.ManageValueCapture = 1 	GROUP BY  		VI.PROJECTTEAMID 		,PT.Title 	UNION ALL 	SELECT  		-1 		,''''Overall'''' 		,(SUM(ISNULL(E.''+@CurrentYR+''M12Estimate,0))*12)/1000000 [Estimate] 	FROM ValueCaptureEstimates E 	 JOIN ValueCaptureInitiatives VI ON VI.ID =E.ValueCaptureInitiativeId 	 LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId 	WHERE  		VI.IsItemActive = 1  		AND E.Recurring = 1  		AND PT.ManageValueCapture = 1 )  SELECT  	COALESCE(T.PROJECTTEAMID,B.PROJECTTEAMID) ProjectTeamID 	,COALESCE(T.ProjectTeam,B.ProjectTeam) ProjectTeam 	,ISNULL(T.[Target],0) [TopDown Target(M)] 	,ISNULL(B.Estimate,0) [BottomUP Estimate(M)] 	,ISNULL(T.[Target],0) - ISNULL(B.Estimate,0) [Variance(M)] FROM TopDownCTE T 	FULL OUTER JOIN BottomUPCTE B ON T.PROJECTTEAMID = B.ProjectTeamId ORDER BY PROJECTTEAMID''  EXEC sp_executesql  @SQL', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What is the variance between Top down and bottom up? Provide overall variance and variance by the team.'
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID     WHERE          E.Recurring = 1 		AND E.MYear IN (''Y1M12'')     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID     WHERE          A.Recurring = 1          AND A.MYear IN (''Y1M12'')     GROUP BY          A.ValueCaptureInitiativeId, B.Title )   SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , ABS(A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List out initiatives that have an Estimate Annualized Run Rate that differed by 10% (higher or lower) from the Actual Annualized Run Rate for Y1M12.'
WHERE [ID] = 145;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      VC.Title AS ValueCaptureInitiativesReadyForApproval FROM      ValueCaptureInitiatives VC WHERE  	ReadyForApproval = 1', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List out validated initiatives that are ready to be approved.'
WHERE [ID] = 146;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      VI.title AS InitiativeImpactOnPnL FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId WHERE      FL.FinancialLineItemTypeId = 1 GROUP BY      VI.Title', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List out initiatives that are impacting PnL.'
WHERE [ID] = 147;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 5     Initiatives,Amount FROM( SELECT VI.Title Initiatives ,sum(VE.Amount) Amount FROM      vwUnpivotActuals VE LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN 	ValueCaptureImpactTypes VIT ON VIT.ID = VE.ValueCaptureImpactTypeid GROUP BY      VI.Title,VE.Amount ) A  WHERE A.Amount > 0 ORDER BY  	Amount DESC', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List out top 5 initiatives that are positively impacting PnL.'
WHERE [ID] = 148;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT TOP 5  		VI.Title [top 5 initiatives with best benefit score] 	FROM  		ValueCaptureInitiatives VI 	LEFT JOIN  		ValueCaptureImpacts VIM ON VIM.ID = VI.ValueCaptureImpactid 	WHERE  		VIM.ID in (1) 	ORDER BY  		VI.BenefitScore DESC', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List out top 5 initiatives with best benefit score that have high financial impact.'
WHERE [ID] = 149;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT TOP 5  		VI.Title [top 5 most complex initiatives] 	FROM  		ValueCaptureInitiatives VI 	LEFT JOIN  		ValueCaptureImpacts VIM ON VIM.ID = VI.ValueCaptureImpactid 	WHERE  		VIM.ID in (3) 	ORDER BY  		VI.ComplexityScore DESC', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List out top 5 most complex initiatives that have low financial impact.'
WHERE [ID] = 150;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1 	PT.Title, SUM(ISNULL(HeadcountCostReductionEst,0)) AS MostHeadcountCostReduction FROM  	ValueCaptureTopDownEstimates LEFT JOIN  	ProjectTeams PT ON PT.ID = ValueCaptureTopDownEstimates.Projectteamid GROUP BY  	PT.Title ORDER BY  	SUM(ISNULL(HeadcountCostReductionEst,0)) DESC', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Which team has most amount of headcount related cost reduction?'
WHERE [ID] = 151;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Iniatives that are Cost Reduction and are Easy for Implementation Ease] FROM ValueCaptureInitiatives VI     LEFT JOIN ValueCaptureTypes VT         ON VT.ID = VI.ValueCaptureTypeID     LEFT JOIN ImplementationEase VD         ON VD.ID = VI.ImplementationEaseID WHERE VT.Title = ''Cost Reduction''       AND VD.Title = ''Easy''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List all Iniatives that are Cost Reduction and are Easy for Implementation Ease.'
WHERE [ID] = 152;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VS.Title [Value Capture Stage],        VI.Title [Initiatives that have Talent intiative value drivers] FROM ValueCaptureInitiatives VI     LEFT JOIN ValueCaptureStages VS         ON VS.ID = VI.ValueCaptureStageID     LEFT JOIN ValueCaptureInitiativesToValueCaptureValueDriversForValueCaptureValueDrivers VD         ON VD.ValueCaptureInitiativeId = VI.ID     LEFT JOIN ValueCaptureValueDrivers VV         ON VD.ValueCaptureValueDriverId = VV.ID WHERE VV.Title = ''Talent'' ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Provide me a list of Iniatives by stage that have Talent iniative value drivers.'
WHERE [ID] = 153;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	Title as [Value Capture Initiatives with No Owners] FROM 	ValueCaptureInitiatives as VC WHERE 	ItemOwnerId IS NULL', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Show me all iniatives that do not have an owner.'
WHERE [ID] = 154;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ISNULL(VP.Title, ''No Priority'') AS ValueCapturePriority,     COUNT(VC.ID) AS ValueCapturePriorityCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId --WHERE VC.ValueCapturePriorityId IS NOT NULL GROUP BY VC.ValueCapturePriorityId, VP.Title  ---Stage---  SELECT ISNULL(VS.Title, ''No Stage Assigned'') AS ValueCaptureStage,     COUNT(VC.ID) AS ValueCaptureStageCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VS ON VS.ID = VC.ValueCaptureStageId WHERE VC.ValueCaptureStageId IS NOT NULL GROUP BY VC.ValueCaptureStageId, VS.Title', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Provide me a count of initiatives by prioirty and stage.'
WHERE [ID] = 155;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT FL.Title [Balance sheet line items that do not have a linked account] FROM ValueCaptureFinancialLineItems FL     LEFT JOIN ValueCaptureFinancialLineItemTypes FLT         ON FLT.ID = FL.FinancialLineItemTypeID     LEFT JOIN BalanceSheetAccounts BLA         ON BLA.FinancialLineItemID = FL.ID WHERE FLT.Title = ''Balance Sheet''       AND BLA.ID IS NULL', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Show me all Balance sheet line items that do not have a linked account.'
WHERE [ID] = 156;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(E.Amount, 0) * 12) [Run Rate for iniatives in Approved, Committed and Realized] FROM ValueCaptureInitiatives VI     LEFT JOIN vwUnpivotEstimates E         ON E.ValueCaptureInitiativeId = VI.ID     LEFT JOIN ValueCaptureStages VS         ON VS.ID = VI.ValueCaptureStageID WHERE VS.Title IN ( ''Approved'', ''Committed'', ''Realized'' )       AND MYear =       (           select [Key]           from ValueCaptureTransactionMonths           where CAST(EndDt AS date) =           (               SELECT MAX(CAST(EndDt AS date)) FROM ValueCaptureTransactionMonths           )       )', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What is the Run Rate for iniatives in Approved, Committed and Realized?'
WHERE [ID] = 157;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team],        SUM(T.HeadCountCostReductionEst) [Total target Headcount cost redutciton] FROM ValueCaptureTopDownEstimates T     LEFT JOIN ProjectTeams PT         ON PT.ID = T.ProjectTeamId GROUP BY PT.Title', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Provide the total Headcount cost redutciton target listed out by project team and provide the number of FTEs.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 158;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(T.FTEs) [FTEs part of the top down targets for EMEIA] FROM ValueCaptureTopDownEstimates T     LEFT JOIN Regions R         ON R.ID = T.RegionID WHERE R.Title = ''EMEIA''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How many FTEs are part of the top down targets for EMEIA?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 159;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	VI.Title [Initiatives with Benefit score over 75] FROM 	ValueCaptureInitiatives VI LEFT JOIN  	ProjectTeams PT ON PT.ID = VI.ProjectTeamId WHERE 	CAST(BenefitScore AS INT) > 75 	AND PT.Title IN (''HR'')', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Which HR iniatives have a benefit score over 75?'
WHERE [ID] = 160;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	VI.Title [Initiatives that have Risk associated with them] FROM 	ValueCaptureInitiatives VI LEFT JOIN  	ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageId LEFT JOIN  	RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs VIR ON VIR.ValueCaptureInitiativeId = VI.ID LEFT JOIN 	RisksAndIssues RI ON RI.ID = VIR.RisksAndIssueId WHERE  	RI.IssueRiskCategory IN (''Risk'') 	AND VS.Title IN (''Committed'')', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List out all Committed Iniatives that have a risk associated with them.'
WHERE [ID] = 161;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	VI.Title [top 5 initiatives with best benefit score] FROM  	ValueCaptureInitiatives VI LEFT JOIN 	ValueCaptureImpactTypes VIT ON VIT.ID = VI.ValueCaptureImpactTypeId LEFT JOIN  	ValueCaptureImpacts VIM ON VIM.ID = VI.ValueCaptureImpactid WHERE  	VIM.[Key] in (''High'') 	AND VIT.PositiveOrNegativeValues IN (''Positive'')', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List all High Benefit iniatives that are in the Identified Stage.'
WHERE [ID] = 162;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	VI.Title [Initiative is Approved with no Owner] FROM 	ValueCaptureInitiatives VI LEFT JOIN  	ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageId WHERE  	VS.Title IN (''Approved'') 	AND 	VI.ItemOwnerId IS NULL', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Show me all iniatives that are approved and do not have an owner assigned.'
WHERE [ID] = 163;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	COUNT(VI.ID) FROM 	ValueCaptureInitiatives VI LEFT JOIN 	UserProfiles UP ON UP.ID = VI.ItemOwnerId WHERE  	UP.EMail = ''{Username}''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How many iniatives are assigned to me?'
WHERE [ID] = 164;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	PT.Title ProjectTeam,SUM(ISNULL(NonHeadcountCostReductionEst,0)) NonHeadcountCostReductionTarget FROM  	ValueCaptureTopDownEstimates LEFT JOIN  	ProjectTeams PT ON PT.ID = ValueCaptureTopDownEstimates.Projectteamid GROUP BY  	PT.Title', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Provide the total non-headcount cost reduciton targets listed out by project team.'
WHERE [ID] = 165;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 166;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 167;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 168;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many assets are tagged to Day 1 processes? '
WHERE [ID] = 169;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many assets are tagged to Current State processes? '
WHERE [ID] = 170;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(Title) AS TotalCount, BusinessEntityId FROM Nodes WHERE NodeTypeId = 3 GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Can you provide me number of processes by op model?'
WHERE [ID] = 171;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many processes we have in current state?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 172;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many processes we have in Day1 state?'
WHERE [ID] = 173;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''  AND N.NodeTypeId = 3  AND N.ID NOT IN (   SELECT DISTINCT NTO.NodeId   FROM Nodes N1   LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null  )', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many processes don''t have an Owner assigned in Current State?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 174;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.ID 	,PR.Title FROM Nodes PR JOIN TransactionStates T ON T.ID = PR.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' 	AND PR.NodeTypeId = 3 	AND NOT EXISTS  				(SELECT 1 FROM [NodesToDispositionsForDispositionNew] D WHERE D.NodeId = PR.ID)', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List processes that don''t have Disposition assigned in Day 1 state.'
WHERE [ID] = 175;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM Dispositions', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List the Disposition options available.'
WHERE [ID] = 176;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [ProcessGroup] ,COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) [Enablers Count] FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 2 GROUP BY N.Title ORDER BY [Enablers Count] DESC', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many enablers are associated with each Process Group?'
WHERE [ID] = 177;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title [Disposition] 	,COUNT(SD.SystemId) [SystemCount] FROM Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID GROUP BY D.Title', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List the total number of systems by disposition.'
WHERE [ID] = 178;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT PR.Title [Process] , D.DispositionId FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId  	LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 	AND D.NodeId IS NULL 	AND S.[Key] = ''DAY_ONE''', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Can you please list down all Day 1 processes where no disposition has been tagged?'
WHERE [ID] = 179;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT 	N.Title [Process]	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 3 GROUP BY N.Title HAVING COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) = 0', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Can you please list all processes with no Enablers?'
WHERE [ID] = 180;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.Title as MissingInDay1 FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''CURRENT_STATE'' EXCEPT SELECT 	PR.Title [Process] FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''DAY_ONE''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Can you please compare the Current state & day 1 operating model and list all processes which are missing in Day1 as compared to current state?'
WHERE [ID] = 181;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title Enabler, ''Asset'' as Category	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID LEFT JOIN [Assets] A ON A.ID = NA.AssetsId WHERE A.Title IS NOT NULL UNION ALL SELECT DISTINCT F.Title Enabler, ''Facility'' as Category FROM Nodes N LEFT JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID LEFT JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE F.Title IS NOT NULL  UNION ALL SELECT DISTINCT S.Title Enabler , ''System'' as Category FROM Nodes N LEFT JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID LEFT JOIN [Systems] S ON S.ID = NS.SystemsId WHERE S.Title IS NOT NULL  UNION ALL SELECT DISTINCT T.Title Enabler	, ''TPA'' as Category FROM Nodes N LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID LEFT JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId WHERE T.Title IS NOT NULL ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'What Enablers are we tracking for this project?'
WHERE [ID] = 182;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# Systems present in this functional OP model] FROM Systems', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many Systems are there in this functional op model?'
WHERE [ID] = 183;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# TPAs present in this functional OP model] FROM ThirdPartyAgreements', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many TPAs are there in this functional op model?'
WHERE [ID] = 184;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ST.Title AS SystemType, COUNT(S.ID) [# Systems by Type] FROM Systems S LEFT JOIN SystemTypes ST ON ST.ID = S.TypeId WHERE S.TypeId IS NOT NULL GROUP BY ST.Title', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the number of Systems by Type.'
WHERE [ID] = 185;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT O.Title AS Owners, Count(*) AS [# TPAs by Ownership] FROM ThirdPartyAgreements TP LEFT JOIN Owners O ON O.ID = TP.OwnerID WHERE TP.OwnerID IS NOT NULL GROUP BY O.Title', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the number of TPAs by Ownership.'
WHERE [ID] = 186;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title [ProcessGroups With No Process] FROM Nodes WHERE nodetypeid = 2 AND ID NOT IN (SELECT NodeParentId FROM Nodes)', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List down all process groups with no process within them.'
WHERE [ID] = 187;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(P.[ID]) AS [Number of Process across Op Model] FROM Nodes P     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = ''Process''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the number of processes across op models.'
WHERE [ID] = 188;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog WHERE Modified >= DATEADD(hh, -1, GETDATE())', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List history of changes to the op model in the past one hour.'
WHERE [ID] = 189;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog WHERE FieldImpacted = ''Owner''       AND CAST(Modified AS DATE) = CAST(GETDATE() AS DATE)', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the history of changes to Ownership in the op model today.'
WHERE [ID] = 190;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog WHERE Title = ''Deleted''       AND DATEPART(wk, CAST(Modified AS DATE)) = DATEPART(wk, CAST(GETDATE() AS DATE))       AND YEAR(Modified) = YEAR(GETDATE())', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the history of deletes in the op model this week.'
WHERE [ID] = 191;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title [State], N.Title AS OperatingModel FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId  WHERE N.NodeTypeId = 1', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the functional operating models across different states.'
WHERE [ID] = 192;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title Opmodel, L.Title LiveNote, Note FROM OperatingModelLiveNotes L LEFT JOIN Nodes N ON N.Id = L.NodeId', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Are there any Live Notes in this op model?'
WHERE [ID] = 193;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process FROM OperatingModelActivityLog OL  LEFT JOIN Nodes N ON N.ID = Ol.ObjectID WHERE OL.Title = ''Updated'' AND Object = ''Process'' AND (CAST(OL.Modified AS DATE) BETWEEN DATEADD(DAY, -7, CAST(GETDATE()AS DATE))  AND CAST(GETDATE() AS DATE))', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List down all processes which were updated since last 1 week.'
WHERE [ID] = 194;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process, OldValue, NewValue  FROM OperatingModelActivityLog PL  LEFT JOIN Nodes N ON N.ID = PL.ObjectID  WHERE Object = ''Process'' AND PL.Title = ''Updated'' AND FieldImpacted = ''Title'' AND N.TransactionStateId = 6', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List down all processes which have been renamed in Day 1 op model.'
WHERE [ID] = 195;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 5     S.Title AS [Systems],     Count(NSS.NodesID) AS [ProcessCount] FROM Nodes N     LEFT JOIN [dbo].[NodesToSystemsForEnablerSystems] NSS         ON N.ID = NSS.NodesId     LEFT JOIN [dbo].[Systems] S         ON NSS.SystemsId = S.ID WHERE N.NodeTypeId = 3 GROUP BY S.Title ORDER BY Count(NSS.NodesID) DESC', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Please provide top 5 systems that are linked to various processes.'
WHERE [ID] = 196;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [List of processes for CurrentState where ownership is not present] FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''   AND N.NodeTypeId = 3   AND N.ID NOT IN (     SELECT DISTINCT NTO.NodeId     FROM Nodes N1     LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null   )', [Source] = N'project-data', [SuggestionText] = N'For Current State, list all processes that doesn''t have any ownership.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 197;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT     PR.Title [Process] FROM     Nodes                                    PR     JOIN         TransactionStates                    S             ON S.ID = PR.TransactionStateId     LEFT JOIN         NodesToDispositionsForDispositionNew D             ON D.NodeId = PR.ID WHERE     PR.NodeTypeId = 3     AND D.NodeId IS NULL     AND S.[Key] = ''DAY_ONE''', [Source] = N'project-data', [SuggestionText] = N'For Day 1 Operating Models, list all processes that doesn''t have any dispositions.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 198;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.NodeTypeId,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  ,       --SELECT * FROM PG_Hierarchy         ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID     FROM     (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT TOP 1     Functions AS [Function with highest number of processes] FROM (     SELECT Functions,            COUNT(ID) as [Process Count]     FROM ProcessCTE     GROUP BY Functions ) A order by [Process Count] desc    ', [Source] = N'project-data', [SuggestionText] = N'Which function has the highest number of processes?'
WHERE [ID] = 199;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Processes with Disposition as TSA] FROM   Nodes   N   LEFT JOIN     NodesToDispositionsForDispositionNew NTD             ON NTD.NodeId = N.ID     LEFT JOIN         Dispositions                         D             ON NTD.DispositionId = D.ID WHERE     D.Title = ''TSA''     AND N.NodeTypeId = 3 -- To get the list of Processes', [Source] = N'project-data', [SuggestionText] = N'List down all Processes which have their disposition set as TSA.'
WHERE [ID] = 200;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT       N.Title as [List of Processes with No Disposition] FROM Nodes N          WHERE N.NodeTypeId=3  		  AND N.ID NOT IN  		             (SELECT NodeId FROM NodesToDispositionsForDispositionNew)', [Source] = N'project-data', [SuggestionText] = N'List down all processes with no Disposition assigned.'
WHERE [ID] = 201;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1)  [No. of Processes] FROM Nodes PR JOIN NODES P ON PR.NodeParentID = P.ID WHERE PR.NodeTypeId = 3 AND P.Title = ''{FunctionName}''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many processes are there in the IT function?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 202;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PR.Title [Process] , COUNT(DISTINCT D.DispositionId) [DispostionCount] FROM Nodes PR JOIN NODES P ON PR.NodeParentID = P.ID LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 AND P.Title = ''COMMERCIAL'' GROUP BY PR.Title HAVING COUNT(DISTINCT D.DispositionId) > 1', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List processes that have more than 1 disposition in IT.'
WHERE [ID] = 203;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.NodeTypeId,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ),       --SELECT * FROM PG_Hierarchy         ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID AS [ProcessID]     FROM     (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT ISNULL(Geo.Title, ''Not Assigned'') AS [Geographic Coverages],        COUNT(P.ProcessID) AS [Total Number of Process in Real Estate] FROM ProcessCTE P     LEFT JOIN ProcessAttributes PA         ON P.ProcessID = PA.NodeId     LEFT JOIN GeographicCoverages Geo         ON PA.GeographicCoverageId = Geo.ID WHERE P.Functions =''{FunctionName}'' GROUP BY Geo.Title', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'What is total number of processes in Real Estate grouped by geographic coverage?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 204;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.TransactionStateId,            HierId = HierId + 1     FROM Nodes,          PG_Hierarchy     WHERE Nodes.NodeParentID = PG_Hierarchy.id    ) SELECT DISTINCT      F.Title AS [Functions],     SF.[Title] AS  [Subfunctions] FROM (SELECT * FROM PG_Hierarchy WHERE HierId = 2) F     LEFT JOIN     (SELECT * FROM PG_Hierarchy WHERE HierId = 3) SF         ON F.ID = SF.NodeParentID ORDER BY 1,          2', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List all functions and sub-functions for functional operating model [Name].'
WHERE [ID] = 205;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     O.Title     AS [Process Owner],     COUNT(N.ID) AS [Process Distribution] FROM     Nodes      N     LEFT JOIN         Owners O             ON N.OwnerId = O.ID WHERE     N.NodeTypeId = 3 GROUP BY     O.Title ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Provide process owner distribution for my project.'
WHERE [ID] = 206;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.TransactionStateId,            HierId = HierId + 1     FROM Nodes,          PG_Hierarchy     WHERE Nodes.NodeParentID = PG_Hierarchy.id    ) SELECT DISTINCT      SF.[Title] AS  [Subfunctions] FROM (SELECT * FROM PG_Hierarchy WHERE HierId = 2) F     LEFT JOIN     (SELECT * FROM PG_Hierarchy WHERE HierId = 3) SF         ON F.ID = SF.NodeParentID WHERE F.Title=''{FunctionName}'' ORDER BY 1', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List all sub-functions for Finance.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 207;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.NodeTypeId,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  ,       --SELECT * FROM PG_Hierarchy        ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID AS [ProcessID]     FROM     (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT P.Processes,        ISNULL(S.Title, ''Not Assigned'') AS [Systems],        ISNULL(TPA.Title, ''Not Assigned'') AS [Third Party Agreements] FROM ProcessCTE P     LEFT JOIN NodesToThirdPartyAgreementsForEnablerTpa NTPA         ON P.ProcessID = NTPA.NodesId     LEFT JOIN ThirdPartyAgreements TPA         ON NTPA.ThirdPartyAgreementsId = TPA.ID     LEFT JOIN NodesToSystemsForEnablerSystems NSys         ON NSys.NodesId = P.ProcessID     LEFT JOIN Systems S         ON NSys.SystemsId = S.ID', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List all details for processes and systems, third party agreements linkages.'
WHERE [ID] = 208;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT A.Title Assest,        P.Title LinkedProcess FROM Assets A     LEFT JOIN ProcessAssetLinks PA         ON PA.AssetId = A.ID     LEFT JOIN Nodes P         ON P.ID = PA.ProcessId     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = ''Process''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List the Assets and their linked processes.'
WHERE [ID] = 209;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title OpModel, BP.Title  EndToEndProcess FROM BusinessProcesses BP  LEFT JOIN Nodes N ON N.ID = BP.NodeId  WHERE N.NodeTypeId = 1', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Are there any end-to-end business processes in this op model?'
WHERE [ID] = 210;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL           AND TransactionStateID = 8     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ) SELECT N.Title [Function],        NTSS.Title AS [Field Status],        OPS.Title AS [Op Status] FROM NodeTrackers NT     LEFT JOIN NodeTrackerStatuses NTS         ON NTS.NodeTrackerID = NT.ID     JOIN     (SELECT * FROM GetSelectedFunction WHERE HierId = 2 and Title = ''HR'') N         ON N.ID = NT.NodeId     LEFT JOIN NodeTrackerStatusFields NTSS         ON NTSS.ID = NTS.NodeTrackerStatusFieldId     LEFT JOIN OpStatuses OPS         ON OPS.ID = NTS.NodeTrackerStatusStatusId', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'In the Progress Tracker, what is the current status of HR?'
WHERE [ID] = 211;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'/*---- What is Automatic Workplan?----*/ SELECT D.Title Disposition,        WP.Title Tasks FROM NodesToWorkPlansForTask NWP     LEFT JOIN Nodes N         ON N.ID = NWP.NodeId     LEFT JOIN WorkPlan WP         ON NWP.WorkPlanId = WP.ID     LEFT JOIN NodesToDispositionsForDispositionNew ND         ON ND.NodeID = N.ID     LEFT JOIN Dispositions D         ON D.ID = ND.DispositionID WHERE N.NodeTypeId = 3', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'In the Automatic Workplan, what are the defualt task lists for different dispostions?'
WHERE [ID] = 212;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL           AND TransactionStateID = 6     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM Nodes ROOT     WHERE ROOT.ID in (                          select ID from GetSelectedFunction where HierId = 2 and Title = ''Finance''                      )     UNION ALL     SELECT CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ) SELECT COUNT(*) AS [Process with multiple dispositions for Finance] FROM PG_Hierarchy WHERE NodeTypeId = 3       AND ID IN (                     SELECT NodeID                     FROM                     (                         SELECT NodeId,                                Count(DispositionID) As [Disposition Count]                         FROM NodesToDispositionsForDispositionNew                         GROUP BY NodeId                         HAVING Count(DispositionID) > 1                     ) a                 )', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'In Finance, how many processes have multiple dispositions?'
WHERE [ID] = 213;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Process which doesn''''t have ownership] FROM     Nodes                 N     JOIN         TransactionStates T             ON T.ID = N.TransactionStateId WHERE     OwnerId IS NULL     AND N.NodeTypeId = 3 -- To select Node Type = Process', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List down all processes with no Owners assigned.'
WHERE [ID] = 214;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes with more than one Disposition] FROM Nodes N WHERE N.NodeTypeId = 3       AND N.ID IN (                       SELECT NodeID                       FROM                       (                           SELECT NodeId,                                  COUNT(DispositionID) AS [Disposition Count]                           FROM NodesToDispositionsForDispositionNew                           GROUP BY NodeId                           HAVING COUNT(DispositionID) > 1                       ) a                   ) ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List down all processes with more than one Disposition associated with them.'
WHERE [ID] = 215;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT ID,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.ID,            Nodes.Title,            Nodes.NodeParentID,            Nodes.TransactionStateId,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, TransactionStateID) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.TransactionStateID     FROM Nodes ROOT     WHERE ROOT.ID IN (                          SELECT ID                          FROM GetSelectedFunction                          WHERE HierId = 2                                AND Title = ''{FunctionName}''                                AND TransactionStateId = 6                      )     UNION ALL     SELECT CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.TransactionStateId     FROM PG_Hierarchy PARENT,          Nodes CHILD     WHERE PARENT.id = CHILD.NodeParentID    ) SELECT Title AS [List of Processes Associated with Legal Function] FROM PG_Hierarchy ORDER BY ID,          title DESC ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Can you please list all processes associated with Legal function?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 216;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of all Processes associated with APAC] FROM     Nodes       N     LEFT JOIN         Regions R             ON N.CountryRegionID = R.ID WHERE     n.NodeTypeId = 3     AND R.Title = ''{Region}''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Can you please list all processes associated with APAC?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 217;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes  WHERE NodeParentID IS NULL  UNION ALL        SELECT    Nodes.id,Nodes.Title,Nodes.NodeParentID,  Nodes.NodeTypeId,  HierId = HierId+1 FROM Nodes, GetSelectedFunction   where Nodes.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes FROM (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT P.Functions, A.Processes  FROM (SELECT DISTINCT [Processes]  		FROM ProcessCTE 		GROUP BY Processes  		HAVING COUNT(DISTINCT [Functions] ) > 1) A  	LEFT JOIN ProcessCTE P ON P.Processes = A.Processes ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Can you please list all processes with same names across different functions?'
WHERE [ID] = 218;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     [List of Processes with same name] FROM     (         SELECT             N.Title  AS [List of Processes with same name],             Count(1) AS [Repeat Count]         FROM             Nodes N         WHERE             N.NodeTypeId = 3         GROUP BY             N.Title         HAVING             COUNT(*) > 1     ) a ORDER BY     1 ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Can you please list all processes with same name?'
WHERE [ID] = 219;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes tagged as ParentCo in Current State with Disposition set as TSA ] FROM Nodes N     LEFT JOIN NodesToOwnersForOwnerNew NTO         on N.ID = NTO.NodeId     LEFT JOIN Owners O         ON O.ID = NTO.OwnerId     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID     LEFT JOIN TransactionStates TS         ON N.TransactionStateId = TS.ID     LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND TS.[Key] = ''CURRENT_STATE''       AND O.Title = ''Parent Co''       AND D.Title = ''TSA''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Can you please list the processes which are tagged as ''ParentCo'' in Current state having disposition set as ''TSA''?'
WHERE [ID] = 220;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Systems not tagged in any process] FROM     Systems WHERE     ID NOT IN (                   SELECT DISTINCT                       SystemsId                   FROM                       Nodes                               N                       LEFT JOIN                           NodesToSystemsForEnablerSystems NSS                               ON N.ID = NSS.NodesId  					  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId                    WHERE T.Title= ''Day 1'' AND                        N.NodeTypeId = 3               )', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'can you please list all systems which are not tagged to any process in Day 1 op model?'
WHERE [ID] = 221;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     ISNULL(ST.Title, ''System Type Not Assigned'') AS [SystemsType],     S.Title                                      AS [Systems] FROM     Systems         S     LEFT JOIN         SystemTypes ST             ON S.TypeId = ST.ID', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Can you please provide of all systems based upon their type?'
WHERE [ID] = 222;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes  WHERE NodeParentID IS NULL  UNION ALL        SELECT    Nodes.id,Nodes.Title,Nodes.NodeParentID,  Nodes.NodeTypeId,  HierId = HierId+1 FROM Nodes, GetSelectedFunction   where Nodes.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number for Multiple Deposition]  				FROM ProcessCTE 				WHERE ID IN ( 									SELECT NodeID 									FROM 									( 										SELECT NodeId, 											   Count(DispositionID) As [Disposition Count] 										FROM NodesToDispositionsForDispositionNew 										GROUP BY NodeId 										HAVING Count(DispositionID) > 1 									) a 								) 		GROUP BY [Functions] 				ORDER BY  COUNT(*) DESC    ', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Which function has the highest number of multi disposition processes?'
WHERE [ID] = 223;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes   WHERE NodeParentID IS NULL   UNION ALL         SELECT    Nodes.id,Nodes.Title,Nodes.NodeParentID,  Nodes.NodeTypeId,  HierId = HierId+1 FROM Nodes, GetSelectedFunction   WHERE Nodes.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2    UNION ALL         SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  WHERE  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS (  SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number of Live Without]  FROM ProcessCTE WHERE ID IN (	SELECT NodeId 				FROM NodesToDispositionsForDispositionNew ND  				LEFT JOIN Dispositions D ON D.ID = DispositionID  				WHERE D.Title = ''Live without''			 				) GROUP BY [Functions] ORDER BY  COUNT(*) DESC', [Source] = N'project-data', [SuggestionText] = N'which function has the highest number of ''Live without''?'
WHERE [ID] = 224;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes  WHERE NodeParentID IS NULL  UNION ALL        SELECT    Nodes.id,Nodes.Title,Nodes.NodeParentID,  Nodes.NodeTypeId,  HierId = HierId+1 FROM Nodes, GetSelectedFunction   where Nodes.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number of Processes tagged to them] , COUNT(*)  [No of Processes] 				FROM ProcessCTE 		GROUP BY [Functions] 				ORDER BY  COUNT(*) DESC    ', [Source] = N'project-data', [SuggestionText] = N'Which function has the highest number of processes tagged to them? and how many?'
WHERE [ID] = 225;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.TransactionStateId,            HierId = HierId + 1     FROM Nodes,          PG_Hierarchy     WHERE Nodes.NodeParentID = PG_Hierarchy.id    ),       ProcessCTE AS (SELECT DISTINCT         F.Title AS [Functions],         f.id AS FunctionID     FROM     (SELECT * FROM PG_Hierarchy WHERE HierId = 2) F         LEFT JOIN         (SELECT * FROM PG_Hierarchy WHERE HierId = 3) SF             ON F.ID = SF.NodeParentID    ) SELECT Top 1     Functions as [Function with Highest Number of Enablers],     [Enablers Count] FROM (     SELECT P.Functions,            --,COUNT(DISTINCT TPA.ID) as TPACount            --,COUNT(DISTINCT S.ID) as SystemCount            --,COUNT(DISTINCT Asset.ID) as AssetCount            --,COUNT(DISTINCT Roles.ID) as RolesCount,            COUNT(DISTINCT TPA.ID) + COUNT(DISTINCT S.ID) + COUNT(DISTINCT Asset.ID) + COUNT(DISTINCT Roles.ID) AS [Enablers Count]     FROM ProcessCTE P         LEFT JOIN NodesToThirdPartyAgreementsForEnablerTpa NTPA --Third Party Aggrements             ON P.FunctionID = NTPA.NodesId         LEFT JOIN ThirdPartyAgreements TPA             ON NTPA.ThirdPartyAgreementsId = TPA.ID         LEFT JOIN NodesToSystemsForEnablerSystems NSys -- Systems             ON NSys.NodesId = P.FunctionID         LEFT JOIN Systems S             ON NSys.SystemsId = S.ID         LEFT JOIN NodesToAssetsForEnablerAssets NAsset --Assets             ON NAsset.NodesId = P.FunctionID         LEFT JOIN Assets Asset             ON Asset.ID = NAsset.AssetsId         LEFT JOIN NodesToRolesForEnablerRoles NRole --Roles             ON NAsset.NodesId = P.FunctionID         LEFT JOIN OrgRolesMaster Roles             ON Roles.ID = NRole.RolesId     GROUP BY P.Functions ) A ORDER BY [Enablers Count] DESC', [Source] = N'project-data', [SuggestionText] = N'Which function has the highest number of enablers tagged to them? and how many?'
WHERE [ID] = 226;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID,  HierId = 1 FROM Nodes  WHERE NodeParentID IS NULL    UNION ALL        SELECT    Nodes.id,Nodes.Title,Nodes.NodeParentID,    HierId = HierId+1 FROM Nodes, GetSelectedFunction   where Nodes.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy(NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM Nodes ROOT   WHERE ROOT.ID in (select ID from GetSelectedFunction where HierId=2 and Title=''Finance & Accounting'')       UNION ALL        SELECT  CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  )   SELECT PG.Title, OldValue, NewValue  FROM PG_Hierarchy PG  JOIN (SELECT PL.ObjectID, OldValue, NewValue 			FROM OperatingModelActivityLog PL 			WHERE Object = ''Process'' AND Title = ''Updated'' AND PL.Modified = ( 			SELECT  Max(Modified) Modified FROM OperatingModelActivityLog  			WHERE ObjectID IN (SELECT ID FROM PG_Hierarchy PG WHERE NodeTypeId=3 )  			AND Object = ''Process'' AND Title = ''Updated'')) A ON A.ObjectID = PG.ID', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Which process within Finance has been updated most recently and what was the updates?'
WHERE [ID] = 227;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Process Associated with Workplan] FROM     Nodes                       N     LEFT JOIN         NodesToWorkPlansForTask NWP             ON N.ID = NWP.NodeId     LEFT JOIN         WorkPlan                WP             ON NWP.WorkPlanId = WP.ID WHERE     N.NodeTypeId = 3', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many processes have been associated with a workplan item?'
WHERE [ID] = 228;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(DISTINCT n.ID) AS [No of Process having 2 owners or Dispositions] FROM Nodes n LEFT JOIN (     SELECT NodeId     FROM NodesToDispositionsForDispositionNew     GROUP BY NodeId     HAVING COUNT(DispositionID) = 2 ) d ON n.ID = d.NodeId LEFT JOIN (     SELECT NodeID     FROM NodesToOwnersForOwnerNew     GROUP BY NodeID     HAVING COUNT(OwnerId) = 2 ) o ON n.ID = o.NodeID WHERE n.NodeTypeId = 3 AND (d.NodeId IS NOT NULL OR o.NodeID IS NOT NULL)', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many processes have 2 owners or dispositions? '
WHERE [ID] = 229;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	COUNT(SD.SystemId) [No of Systems are dispositioned rebuild] FROM  Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID WHERE D.Title = ''Rebuild''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many systems are dispositoned Rebuild?'
WHERE [ID] = 230;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT O.Title [Owners], COUNT(N.ID) [No of Processes]  FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID  LEFT JOIN NodesToOwnersForOwnerNew NOS ON NOS.NodeId = N.ID  LEFT JOIN Owners O ON O.ID = NOS.OwnerId  WHERE NT.Title = ''Process''  GROUP BY O.Title', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Provide a count of all processes by owner.'
WHERE [ID] = 231;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	R.Title Regions 	, COUNT(D.DispositionId) [Count of Disposition]  FROM NodesToDispositionsForDispositionNew D     JOIN Nodes N ON D.NodeId = N.ID 	JOIN TransactionStates S ON S.ID = N.TransactionStateId  	LEFT JOIN NodeTypes NT ON NT.ID = N.NodeTypeId  	LEFT JOIN Regions R ON R.ID = N.CountryRegionID  WHERE NT.Title = ''Process''  	AND S.[Key] = ''DAY_ONE'' GROUP BY R.Title', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Show me the count of dispositions in Day 1 model by assigned region.'
WHERE [ID] = 232;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Processes with no owner assigned] FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process''    AND N.ID NOT IN (     SELECT DISTINCT NTO.NodeId     FROM Nodes N1     LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	WHERE NTO.NodeId is not null   )', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List all processes that do not have an owner assigned.'
WHERE [ID] = 233;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title AS [List of Teams with Disposition set as Unidentified] FROM Nodes N     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID 	LEFT JOIN  NodesToProjectTeamsForProjectTeam NP 	    ON N.ID = NP.NodesId  	LEFT JOIN ProjectTeams PT 	    ON PT.ID = NP.ProjectTeamsId      LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND D.Title = ''Unidentified''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'Which teams have processes that are disposition ''Unidentified''?'
WHERE [ID] = 234;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Processes with total headcount greater than 0] FROM Nodes N     LEFT JOIN vwHeadcount H         ON H.NodeId = N.ID     LEFT JOIN Nodetypes NT         ON NT.ID = N.NodeTypeId GROUP BY N.Title HAVING SUM(ISNULL(H.TotalHeadCount, 0)) > 0', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List all processes with total headcount greater than 0.'
WHERE [ID] = 235;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title [Facilities in North America that are leased or owned]   FROM Facilities F  LEFT JOIN FacilityOccupancyTypes FT ON FT.ID = F.FacilityOccupancyTypeID  LEFT JOIN Countries C ON C.ID = F.CountryID  LEFT JOIN Regions R ON R.ID = C.CountryRegionID WHERE FT.Title IN (''Leased'', ''Owned'') AND R.Title = ''North America''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'List all Facilities in North America that are leased or owned.'
WHERE [ID] = 236;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(N.ID) [No of Proccesses to which TPA is assigned] FROM NodesToThirdPartyAgreementsForEnablerTpa NTP  INNER JOIN Nodes N ON N.ID = NTP.NodesId  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process''', [AppAffinity] = N'CE4-OM', [Source] = N'project-data', [SuggestionText] = N'How many processes have a TPA assigned to them? '
WHERE [ID] = 237;
SELECT @@ROWCOUNT;

GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] ON;
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (238, N'SELECT Enabler [Enabler with linked processes] FROM( SELECT DISTINCT A.Title Enabler 	 FROM Nodes N LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID INNER JOIN [Assets] A ON A.ID = NA.AssetsId  WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT F.Title Enabler FROM Nodes N LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID INNER JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT S.Title Enabler  FROM Nodes N  LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID INNER JOIN [Systems] S ON S.ID = NS.SystemsId WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT T.Title Enabler	 FROM Nodes N  LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID INNER JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId  WHERE NTT.Title = ''Process''   ) A', N'CE4-OM', NULL, N'System', N'project-data', N'Show me all enablers that have a linked process.', NULL, N'System', CAST(1 AS bit)),
(239, N'SELECT N.Title AS [List of Processes with Disposition set as TSA ] FROM Nodes N     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID     LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND D.Title = ''TSA''', N'CE4-OM', NULL, N'System', N'project-data', N'List all processes that have the disposition TSA.', NULL, N'System', CAST(1 AS bit)),
(240, N'SELECT COUNT(N.ID) AS [No of Processes are Live Without]  FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process'' AND N.ID IN (	SELECT NodeId 				FROM NodesToDispositionsForDispositionNew ND  				LEFT JOIN Dispositions D ON D.ID = DispositionID  				WHERE D.Title = ''Live without''			 				) ', N'CE4-OM', NULL, N'System', N'project-data', N'How many processes are Live without? ', NULL, N'System', CAST(1 AS bit)),
(241, N'SELECT     Title AS [Systems being used by Project Team and Process Group] FROM     Systems WHERE  ID IN (                   SELECT DISTINCT                       SystemsId                   FROM                       Nodes N                       LEFT JOIN NodesToSystemsForEnablerSystems NSS                        ON N.ID = NSS.NodesId  					  LEFT JOIN  NodesToProjectTeamsForProjectTeam NP 					  ON N.ID = NP.NodesId  					  LEFT JOIN NodeTypes NT ON NT.ID = N.NodeTypeId                    WHERE  NT.Title IN (''ProcessGroup'')               )	', N'CE4-OM', NULL, N'System', N'project-data', N'List out the systems being used by Project Team and Process Group.', NULL, N'System', CAST(1 AS bit)),
(242, N'SELECT N.Title [Process groups are not started on Followup Calls for Current State] FROM Nodes N     LEFT JOIN Nodetypes NT         ON NT.ID = N.NodeTypeId     LEFT JOIN NodeTrackers NTC         ON NTC.NodeID = N.ID     LEFT JOIN NodeTrackerStatuses NTS         ON NTS.NodeTrackerID = NTC.ID     LEFT JOIN TransactionStates T         ON T.ID = N.TransactionStateID WHERE N.NodeOnTracker = 1       AND NT.Title = ''Process Group''       AND T.[Key] = ''CURRENT_STATE''       AND N.ID NOT IN (                           SELECT N.ID ProcessGroupID                           FROM Nodes N                               LEFT JOIN Nodetypes NT                                   ON NT.ID = N.NodeTypeId                               LEFT JOIN NodeTrackers NTC                                   ON NTC.NodeID = N.ID                               LEFT JOIN NodeTrackerStatuses NTS                                   ON NTS.NodeTrackerID = NTC.ID                               LEFT JOIN TransactionStates T                                   ON T.ID = N.TransactionStateID                           WHERE N.NodeOnTracker = 1                                 AND NT.Title = ''Process Group''                                 AND T.[Key] = ''CURRENT_STATE''                                 AND NTS.Title = ''FollowUp Call''                       )', N'CE4-OM', NULL, N'System', N'project-data', N'Which process groups are not started on Followup Calls for Current State?', NULL, N'System', CAST(1 AS bit)),
(243, N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL      UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ) SELECT O.Title [Client Owner for HR] FROM GetSelectedFunction N 	LEFT JOIN NodesToOwnersForOwnerNew NOS ON NOS.NodeId = N.ID  	LEFT JOIN Owners O ON O.ID = NOS.OwnerId  WHERE N.HierId = 2 AND N.Title = ''HR''', N'CE4-OM', NULL, N'System', N'project-data', N'Who is the Client owner for HR?', NULL, N'System', CAST(1 AS bit)),
(244, N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'Show me the count of TSAs by function.', NULL, N'System', CAST(1 AS bit)),
(245, N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'Show me the count of TSAs by sub function.', NULL, N'System', CAST(1 AS bit)),
(246, N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'Give me the list of TSAs by Provider.', NULL, N'System', CAST(1 AS bit)),
(247, N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'Give me the list of TSAs by Receiver.', NULL, N'System', CAST(1 AS bit)),
(248, N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'Can you provide me list of TSAs by phases?', NULL, N'System', CAST(1 AS bit)),
(249, N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', N'CE4-TSA', NULL, N'System', N'project-data', N'Show me the breakdown of TSAs by duration.', NULL, N'System', CAST(1 AS bit)),
(250, N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'How many TSAs does each team have?', NULL, N'System', CAST(1 AS bit)),
(251, N'SELECT    TST.Title as [Phase],    COUNT(TC.ID) AS [# TSAs across different phases] FROM    TSAItems TC    LEFT JOIN TSAPhases TST ON TC.PhaseID = TST.ID  Group BY    TST.Title ', N'CE4-TSA', NULL, N'System', N'project-data', N'List the number of TSAs across different phases.', NULL, N'System', CAST(1 AS bit)),
(252, N'SELECT    T.Title PendingTSAItems  FROM    TSAItems T    JOIN TSAStatuses TS ON T.TSAItemTSAStatusId = TS.ID  WHERE    T.AuthorId = ''{Username}''    AND TS.[key] = ''ACTIVE'' ', N'CE4-TSA', NULL, N'System', N'project-data', N'How many pending TSA items do I have?', NULL, N'System', CAST(1 AS bit)),
(253, N'SELECT    Title as [Billing Period Name],    DeadlineDate as [Contribution Deadlines]  FROM    TSABillingPeriods ', N'CE4-TSA', NULL, N'System', N'project-data', N'In Cost Tracking, how is my billing periods setup?', NULL, N'System', CAST(0 AS bit)),
(254, N' SELECT    Title AS [TSA Phases]  FROM TSAPhases', N'CE4-TSA', NULL, N'System', N'project-data', N'What are the different TSA phases in my project?', NULL, N'System', CAST(1 AS bit)),
(255, N'SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ProviderLegalEntityId = L.ID where  L.ServiceLocation is not null UNION  SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ReceiverLegalEntityId = L.ID   where  L.ServiceLocation is not null ', N'CE4-TSA', NULL, N'System', N'project-data', N'List the TSA service locations in my project.', NULL, N'System', CAST(0 AS bit)),
(256, N'SELECT     TSA.Title AS [TSAs],     s.Title   AS [TSA Statuses] FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID     LEFT JOIN         Functions   F             ON TSA.FunctionId = F.ID WHERE     F.Title = ''{FunctionName}''', N'CE4-TSA', NULL, N'System', N'project-data', N'List the TSAs for the Finance fucntion with their status.', NULL, N'System', CAST(1 AS bit)),
(257, N'DECLARE @UserProfiles int; SELECT    @UserProfiles = ID  FROM    UserProfiles  WHERE    EMail = ''sahil.garg5@gds.ey.com''; WITH TEMPCTE AS (   SELECT      FunctionId,      SubFunctionId    FROM      TSAReviewers    WHERE      ProviderApproverId = @UserProfiles      OR RecipientApproverId = @UserProfiles )  SELECT    TSA.Title as [List of TSA to be reviewed] FROM    TSAItems TSA    JOIN TEMPCTE ON TSA.FunctionId = TEMPCTE.FunctionId    AND tsa.SubFunctionId = TEMPCTE.SubFunctionId    JOIN TSAPhases TP ON TSA.PhaseId = TP.ID  WHERE    TP.[Key] IN (''ALIGNMENT'', ''APPROVAL''); ', N'CE4-TSA', NULL, N'System', N'project-data', N'List the TSAs that I need to review.', NULL, N'System', CAST(1 AS bit)),
(258, N'SELECT   Title DefaultCurrency FROM  TSACurrencies  WHERE CurrencyCode =''{CurrencyCode}''', N'CE4-TSA', NULL, N'System', N'project-data', N'What is the default currency setting?', NULL, N'System', CAST(0 AS bit)),
(259, N'SELECT   CurrencyExchangeRateToUSD  FROM  TSACurrencies  WHERE CurrencyCode ={CurrencyCode}', N'CE4-TSA', NULL, N'System', N'project-data', N'List the exchange rates we setup for the default currency on my project.', NULL, N'System', CAST(0 AS bit)),
(260, N'SELECT    DISTINCT F.Title as [Functions To Be Configured] FROM    TSAReviewers TR    LEFT JOIN Functions F on F.ID = TR.FunctionId ', N'CE4-TSA', NULL, N'System', N'project-data', N'In Reviewer Assignments, what functions require to be configured properly?', NULL, N'System', CAST(1 AS bit)),
(261, N'SELECT    DISTINCT SF.Title as [SubFunctions To Be Configured] FROM    TSAReviewers TR    LEFT JOIN SubFunctions SF on SF.ID = TR.SubFunctionId ', N'CE4-TSA', NULL, N'System', N'project-data', N'In Reviewer Assignments, what sub-functions need to be configured for my project?', NULL, N'System', CAST(1 AS bit)),
(262, N'SELECT CASE WHEN SUM(DeadlineReminder) > 0 THEN ''Yes, email reminder before the deadline is setup'' ELSE ''No, email reminder before the deadline is setup'' END AS [Send an email reminder before the deadline?] FROM( SELECT     Title,     CAST( DeadlineReminder AS INT) DeadlineReminder FROM     TSABillingPeriods WHERE     DeadlineReminder = 1) A', N'CE4-TSA', NULL, N'System', N'project-data', N'In Billing Periods, have we setup email reminder beofre deadline?', NULL, N'System', CAST(1 AS bit)),
(263, N'SELECT     Title        AS [Billing Period Name],     DeadlineDate AS [Contribution Deadlines] FROM     TSABillingPeriods', N'CE4-TSA', NULL, N'System', N'project-data', N'List the billing periods with their Contribution deadlines.', NULL, N'System', CAST(1 AS bit)),
(264, N'SELECT CASE WHEN SUM(SendEmailImmediately) > 0 THEN ''Yes, notifying data contributors by email '' ELSE ''No, not notifying data contributors by email '' END AS [Notify data contributors by email ?] FROM( SELECT     Title                AS [Billing Period Name],     CAST(SendEmailImmediately AS INT) SendEmailImmediately FROM     TSABillingPeriods WHERE     SendEmailImmediately = 1) A', N'CE4-TSA', NULL, N'System', N'project-data', N'Are we not notifying data contributors by email for any billing periods?', NULL, N'System', CAST(1 AS bit)),
(265, N'SELECT     f.title   AS [Functions],     (t.TSAItemFTECostForServiceDurationUSD + t.MarkupOnFTECostUSD + t.ExternalMaterialCostUSD) AS [TSA Costs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND t.Duration IS NOT NULL', N'CE4-TSA', NULL, N'System', N'project-data', N'What my TSA costs by  function?', NULL, N'System', CAST(1 AS bit)),
(266, N'-- Total TSA Costs over Month SELECT month_year AS [By Month],        ROUND((SUM(fte_cost_per_month) + SUM(nonfte_cost_per_month)), 2) AS [Total TSA Costs Over Month] FROM vwTSACostWaterfall GROUP BY date_,          month_year   -- Total TSA Costs over Quarter SELECT [quarter] AS [By Quarter],        ROUND((SUM(fte_cost_per_month) + SUM(nonfte_cost_per_month)), 2) AS [Total TSA Costs Over Quarter] FROM vwTSACostWaterfall GROUP BY Concat(Year(date_), Datepart(quarter, date_)),          [quarter]   -- Total TSA Costs over Year SELECT [year] AS [By Year],        ROUND((SUM(fte_cost_per_month) + SUM(nonfte_cost_per_month)), 2) AS [Total TSA Costs Over Year] FROM vwTSACostWaterfall GROUP BY [year]', N'CE4-TSA', NULL, N'System', N'project-data', N'What is my total TSA costs over time?', NULL, N'System', CAST(1 AS bit)),
(267, N'SELECT     TSA.Title AS [TSAs] FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID WHERE          S.Title<>''{TSAStatus}''', N'CE4-TSA', NULL, N'System', N'project-data', N'How many TSAs left to sign?', NULL, N'System', CAST(0 AS bit)),
(268, N'SELECT     COUNT(TSA.ID) AS [# TSAs signed by Function],     F.Title       AS Functions FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID     LEFT JOIN         Functions   F             ON TSA.FunctionId = F.ID WHERE     S.Title = ''{TSAStatus}'' GROUP BY     F.Title', N'CE4-TSA', NULL, N'System', N'project-data', N'List number of signed TSAs by function.', NULL, N'System', CAST(0 AS bit)),
(269, N'SELECT     [year]                               AS [By Year],     ROUND(SUM(fte_cost_per_month), 2)    AS [TSA FTE Cost for Selected Year],     ROUND(SUM(nonfte_cost_per_month), 2) AS [TSA Non-FTE Cost for Selected Year] FROM     vwTSACostWaterfall WHERE      [year] = ''{Year}'' GROUP BY     [year]', N'CE4-TSA', NULL, N'System', N'project-data', N'Break down the total TSA cost for this year by FTE and Non-FTE cost.', NULL, N'System', CAST(0 AS bit)),
(270, N'SELECT     Title AS [TSA Stages] FROM     TSAPhases ORDER BY     Ordinal', N'CE4-TSA', NULL, N'System', N'project-data', N'List out stages that are preconfigured on this instance for TSA lifecycle.', NULL, N'System', CAST(1 AS bit)),
(271, N'SELECT Stg.Title AS [Stage Name],        COUNT(TSA.ID) AS [# TSAs Identified] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] = ''IDENTIFICATION'' GROUP BY Stg.Title', N'CE4-TSA', NULL, N'System', N'project-data', N'How many TSA have been identified?', NULL, N'System', CAST(1 AS bit)),
(272, N'SELECT     Title AS [TSAs that have duration for more than 18 months] FROM     TSAItems WHERE     Duration > 18', N'CE4-TSA', NULL, N'System', N'project-data', N'List out TSAs that have duration for more than 18 months.', NULL, N'System', CAST(1 AS bit)),
(273, N'SELECT     TSA.Title AS [TSAs that are ready to be approved] FROM     TSAItems      TSA     LEFT JOIN         TSAPhases Stg             ON TSA.PhaseId = Stg.ID WHERE     Stg.[Key] IN ( ''ALIGNMENT'',''APPROVAL'') ', N'CE4-TSA', NULL, N'System', N'project-data', N'List out TSAs are that are ready to be approved.', NULL, N'System', CAST(1 AS bit)),
(274, N'SELECT     f.title                                                                                    AS [Functions],     SUM((t.TSAItemFTECostForServiceDurationUSD + t.MarkupOnFTECostUSD + t.ExternalMaterialCostUSD) )AS [TSA Costs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND t.Duration IS NOT NULL GROUP BY  f.title', N'CE4-TSA', NULL, N'System', N'project-data', N'What is the total of TSA cost by function?', NULL, N'System', CAST(1 AS bit)),
(275, N'SELECT TSA.Title AS [TSAs with Open Risks] FROM TSAItems TSA     LEFT JOIN RisksAndIssues RI         ON TSA.ID = RI.TSAItemId     LEFT JOIN Statuses S         ON RI.ProgressId = S.ID WHERE S.[Key] NOT IN ( ''COMPLETED'', ''CLOSED'' )', N'CE4-TSA', NULL, N'System', N'project-data', N'List out TSA with Open risks.', NULL, N'System', CAST(1 AS bit)),
(276, N'SELECT UP.Title AS [Buyer Side Reviewer for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.RecipientApproverID = UP.ID WHERE F.Title =''{FunctionName}''', N'CE4-TSA', NULL, N'System', N'project-data', N'Who is the buy side reviewer for finance TSAs?', NULL, N'System', CAST(0 AS bit)),
(277, N'SELECT UP.Title AS [Buyer Side Reviewer for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.ProviderApproverId = UP.ID WHERE F.Title =''{FunctionName}''', N'CE4-TSA', NULL, N'System', N'project-data', N'Who is the sell side reviewer for finance TSAs?', NULL, N'System', CAST(0 AS bit)),
(278, N'SELECT UP.Title AS [Approver for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.RecipientApproverID = UP.ID WHERE F.Title = ''{FunctionName}''  UNION   SELECT UP.Title AS [Approver for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.ProviderApproverId = UP.ID WHERE F.Title =''{FunctionName}''', N'CE4-TSA', NULL, N'System', N'project-data', N'Who is the approver for finance TSAs?', NULL, N'System', CAST(0 AS bit)),
(279, N'SELECT TSA.Title AS [TSAs with Behind Schedule Tasks Linked] FROM TSAItems TSA     LEFT JOIN Workplan WP         ON TSA.ID = WP.TSAItemId     LEFT JOIN Statuses S         ON WP.ProgressId = S.ID WHERE WP.WorkPlanTaskType = ''Task''       AND S.[Key] = ''BEHIND_SCHEDULE''', N'CE4-TSA', NULL, N'System', N'project-data', N'List out TSAs with behind schedule tasks linked.', NULL, N'System', CAST(1 AS bit));
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (280, N'SELECT f.title AS [Functions],        COUNT(t.ID) AS [TSAs Count],        (SUM(t.TSAItemFTECostForServiceDurationUSD) + SUM(t.MarkupOnFTECostUSD) + SUM(t.ExternalMaterialCostUSD)) AS [TSAs Costs] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE TSADisp.Title = ''rTSA (reverse TSA)''       AND s.title <> ''Canceled''       AND t.Duration IS NOT NULL GROUP BY f.title', N'CE4-TSA', NULL, N'System', N'project-data', N'Show me the count and cost of reverse TSAs by function.', NULL, N'System', CAST(1 AS bit)),
(281, N'SELECT COUNT(TSA.ID) AS [TSA Items in Alignment phase for IT] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID WHERE Stg.[Key] = ''ALIGNMENT''       AND F.Title = ''{FunctionName}''', N'CE4-TSA', NULL, N'System', N'project-data', N'How many items are in the allignment phase for IT?', NULL, N'System', CAST(0 AS bit)),
(282, N'SELECT COUNT(TSA.ID) AS [# TSA items in the repository which have been modified in the last 7 days] FROM TSAItems TSA     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND CAST(TSA.Modified AS DATE)       BETWEEN CAST(GETDATE() - 7 AS DATE) AND CAST(GETDATE() AS DATE) ', N'CE4-TSA', NULL, N'System', N'project-data', N'How many items in the repository have been modified in the last 7 days?', NULL, N'System', CAST(1 AS bit)),
(283, N'SELECT COUNT(TSA.ID) AS [# TSA items in the repository which have been created in the last 5 days] FROM TSAItems TSA     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND CAST(TSA.Created AS DATE)       BETWEEN CAST(GETDATE() - 5 AS DATE) AND CAST(GETDATE() AS DATE) ', N'CE4-TSA', NULL, N'System', N'project-data', N'How many new items s in the repository have been created in the last 5 days?', NULL, N'System', CAST(1 AS bit)),
(284, N'SELECT AVG(t.Duration) AS [Average Duration for IT TSAs],        (SUM(t.TSAItemFTECostForServiceDurationUSD) + SUM(t.MarkupOnFTECostUSD) + SUM(t.ExternalMaterialCostUSD)) AS [Cost for IT TSAs] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id WHERE s.title <> ''Canceled''       AND t.Duration IS NOT NULL       AND f.Title = ''IT'' GROUP BY f.title', N'CE4-TSA', NULL, N'System', N'project-data', N'What is the average duration and cost for IT TSAs?', NULL, N'System', CAST(1 AS bit)),
(285, N'SELECT TSA.Title AS [TSAs with Behind Schedule / At Risk Tasks Linked] FROM TSAItems TSA     LEFT JOIN Workplan WP         ON TSA.ID = WP.TSAItemId     LEFT JOIN Statuses S         ON WP.WorkPlanTaskStatusId = S.ID WHERE WP.WorkPlanTaskType = ''Task''       AND S.[Key] IN (''BEHIND_SCHEDULE'',''AT_RISK'')', N'CE4-TSA', NULL, N'System', N'project-data', N'Show me all TSAs that have a linked task that is At Risk or Behind Schedule.', NULL, N'System', CAST(1 AS bit)),
(286, N'SELECT TSA.Title AS [TSA Items that need review] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] IN ( ''ALIGNMENT'', ''APPROVAL'' )', N'CE4-TSA', NULL, N'System', N'project-data', N'List all TSAs that need review.', NULL, N'System', CAST(1 AS bit)),
(287, N'SELECT t.Title as [TSAs that need to be signed along with Item Owner], t.TSAItemPersonInCharge as [Item Owner] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]=''SIGNED''', N'CE4-TSA', NULL, N'System', N'project-data', N'List all TSAs that need to be signed along with the item owner.', NULL, N'System', CAST(1 AS bit)),
(288, N'SELECT    t.Title AS [TSAs and rTSAs that have a markup greater than 5%]    ,TSADisp.Title AS [TSA / rTSA] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     	LEFT OUTER JOIN 	    TSADay1Dispositions TSADisp  		    ON t.TSADay1DispositionId=TSADisp.ID WHERE         s.title <> ''Canceled'' 	  AND t.TSAItemMarkup >0.05', N'CE4-TSA', NULL, N'System', N'project-data', N'Show me all TSAs and rTSAs that have a markup greater than 5%.', NULL, N'System', CAST(1 AS bit)),
(289, N'SELECT t.Title AS [TSAs are in a local currency that is not US dollar] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSACurrencies TSACurr         ON t.TSAItemLocalCurrencyId = TSACurr.ID     LEFT OUTER JOIN Currencies Curr         ON TSACurr.CurrencyID = Curr.ID WHERE Curr.Title <> ''USD ($)''       AND s.title <> ''Canceled''', N'CE4-TSA', NULL, N'System', N'project-data', N'How many TSAs are in a local currency that is not US dollar?', NULL, N'System', CAST(1 AS bit)),
(290, N'SELECT t.Title as [Inactive TSAs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''ACTIVE'' ', N'CE4-TSA', NULL, N'System', N'project-data', N'List out all Inactive TSAs.', NULL, N'System', CAST(1 AS bit)),
(291, N' SELECT t.Title as [TSAs that have duration less than 2 months] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''CANCELED'' AND t.Duration<2', N'CE4-TSA', NULL, N'System', N'project-data', N'List All TSAs where the duration is less than 2 months.', NULL, N'System', CAST(1 AS bit)),
(292, N' SELECT t.Title as [TSAs that have duration less than 2 months] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''CANCELED'' AND t.Duration>10', N'CE4-TSA', NULL, N'System', N'project-data', N'List all TSAs where the duration is more than 10 months.', NULL, N'System', CAST(1 AS bit)),
(293, N'SELECT t.Title AS [TSAs due in next 45days] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id WHERE CAST(t.TSAItemEndDate AS DATE)       BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE() + 45 AS DATE)       AND s.title <> ''Canceled''', N'CE4-TSA', NULL, N'System', N'project-data', N'List All TSAs due in next 45days.', NULL, N'System', CAST(1 AS bit)),
(294, N'SELECT    t.Title AS [TSAs that have a markup above 1%] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.TSAItemMarkup >0.01', N'CE4-TSA', NULL, N'System', N'project-data', N'List all TSAs where the markup is above 1%.', NULL, N'System', CAST(1 AS bit)),
(295, N'SELECT     t.Title AS [TSAs where Provider is not tagged] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE     s.title <> ''Canceled''     AND t.ProviderLegalEntityId IS NULL', N'CE4-TSA', NULL, N'System', N'project-data', N'List all TSAs where provider is not tagged.', NULL, N'System', CAST(1 AS bit)),
(296, N' SELECT    t.Title AS [TSAs where Receiver is not tagged] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.ReceiverLegalEntityId IS NULL', N'CE4-TSA', NULL, N'System', N'project-data', N'List all TSAs where receiver is not tagged.', NULL, N'System', CAST(1 AS bit)),
(297, N'SELECT    t.Title AS [Mixed Price Type TSAs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id   	LEFT OUTER JOIN 	PriceTypes Pric  	        ON t.TSAItemPriceTypeID=Pric.ID WHERE         s.title <> ''Canceled'' 	  AND Pric.Title=''Mixed price''', N'CE4-TSA', NULL, N'System', N'project-data', N'List all mixed price type TSAs.', NULL, N'System', CAST(1 AS bit)),
(298, N'	  SELECT    t.Title AS [List all TSAs which are not getting settled in USD]    FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     	LEFT OUTER JOIN 	    TSACurrencies TSACurr  		    ON t.TSAItemLocalCurrencyId=TSACurr.ID 	LEFT OUTER JOIN Currencies Curr 	        ON TSACurr.CurrencyID=Curr.ID WHERE         Curr.Title<>''USD ($)''  	  AND s.title <> ''Canceled''', N'CE4-TSA', NULL, N'System', N'project-data', N'List all TSAs which are not getting settled n USD.', NULL, N'System', CAST(1 AS bit)),
(299, N'SELECT    t.Title AS [TSAs where User has provided comments] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.Comments IS NOT NULL', N'CE4-TSA', NULL, N'System', N'project-data', N'List all TSAs where User has provided comments.', NULL, N'System', CAST(1 AS bit)),
(300, N'SELECT     ISNULL(Stg.Title, ''No Phase Assigned'') AS [Phase],     (TSA.Title)                          AS [ TSAs title] FROM     TSAItems      TSA     LEFT JOIN         TSAPhases Stg             ON TSA.PhaseId = Stg.ID', N'CE4-TSA', NULL, N'System', N'project-data', N'List all TSAs per phase.', NULL, N'System', CAST(1 AS bit)),
(301, N'SELECT     t.Title AS [TSAs assigned to function due in next 30 days] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND f.Title=''{FunctionName}'' 	AND CAST(t.TSAItemEndDate AS DATE) BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE()+30 AS DATE)', N'CE4-TSA', NULL, N'System', N'project-data', N'List All TSAs assigned to IT due in next 30 days.', NULL, N'System', CAST(0 AS bit)),
(302, N'SELECT t.Title AS [TSAs assigned to IT due in next 30 days] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id WHERE s.title <> ''Canceled''       AND f.Title = ''Finance''       AND CAST(t.TSAItemEndDate AS DATE)       BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE() + 15 AS DATE)       AND t.TSAItemMarkup <= 0.01       AND t.ReceiverLegalEntityId IS NULL', N'CE4-TSA', NULL, N'System', N'project-data', N'List All TSAs assigned to finance due in next 15 days where markup is below 1% and has no receiver tagged.', NULL, N'System', CAST(1 AS bit)),
(303, N'SELECT t.Title AS [TSAs Items which are tagged as rTSA for Day 1 disposition] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE s.title <> ''Canceled''       AND TSADisp.Title = ''rTSA (reverse TSA)''', N'CE4-TSA', NULL, N'System', N'project-data', N'List all Items which are tagged as rTSA for Day 1 disposition.', NULL, N'System', CAST(1 AS bit)),
(304, N'SELECT t.Title AS [TSA Items where total number of FTEs providing service is greater than 5] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE s.title <> ''Canceled''       AND t.TSAItemNoOfFTEProvidingService > 5', N'CE4-TSA', NULL, N'System', N'project-data', N'List all Items where total number of FTEs providing service is greater than 5.', NULL, N'System', CAST(1 AS bit)),
(305, N'SELECT TSA.Title AS [TSA items which have been in Detailing phase for more than 15 days] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] = ''DETAILING''       AND CAST(TSA.Modified AS DATE) < CAST(GETDATE() - 15 AS DATE)', N'CE4-TSA', NULL, N'System', N'project-data', N'List all items which have been in Detailing phase for more than 15 days.', NULL, N'System', CAST(1 AS bit)),
(306, N'SELECT TSA.Title AS [Finance related TSA items with relevant SLA details],        ISNULL(TSA.TSAItemSLAName, '' '') AS [SLA Details] FROM TSAItems TSA     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND F.Title = ''Finance''', N'CE4-TSA', NULL, N'System', N'project-data', N'List all finance related items with relevant SLA details.', NULL, N'System', CAST(1 AS bit)),
(307, N'SELECT TSA.Title AS [TSA items where external cost is greater than FTE cost for entire duration] FROM TSAItems TSA     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND (TSA.TSAItemExternalMaterialCost > TSA.TSAItemFTECostForServiceDuration)', N'CE4-TSA', NULL, N'System', N'project-data', N'List all items where external cost is greater than FTE cost for entire duration.', NULL, N'System', CAST(1 AS bit)),
(308, N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] != ''CAPITAL_EDGE_SUPPORT'' order by TT.Title ', N'PROJECT_LEVEL', NULL, N'System', N'project-data', N'What are the project teams that make up the governance structure for this engagement?', NULL, N'System', CAST(1 AS bit)),
(309, N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title ', N'PROJECT_LEVEL', NULL, N'System', N'project-data', N'How many milestones does each team have?', NULL, N'System', CAST(1 AS bit)),
(310, N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', N'PROJECT_LEVEL', NULL, N'System', N'project-data', N'How many interdependencies does each team have?', NULL, N'System', CAST(1 AS bit)),
(311, N'SELECT pt.Title, COUNT(1) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title ', N'PROJECT_LEVEL', NULL, N'System', N'project-data', N'How many risks does each team have?', NULL, N'System', CAST(1 AS bit)),
(312, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'What PMO workplan templates are available?', NULL, N'System', CAST(1 AS bit)),
(313, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'What are the best practices to run weekly status meetings with the client?', NULL, N'System', CAST(1 AS bit)),
(314, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'What is the difference between Progress and Calculated Status?', NULL, N'System', CAST(1 AS bit)),
(315, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'How do you add a new field to the workplan?', NULL, N'System', CAST(1 AS bit)),
(316, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'How do I set alerts/send email for various item owners?', NULL, N'System', CAST(1 AS bit)),
(317, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'How do I add a client user to the PMO app?', NULL, N'System', CAST(1 AS bit)),
(318, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'How do I link a Workplan Task to RAID?', NULL, N'System', CAST(1 AS bit)),
(319, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'Provide case studies/credentials for similar deals that EY has supported in the past.', NULL, N'System', CAST(1 AS bit)),
(320, NULL, N'CE4-PMO', NULL, N'System', N'ey-guidance', N'Help me understand PMO methodology for this {ProjectType} project.', NULL, N'System', CAST(1 AS bit)),
(321, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'What cost savings levers are available?', NULL, N'System', CAST(1 AS bit));
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (322, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'What revenue growth levers are available?', NULL, N'System', CAST(1 AS bit)),
(323, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'What are typical one-time costs that we should be considering?', NULL, N'System', CAST(1 AS bit)),
(324, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'What are the IT cost savings levers that I should be thinking about?', NULL, N'System', CAST(1 AS bit)),
(325, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?', NULL, N'System', CAST(1 AS bit)),
(326, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?', NULL, N'System', CAST(1 AS bit)),
(327, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'Provide case studies/credentials for similar deals that EY have supported in the past.', NULL, N'System', CAST(1 AS bit)),
(328, NULL, N'CE4-VC', NULL, N'System', N'ey-guidance', N'Help understand VC methodology.', NULL, N'System', CAST(1 AS bit)),
(329, NULL, N'CE4-OM', NULL, N'System', N'ey-guidance', N'What normative operating models are available?', NULL, N'System', CAST(1 AS bit)),
(330, NULL, N'CE4-OM', NULL, N'System', N'ey-guidance', N'How can I upload systems in bulk to the Op Model app?', NULL, N'System', CAST(1 AS bit)),
(331, NULL, N'CE4-OM', NULL, N'System', N'ey-guidance', N'What are the steps to setup the Op Model app?', NULL, N'System', CAST(1 AS bit)),
(332, NULL, N'CE4-OM', NULL, N'System', N'ey-guidance', N'What reports are available in the Op Model app?', NULL, N'System', CAST(1 AS bit)),
(333, NULL, N'CE4-OM', NULL, N'System', N'ey-guidance', N'Provide case studies/credentials for similar deals that EY has supported in the past.', NULL, N'System', CAST(1 AS bit)),
(334, NULL, N'CE4-TSA', NULL, N'System', N'ey-guidance', N'What TSAs would you suggest?', NULL, N'System', CAST(1 AS bit)),
(335, NULL, N'CE4-TSA', NULL, N'System', N'ey-guidance', N'What are examples for TSAs?', NULL, N'System', CAST(1 AS bit)),
(336, NULL, N'CE4-TSA', NULL, N'System', N'ey-guidance', N'Why are TSAs important?', NULL, N'System', CAST(1 AS bit)),
(337, NULL, N'CE4-TSA', NULL, N'System', N'ey-guidance', N'Provide case studies/credentials for similar deals that EY have supported in the past.', NULL, N'System', CAST(1 AS bit)),
(338, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'What PMO workplan templates are available?', NULL, N'System', CAST(1 AS bit)),
(339, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'What are the best practices to run weekly status meetings with the client?', NULL, N'System', CAST(1 AS bit)),
(340, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'How do you add a new field to the workplan?', NULL, N'System', CAST(1 AS bit)),
(341, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'How do I link a Workplan Task to RAID?', NULL, N'System', CAST(1 AS bit)),
(342, NULL, N'PROJECT_LEVEL', NULL, N'System', N'ey-guidance', N'Help me understand PMO methodology for this {ProjectType} project.', NULL, N'System', CAST(1 AS bit)),
(343, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'Generate a basic workplan template for my project.', NULL, N'System', CAST(1 AS bit)),
(344, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the key risks for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(345, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the key milestones for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(346, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the best practices to run weekly status meetings?', NULL, N'System', CAST(1 AS bit)),
(347, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are some of the similar deals that have happened in the past?', NULL, N'System', CAST(1 AS bit)),
(348, NULL, N'CE4-PMO', NULL, N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System', CAST(1 AS bit)),
(349, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best cost saving initiatives?', NULL, N'System', CAST(1 AS bit)),
(350, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best revenue growth initiatives?', NULL, N'System', CAST(1 AS bit)),
(351, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best strategies for improving a company in the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(352, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are recent examples of improvements being made in the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(353, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are the best ways to track actuals?', NULL, N'System', CAST(1 AS bit)),
(354, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What should be the frequency of tracking dollar values during the engagement?', NULL, N'System', CAST(1 AS bit)),
(355, NULL, N'CE4-VC', NULL, N'System', N'internet', N'What are typical implications for cross border deals?', NULL, N'System', CAST(1 AS bit)),
(356, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What is a normative operating model for the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(357, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What are key considerations when defining an operating model for a {Sector} sector company?', NULL, N'System', CAST(1 AS bit)),
(358, NULL, N'CE4-OM', NULL, N'System', N'internet', N'What are examples of Day 1 process dispositions?', NULL, N'System', CAST(1 AS bit)),
(359, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What are the corporate functions typically involved in the {Sector} sector?', NULL, N'System', CAST(1 AS bit)),
(360, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What are the typical services of the Sales and Marketing function?', NULL, N'System', CAST(1 AS bit)),
(361, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.', NULL, N'System', CAST(1 AS bit)),
(362, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Provides templates of TSA.', NULL, N'System', CAST(1 AS bit)),
(363, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'What should be the typical duration for TSA?', NULL, N'System', CAST(1 AS bit));
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (364, NULL, N'CE4-TSA', NULL, N'System', N'internet', N'Things I should keep in mind for longer duration TSAs?', NULL, N'System', CAST(1 AS bit)),
(365, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'Generate a basic workplan template for my project.', NULL, N'System', CAST(1 AS bit)),
(366, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the key risks for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(367, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the key milestones for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(368, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the best practices to run weekly status meetings?', NULL, N'System', CAST(1 AS bit)),
(369, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System', CAST(1 AS bit));
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240614102333_AddNewSuggestionForProjectData_3', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 256;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240614103752_UpdateOneSuggestionVisibility', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DELETE FROM [AssistantSuggestions]
WHERE [ID] = 368;
SELECT @@ROWCOUNT;

GO

DELETE FROM [AssistantSuggestions]
WHERE [ID] = 369;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE wp.WorkPlanTaskType = ''Milestone'' and TT.[Key] = ''PROJECT_MANAGEMENT'' GROUP BY pt.Title '
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(*) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE IssueRiskCategory = ''Risk'' and TT.[Key] = ''PROJECT_MANAGEMENT'' GROUP BY pt.Title'
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT wp.Title  from WorkPlan wp   LEFT JOIN Statuses s on wp.WorkPlanTaskStatusId = s.ID  left join ProjectTeams pt on pt.ID = wp.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId where s.[Key] = ''BEHIND_SCHEDULE''  AND wp.WorkPlanTaskType = ''Milestone'' and TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title  from RisksAndIssues RI   LEFT JOIN Statuses s on RI.ItemStatusId = s.ID   LEFT JOIN ProjectTeams pt on pt.ID = RI.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId where s.[Key] = ''BEHIND_SCHEDULE''  AND RI.IssueRiskCategory = ''Risk'' and TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS MilestonesDueThisWeek FROM WorkPlan wp LEFT JOIN statuses s ON wp.WorkPlanTaskStatusId = s.ID  LEFT JOIN ProjectTeams pt on pt.ID = wp.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId LEFT JOIN UserProfiles up on wp.TaskOwnerId = up.ID  WHERE wp.WorkPlanTaskType = ''Milestone''    AND YEAR(wp.TaskDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, wp.TaskDueDate) = DATEPART(WEEK, GETDATE())    AND (s.[Key] IS NULL OR s.[Key]  NOT IN (''COMPLETED'', ''CLOSED'')) AND TT.[Key] = ''PROJECT_MANAGEMENT'' AND up.EMail = ''{Username}'''
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS RisksAndIssuesDueThisWeek  FROM RisksAndIssues RI  LEFT JOIN statuses S ON RI.ItemStatusId = S.ID  LEFT JOIN UserProfiles up on RI.ItemOwnerId = up.ID  LEFT JOIN ProjectTeams pt on pt.ID = RI.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE RI.IssueRiskCategory = ''Risk''    AND YEAR(RI.ItemDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, RI.ItemDueDate) = DATEPART(WEEK, GETDATE())    AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED''))   AND TT.[Key] = ''PROJECT_MANAGEMENT'' AND up.EMail = ''{Username}'''
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     pt.Title AS ProjectTeamTitle, COUNT(*) AS OverdueMilestoneCount FROM   WorkPlan wp INNER JOIN  ProjectTeams pt ON wp.ProjectTeamId = pt.ID  LEFT JOIN  statuses s ON wp.WorkPlanTaskStatusId = s.ID  LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE  wp.WorkPlanTaskType = ''Milestone''  AND wp.TaskDueDate < GETDATE()    AND TT.[Key] = ''PROJECT_MANAGEMENT'' AND (s.[Key] IS NULL OR s.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) GROUP BY   pt.Title ORDER BY      OverdueMilestoneCount DESC'
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  pt.Title AS ProjectTeamTitle,     COUNT(1) AS OverdueRiskCount FROM  RisksAndIssues RI  LEFT JOIN ProjectTeams pt ON RI.ProjectTeamId = pt.ID  LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId LEFT JOIN      statuses S ON RI.ItemStatusId = S.ID  WHERE      RI.IssueRiskCategory = ''Risk''      AND RI.ItemDueDate < GETDATE()      AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'')) AND TT.[Key] = ''PROJECT_MANAGEMENT'' GROUP BY      pt.Title ORDER BY  OverdueRiskCount desc'
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT   RiskImpact,  RiskProbability,  COUNT(*) AS RiskCount  FROM  RisksAndIssues RI LEFT JOIN ProjectTeams pt on pt.ID = RI.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE IssueRiskCategory = ''Risk''  AND ItemStatusId NOT IN (SELECT ID FROM statuses WHERE [Key] IN (''COMPLETED'', ''CLOSED''))   AND (RiskImpact IS NOT NULL   OR RiskProbability IS NOT NULL  ) AND TT.[Key] = ''PROJECT_MANAGEMENT'' GROUP BY      RiskImpact,     RiskProbability ORDER BY      RiskImpact, RiskProbability'
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  COUNT(1) [HighRiskItemCount]  FROM RisksAndIssues R  LEFT JOIN ProjectTeams PT ON PT.ID = R.ProjectTeamId  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId WHERE  RiskImpact = ''High''  AND IssueRiskCategory = ''Risk'' AND TT.[Key]=''PROJECT_MANAGEMENT'' AND PT.Title ={ProjectTeam}'
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team]  FROM ProjectStatusEntries PSE  LEFT JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId LEFT JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID  LEFT JOIN WeeklyStatusStatuses WS ON WS.ID = PSE.WeeklyStatusStatusId  WHERE  RP.ID = (SELECT ID  FROM ReportingPeriods WHERE GETDATE() BETWEEN PeriodStartDate AND PeriodEndDate) AND WS.[KEY] IN (''AT_RISK'',''BEHIND_SCHEDULE'') AND TT.[Key]=''PROJECT_MANAGEMENT'''
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(WR.ID) Count,''Risks'' as Category FROM Workplan W   JOIN WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues WR On WR.WorkPlanId = W.ID   LEFT JOIN RisksAndIssues RI ON RI.ID = WR.RisksAndIssueId   LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID   LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId  WHERE RI.IssueRiskCategory = ''Risk''  and TT.[Key] = ''PROJECT_MANAGEMENT''    UNION ALL SELECT COUNT(WR.ID) Count, ''Issues'' as Category   FROM Workplan W   JOIN WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues WR On WR.WorkPlanId = W.ID   LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID   LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId  LEFT JOIN RisksAndIssues RI ON RI.ID = WR.RisksAndIssueId  WHERE RI.IssueRiskCategory = ''Issue''  and TT.[Key] = ''PROJECT_MANAGEMENT''    UNION ALL SELECT COUNT(WA.ID) Count, ''Actions'' as Category    FROM Workplan W   JOIN WorkPlansToActionsForAssociatedActions WA On WA.WorkPlanId = W.ID    LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID   LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId  where TT.[Key] = ''PROJECT_MANAGEMENT''    UNION ALL SELECT    COUNT(WD.ID) Count,    ''Decisions'' as Category    FROM    Workplan W      JOIN WorkPlansToDecisionsForAssociatedDecisions WD On WD.WorkPlanId = W.ID  LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID   LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId  where TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'How many Risks, Issues, Actions and Decisions linked to Workplan Tasks?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 44;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT WSS.Title StatusValue ,''CurrentStatus'' as Category FROM ProjectStatusEntries PSE LEFT JOIN WeeklyStatusStatuses WSS ON WSS.ID=PSE.WeeklyStatusStatusId LEFT JOIN ProjectTeams PT on PT.ID=PSE.ProjectTeamId WHERE PSE.ReportingPeriodId=(SELECT TOP 1 ReportingPeriods.ID FROM ReportingPeriods Where cast(ReportingPeriods.PeriodStartDate as date) <= cast(getDate() as date) Order BY PeriodEndDate DESC) AND PT.Title like {ProjectTeam}  UNION SELECT WSS.Title StatusValue ,''PreviousStatus'' as Category FROM ProjectStatusEntries PSE  LEFT JOIN WeeklyStatusStatuses WSS ON WSS.ID=PSE.WeeklyStatusStatusId LEFT JOIN ProjectTeams PT on PT.ID=PSE.ProjectTeamId WHERE PSE.ReportingPeriodId=(SELECT  ReportingPeriods.ID FROM   ReportingPeriods Where cast(ReportingPeriods.PeriodStartDate as date) <= cast(getDate() as date) Order BY PeriodEndDate DESC Offset 1 Rows FETCH NEXT 1 ROWS ONLY) AND  PT.Title like {ProjectTeam}', [SuggestionText] = N'What''s prior week and current week status for Finance function?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    RI.UniqueItemIdentifier,    RI.Title,    ''Risks'' as Category  FROM    RisksAndIssues RI   JOIN Statuses S ON RI.ItemStatusId = S.ID  JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[KEY] NOT IN (     ''COMPLETED'', ''CANCELLED'', ''CLOSED'',      ''ON_HOLD''   )    AND RI.IssueRiskCategory = ''Risk''    AND TT.[Key] = ''PROJECT_MANAGEMENT'' UNION  SELECT    RI.UniqueItemIdentifier,    RI.Title,    ''Issues'' as Category  FROM    RisksAndIssues RI   JOIN Statuses S ON RI.ItemStatusId = S.ID  JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[KEY] NOT IN (     ''COMPLETED'', ''CANCELLED'', ''CLOSED'',      ''ON_HOLD''   )    AND RI.IssueRiskCategory = ''Issue''    AND TT.[Key] = ''PROJECT_MANAGEMENT'' UNION  SELECT    A.UniqueItemIdentifier,    A.Title,    ''Actions'' as Category  FROM    Actions A    JOIN Statuses S ON A.ItemStatusId = S.ID    JOIN ProjectTeams PT ON A.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[KEY] NOT IN (     ''COMPLETED'', ''CANCELLED'', ''CLOSED'',      ''ON_HOLD''   )    AND TT.[Key] = ''PROJECT_MANAGEMENT'' UNION  SELECT    D.UniqueItemIdentifier,    D.Title,    ''Decisions'' as Category  FROM    Decisions D    LEFT JOIN Statuses S ON D.ItemStatusId = S.ID      JOIN ProjectTeams PT ON D.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[KEY] NOT IN (     ''COMPLETED'', ''CANCELLED'', ''CLOSED'',      ''ON_HOLD''   )   AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List all Open Risks, Issues, Actions and Decisions in PMO app.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title as OpenInterdependencies, S.Title as Status FROM Interdependencies I LEFT JOIN InterdependencyStatuses S ON I.InterdependencyStatusId = S.ID  WHERE S.[KEY] NOT IN (''COMPLETED'', ''Canceled'') ', [SuggestionText] = N'List all Open Interdependencies.'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    W.UniqueItemIdentifier,    W.TITLE as CriticalTasks  FROM    Workplan W      JOIN ProjectTeams PT On W.WorkstreamId = PT.ID  JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    W.IsCritical = 1   AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List all critical workplan tasks in PMO app.'
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title as ITIntProvider FROM Interdependencies I LEFT JOIN PROJECTTEAMS PT ON PT.ID = I.ProviderProjectTeamID WHERE PT.Title = {ProjectTeam} ', [SuggestionText] = N'List all Interdependencies where IT is Interdependency Provider.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title as ITIntReceiver FROM Interdependencies I LEFT JOIN PROJECTTEAMS PT ON PT.ID = I.ReceiverProjectTeamId WHERE PT.Title = {ProjectTeam} ', [SuggestionText] = N'List all Interdependencies where IT is Interdependency Receiver.'
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    COUNT(W.ID) as CountofCriticalPath   FROM    Workplan W      JOIN ProjectTeams PT On W.WorkstreamId = PT.ID  JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    W.IsCritical = 1   AND TT.[Key] = ''PROJECT_MANAGEMENT''   and W.WorkPlanTaskType = ''Milestone''', [SuggestionText] = N'How many critical milestones in workplan in PMO app?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    COUNT(W.ID) AS TasksDueIn30Days  FROM    Workplan W    LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID        JOIN ProjectTeams PT On W.WorkstreamId = PT.ID  JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    CAST(W.TaskDueDate AS DATE) <= CAST(GETDATE() + 30 AS DATE)    AND CAST(W.TaskDueDate AS DATE) >= CAST(GETDATE() AS DATE)    AND S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'How many tasks are due in next 30 days in PMO app?'
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  W.UniqueItemIdentifier,W.Title TasksWithoutOwner FROM  WorkPlan W JOIN ProjectTeams PT On W.WorkstreamId = PT.ID  JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  W.TaskOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List any workplan items that do not have an owner assigned in PMO app.'
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  RI.UniqueItemIdentifier,RI.Title ItemsWithoutOwner, IssueRiskCategory AS Category FROM  RisksAndIssues RI LEFT JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  WHERE  RI.ItemOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT'' UNION  SELECT  A.UniqueItemIdentifier,A.Title  ItemsWithoutOwner, ''Actions'' AS Category FROM  Actions A LEFT JOIN ProjectTeams PT ON A.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  A.ItemOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT''  UNION  SELECT  D.UniqueItemIdentifier,D.Title  ItemsWithoutOwner, ''Decisions'' AS Category FROM  Decisions D LEFT JOIN ProjectTeams PT ON D.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  D.ItemOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List any RAID log items that do not have an owner assigned in PMO app.'
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title AS InterdependencyWithoutTasks FROM Interdependencies I LEFT JOIN WorkPlansToInterdependenciesForProviderTasks WTP ON WTP.InterdependencyId = I.ID WHERE WTP.ID IS NULL  UNION  SELECT I.UniqueItemIdentifier, I.Title AS InterdependencyWithoutTasks FROM Interdependencies I LEFT JOIN WorkPlansToInterdependenciesForReceiverTasks WTR ON WTR.InterdependencyId = I.ID WHERE WTR.ID IS NULL;', [SuggestionText] = N'List interdependencies that do not have a provider or receiver task linked.'
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT      UP.Title AS UserName  FROM      WorkPlan W JOIN UserProfiles UP ON UP.ID = W.TaskOwnerId JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE      S.[Key] IN (''AT_RISK'', ''BEHIND_SCHEDULE'')     AND UP.Title IS NOT NULL AND TT.[Key] =  ''PROJECT_MANAGEMENT''', [SuggestionText] = N'Show me a list of all users that have behind schedule or at risk items assigned to them in PMO app.'
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title RisksAndIssues, IssueRiskCategory  FROM RisksAndIssues RI  LEFT JOIN Statuses S ON S.ID = RI.ItemStatusId  LEFT JOIN ProjectTeams PT ON RI.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId WHERE IsCritical IN (1) AND S.[Key] NOT IN (''CLOSED'') AND TT.[Key]=''PROJECT_MANAGEMENT''', [SuggestionText] = N'Show me all Risks and issues that are flagged as Critical and not complete.'
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ProjectTeam FROM(   SELECT      PT.Title AS Projectteam,     COUNT(PT.ID) AS TeamUpdateCount, DENSE_RANK() OVER (ORDER BY COUNT(PT.ID)) ROW_NUM FROM      WorkPlan W JOIN ProjectTeams PT ON PT.ID = W.ProjectTeamId JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE      CAST(W.Modified AS DATE) BETWEEN DATEADD(day, -14, CAST(GETDATE() AS DATE)) AND DATEADD(day, -7, CAST(GETDATE() AS DATE)) AND PT.ItemIsActive=1 AND TT.[Key] =  ''PROJECT_MANAGEMENT'' GROUP BY      pt.title) A', [SuggestionText] = N'Which functions has made the least # of updates to their workplan in last week in PMO app?'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      W.Title AS [List of Critical Milestones due in next 15 days with no owners Assigned yet] FROM      WorkPlan W JOIN ProjectTeams PT ON PT.ID = W.ProjectTeamId JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE      WorkPlanTaskType IN (''Milestone'')     AND CAST(TaskDueDate AS DATE) BETWEEN CAST(GETDATE() AS DATE) AND DATEADD(day, 15, CAST(GETDATE() AS DATE))     AND IsCritical IN (1)     AND TaskOwnerId IS NULL AND TT.[Key] =  ''PROJECT_MANAGEMENT''', [SuggestionText] = N'Can you please list down all milestones due in next 15 days which are on critical path and have no owners assigned to them in PMO app??'
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title as [List down all tasks associated with interdependencies] from Workplan where ID in ( SELECT WorkPlanId FROM WorkPlansToInterdependenciesForReceiverTasks UNION select WorkPlanId FROM WorkPlansToInterdependenciesForProviderTasks) AND WorkPlanTaskType=''Task''', [SuggestionText] = N'Can you please list down all tasks associated with interdependencies?'
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title AS WorkplanAssociatedWithInterdependencies FROM WorkPlan W INNER JOIN WorkPlansToInterdependenciesForReceiverTasks WPRT ON W.id = WPRT.WorkPlanId LEFT JOIN Interdependencies IR ON WPRT.InterdependencyId = IR.ID WHERE CAST(W.TaskDueDate AS DATE) < CAST(IR.ItemDueDate AS DATE) AND W.WorkPlanTaskType=''Task'' UNION SELECT W.Title AS WorkplanAssociatedWithInterdependencies FROM WorkPlan W INNER JOIN WorkPlansToInterdependenciesForProviderTasks WPPT ON W.id = WPPT.WorkPlanId LEFT JOIN Interdependencies IR ON WPPT.InterdependencyId = IR.ID WHERE CAST(W.TaskDueDate AS DATE) < CAST(IR.ItemDueDate AS DATE) AND W.WorkPlanTaskType=''Task''', [SuggestionText] = N'Can you please list down all tasks whose due date is less than the due date of the associated interdependency?'
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title AS WorkPlanItem FROM Workplan W LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE TT.[Key] = ''PROJECT_MANAGEMENT''  AND DATEPART(ww,TaskDueDate) = DATEPART(ww,GETDATE())', [SuggestionText] = N'List out workplan items due this week in PMO app.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title, W.WorkPlanTaskType, W.StartDate, W.TaskDueDate, PT.Title ProjectTeam, S.Title [Status], UP.Title TaskOwner FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN UserProfiles UP ON W.TaskOwnerId = UP.ID WHERE UniqueItemIdentifier = ''HR.2.2.6''', [SuggestionText] = N'Provide details for workplan ID HR.2.2.6.'
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(RI.ID) IssueCoutnwithPendingStatus FROM RisksandIssues RI LEFT JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID JOIN RiskAndIssueStatuses RS ON RI.ItemStatusID = RS.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE IssueRiskCategory = ''Issue'' AND TT.[Key] = ''PROJECT_MANAGEMENT'' AND RS.Title = ''Pending''', [SuggestionText] = N'How many issues are in pending status in PMO app?'
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  RI.UniqueItemIdentifier, RI.Title, RI.IssueRiskCategory  FROM RisksAndIssues RI LEFT JOIN ProjectTeams PT ON RI.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId WHERE   RI.ItemOwnerId IS NULL   UNION ALL  SELECT   D.UniqueItemIdentifier, D.Title  ,''Decision''  FROM Decisions D LEFT JOIN ProjectTeams PT ON D.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId WHERE   D.ItemOwnerId IS NULL   UNION ALL   SELECT A.UniqueItemIdentifier, A.Title ,''Action''  FROM Actions A LEFT JOIN ProjectTeams PT ON A.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId WHERE  A.ItemOwnerId IS NULL', [SuggestionText] = N'List RAID items that do not have an owner assigned.'
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    W.UniqueItemIdentifier,    W.TITLE as WorkplansWithDueDatePassed  FROM    Workplan W    LEFT JOIN Statuses S On S.ID = W.WorkPlanTaskStatusId   LEFT JOIN ProjectTeams PT on PT.ID = W.ProjectTeamId   LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId WHERE    S.[KEY] NOT IN ( ''COMPLETED'' , ''CANCELLED'')   AND CAST(W.TaskDueDate as DATE)< CAST(GETDATE() AS DATE)    AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List all Workplan tasks that are ''Not Started'' and planned start date has passed in PMO app.'
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    W.UniqueItemIdentifier,    W.TITLE as WorkplansWithDueDatePassed  FROM    Workplan W    LEFT JOIN Statuses S On S.ID = W.WorkPlanTaskStatusId    LEFT JOIN ProjectTeams PT on PT.ID = W.ProjectTeamId   LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId WHERE    S.[KEY] NOT IN ( ''COMPLETED'' , ''CANCELLED'')   AND CAST(W.TaskDueDate as DATE)< CAST(GETDATE() AS DATE)    AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List all Workplan tasks which are past due in PMO app.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT PT.Title as ProjectTeams_With_Items_At_Risk  FROM ProjectTeams PT    JOIN Workplan W ON W.ProjectTeamID = PT.ID    JOIN Statuses S ON S.ID = W.WorkplanTaskStatusID    JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[Key] = ''AT_RISK''   AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'List all project teams with workplan items that are ''At Risk'' in PMO app.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title FROM ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId WHERE ManageProjectStatus = 1 AND  TT.[Key] = ''PROJECT_MANAGEMENT''  EXCEPT   SELECT PT.Title  FROM ProjectStatusEntries PSE  LEFT JOIN ReportingPeriods RP ON PSE.ReportingPeriodId = RP.ID  LEFT JOIN ProjectTeams PT ON PSE.ProjectTeamId = PT.ID  WHERE RP.ID = (SELECT ID FROM ReportingPeriods WHERE CAST(GETDATE() AS DATE) BETWEEN CAST(PeriodStartDate AS DATE) AND CAST(PeriodEndDate AS DATE)      )   AND PSE.WeeklyStatusStatusId IS NOT NULL', [SuggestionText] = N'Which teams have not entered thier weekly status report for this reporting period?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  COUNT(R.ID) AS NewRisksCount FROM  RisksAndIssues R JOIN ProjectTeams PT ON R.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  IssueRiskCategory = ''Risk'' AND DATEDIFF(day, R.Created, GETDATE()) <= 5 AND TT.[Key] = ''PROJECT_MANAGEMENT''', [SuggestionText] = N'How many new risks have been created in the last 5 days in PMO app?'
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title Workplan  FROM ( SELECT   DISTINCT W.Title, WorkPlanLinksTargetId AS TaskID      FROM WorkPlanLinks WL        LEFT JOIN WorkPlan W ON W.ID = WL.WorkPlanLinksTargetId LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId where TT.[Key]=''PROJECT_MANAGEMENT''  UNION      SELECT    DISTINCT W.Title, WorkPlanLinksSourceId AS TaskID     FROM          WorkPlanLinks WL         LEFT JOIN WorkPlan W ON W.ID = WL.WorkPlanLinksSourceId LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId where TT.[Key]=''PROJECT_MANAGEMENT'' ) AS SubQuery ORDER BY TaskID', [SuggestionText] = N'Which tasks have a predecessor or successor linked to them?'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ProjectTeam FROM(   SELECT      PT.Title AS Projectteam,     COUNT(PT.ID) AS TeamUpdateCount, DENSE_RANK() OVER (ORDER BY COUNT(PT.ID) DESC) ROW_NUM FROM      RisksAndIssues RI JOIN ProjectTeams PT ON PT.ID = RI.ProjectTeamId JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE PT.ItemIsActive=1 and RI.IssueRiskCategory = ''Risk'' AND TT.[Key] =  ''PROJECT_MANAGEMENT'' GROUP BY      pt.title) A', [SuggestionText] = N'Which function has the highest number of risk associated with in PMO app?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      W.Title AS [List of Milestones due in next 7 days and Not Updated Since Last 2 weeks] FROM      WorkPlan W JOIN Statuses S on s.ID = W.WorkPlanTaskStatusId JOIN ProjectTeams PT ON PT.ID = W.ProjectTeamId JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE      W.WorkPlanTaskType IN (''Milestone'')     AND W.IsCritical IN (1)     AND CAST(W.Modified AS DATE) < DATEADD(day, -14, CAST(GETDATE() AS DATE)) AND S.[Key] not in (''COMPLETED'', ''CANCELLED'') AND TT.[Key] =  ''PROJECT_MANAGEMENT''', [SuggestionText] = N'Can you please list down all milestones due in next 7 days which are on critical path and have no update made to them in last 2 weeks in PMO app?'
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     RI.TITLE AS [Risk items that does not have Risk Mitigation plan] FROM     RisksAndIssues RI  LEFT JOIN ProjectTeams PT ON RI.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId WHERE     RI.IssueRiskCategory = ''Risk''     AND RI.RiskMitigation IS  NULL AND TT.[Key]=''PROJECT_MANAGEMENT''', [SuggestionText] = N'Are there any risks items that doesn''t have risk mitigation plan?'
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(R.ID) [Reports available in PMO] FROM Reports R JOIN MenuOptions M ON R.ParentMenuItemId = M.ID WHERE M.[Key] = ''PROJECT_ANALYTICS'' AND R.ReportIsActive = 1', [SuggestionText] = N'How many Analytics reports are available for PMO App?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  A.*,  B.StartOfWeek,  B.EndOfWeek  FROM ( SELECT TOP 1 COUNT(*) AS NumberOfItemsDue,         DATEPART(week, TaskDueDate) AS WeekNumber  FROM WorkPlan  W LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId     WHERE TaskDueDate IS NOT NULL AND S.[key] <> ''COMPLETE''  AND TT.[Key]=''PROJECT_MANAGEMENT'' GROUP BY DATEPART(week, TaskDueDate)     ORDER BY COUNT(*) DESC ) AS A   INNER JOIN (    SELECT DATEADD(week, DATEDIFF(week, 0, TaskDueDate), 0) AS StartOfWeek,         DATEADD(week, DATEDIFF(week, 0, TaskDueDate) + 1, 0) - 1 AS EndOfWeek,         DATEPART(week, TaskDueDate) AS WeekNumber     FROM WorkPlan W    LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId  LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId      WHERE TaskDueDate IS NOT NULL AND S.[key] <> ''COMPLETE''    AND TT.[Key]=''PROJECT_MANAGEMENT''   GROUP BY DATEPART(week, TaskDueDate), DATEADD(week, DATEDIFF(week, 0, TaskDueDate), 0),       DATEADD(week, DATEDIFF(week, 0, TaskDueDate) + 1, 0) ) AS B ON B.WeekNumber = A.WeekNumber', [SuggestionText] = N'What week has the most workplan items due across the project?'
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      AccomplishmentsAndNextSteps.Title FROM     ProjectStatusEntries     LEFT OUTER JOIN AccomplishmentsAndNextSteps ON ProjectStatusEntries.ID = AccomplishmentsAndNextSteps.ProjectStatusEntryId     LEFT JOIN ProjectTeams PT ON PT.ID = ProjectStatusEntries.ProjectTeamId     LEFT OUTER JOIN ReportingPeriods ON ProjectStatusEntries.ReportingPeriodId = ReportingPeriods.ID  WHERE     AccomplishmentNextStepCategory IN ''{AccomplishmentNextStepCategory}'' AND ReportingPeriods.PeriodStartDate = (         SELECT TOP 1 PeriodStartDate          FROM ReportingPeriods          WHERE CAST (GETDATE() AS DATE) BETWEEN CAST(PeriodStartDate AS DATE) AND CAST(PeriodEndDate AS DATE)      ) ', [SuggestionText] = N'What are the key action items scheduled for next week?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH CTE AS (SELECT COUNT(*) AS OverdueItemCount,      PT.Title AS [ProjectTeam With Most Overdue Item]  FROM WorkPlan W  LEFT JOIN [ProjectTeams] PT ON PT.ID = W.ProjectteamId   LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId  WHERE  	  S.[Key] <> ''{Key}''    AND TT.[Key]=''PROJECT_MANAGEMENT''    AND CAST(W.TaskDueDate AS DATE ) < CAST(GETDATE() AS DATE) 	  AND PT.Title IS NOT NULL	 GROUP BY PT.Title )  SELECT Top 1 [ProjectTeam With Most Overdue Item] FROM CTE ORDER BY OverdueItemCount DESC', [SuggestionText] = N'Which function has the most overdue items?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ''Total Top Down Target'' AS KPI, FORMAT((SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate))/1000000,''N2'') AS ''Value (Million)'' FROM ValueCaptureTopDownEstimates ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are our targets for this engagement?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ''{Username}'' GROUP BY S.Title ', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How are my initiatives doing?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = ''{Username}'' ', [SuggestionText] = N'Are there any risks or issues with initiatives that I’m responsible for?'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ''{Username}'' ', [SuggestionText] = N'How  many initiatives are assigned to me?'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ''{Username}'' ', [SuggestionText] = N'Give my cost reduction initiatives.'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(RevenueGrowthEstimate,0)) [RevenueGrowthTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title = {ProjectTeam}', [SuggestionText] = N'What are the revenue growth targets for Sales & Marketing?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(CostToAchieveEstimate,0)) [CostToAchieveTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title ={ProjectTeam}', [SuggestionText] = N'What are the cost to achieve targets for R&D?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT S.Title [Value Capture Stage] , COUNT(VI.ID) [No. of Initiatives] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} GROUP BY S.Title', [SuggestionText] = N'How many initiatives are there in IT across different stages?'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Approved Initiaves] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} AND S.Title = ''Approved''', [SuggestionText] = N'List IT initiatives that are in approved stage.'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves with Workplan] FROM ValueCaptureInitiatives VI JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WV ON VI.ID = WV.ValueCaptureInitiativeId', [SuggestionText] = N'List initiatives that have workplan item linked to them.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT VI.Title [Initiaves with Risk] FROM ValueCaptureInitiatives VI JOIN RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RV ON VI.ID = RV.ValueCaptureInitiativeId LEFT JOIN RisksAndIssues RI ON RI.ID = RV.RisksAndIssueId WHERE RI.IssueRiskCategory = ''Risk''', [SuggestionText] = N'How many initiatives have Risks linked?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(HeadcountCostReductionEst,0)) [HeadCountCostReductionTarget] FROM [ValueCaptureTopDownEstimates] VT', [SuggestionText] = N'What is the total headcount cost reduction target?'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Non Active Initiaves] FROM ValueCaptureInitiatives VI WHERE ISNULL(VI.IsItemActive ,0) = 0', [SuggestionText] = N'List initiatives that are not active.'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages  VCS ON VCI.ValueCaptureStageId = VCS.ID WHERE VCS.Title = {ValueCaptureStage} ', [SuggestionText] = N'How many initiatives have been realized?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(NonHeadcountCostReductionEst) + SUM(RevenueGrowthEstimate) + SUM(HeadcountCostReductionEst) ''Total Top Down Target Value'' FROM ValueCaptureTopDownEstimates', [SuggestionText] = N'What is the Total Top Down Target Value?'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(RevenueGrowthEstimate) RevenueGrowth,SUM(TotalCostReduction) CostReduction FROM ValueCaptureTopDownEstimates', [SuggestionText] = N'Show my top down target values by cost reduction and revenue growth.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(ID) FROM ValueCaptureInitiatives WHERE IsItemActive = 1', [SuggestionText] = N'How many active initatives are there in my project?'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team] ,CAST(SUM(ISNULL(RevenueGrowthEstimate,0))/1000000 AS FLOAT) [Revenue Growth(in Million)] FROM [ValueCaptureTopDownEstimates] VT 	LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId GROUP BY PT.Title', [SuggestionText] = N'What is the total of revenue growth by team?'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VC.Title AS [ValueCaptureInitiatives with no Owners] FROM ValueCaptureInitiatives VC WHERE ItemOwnerId IS NULL', [SuggestionText] = N'List out initiatives with no owners assigned.'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiative with Workplan at Risk] FROM WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WTVI LEFT JOIN Workplan W ON W.ID = WTVI.WorkPlanId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId LEFT JOIN ValueCaptureInitiatives VI on VI.ID = WTVI.ValueCaptureInitiativeId WHERE S.[KEY] = ''AT_RISK''', [SuggestionText] = N'List out initiatives that have at risk workplan task linked.'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VP.Title AS ValueCapturepriority, COUNT(VC.ValueCapturePriorityId) AS ValueCapturePriorityCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId where ValueCapturePriorityId is not null GROUP BY ValueCapturePriorityId, VP.Title', [SuggestionText] = N'Show me initiatives count by priority.'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS UserProfile, COUNT(VC.ID) AS ValueCaptureOwnerwiseCount FROM ValueCaptureInitiatives VC LEFT JOIN UserProfiles UP ON UP.ID = VC.ItemOwnerId WHERE ItemOwnerId IS NOT NULL GROUP BY ItemOwnerId, UP.Title', [SuggestionText] = N'Show me initiatives count by owner.'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves] FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Title = ''{Username}''', [SuggestionText] = N'List initiatives where I''m assigned as the Owner.'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as IdentifiedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Identified''', [SuggestionText] = N'How many initiatives are identified?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as ApprovedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Approved'' ', [SuggestionText] = N'How many initiatives have been approved?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as ValidatedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Validated'' ', [SuggestionText] = N'How many initiatives have been validated?'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS [Value Capture Stage] ,COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCI.ValueCaptureStageId = VCS.ID GROUP BY VCS.Title', [SuggestionText] = N'Can you provide breakdown of the initiatives across various stages?'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}''', [SuggestionText] = N'What initatives have I been assigned to?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VS.Title ValueCaptureStage FROM ValueCaptureInitiatives VI JOIN ValueCaptureStages VS ON VI.ValueCaptureStageID = VS.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}'' ORDER BY ValueCaptureStage', [SuggestionText] = N'List my initatives by stages.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VT.Title ValueCaptureType FROM ValueCaptureInitiatives VI JOIN ValueCaptureTypes VT ON VI.ValueCaptureStageID = VT.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}'' ORDER BY ValueCaptureType', [SuggestionText] = N'List my initatives by Value Capture Type.'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title,SUM(ISNULL(NonHeadcountCostReductionEst,0)) + SUM(ISNULL(RevenueGrowthEstimate,0)) + SUM(ISNULL(HeadcountCostReductionEst,0)) AS TotalTopDownTarget FROM ValueCaptureTopDownEstimates LEFT JOIN ProjectTeams PT ON PT.ID = ValueCaptureTopDownEstimates.Projectteamid GROUP BY PT.Title', [SuggestionText] = N'What is the top-down target for this project?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS ValueCaptureStage, COUNT(VC.ID) AS ValueCaptureStageCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VC.ValueCaptureStageId GROUP BY ValueCaptureStageId, VCS.Title', [SuggestionText] = N'Show me initiatives count by stage.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title as Functions, COUNT(VC.FunctionId) AS ValueCaptureFunction FROM ValueCaptureInitiatives VC LEFT JOIN Functions f ON f.ID = VC.FunctionId WHERE FunctionId IS NOT NULL GROUP BY FunctionId, F.Title ', [SuggestionText] = N'Show me initiatives count by function.'
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT     CC.Title AS [Cost/Revenue Centers linked to PnL Line Items], CC.Account FROM CostCenters CC     LEFT JOIN ValueCaptureFinancialLineItems Fin         ON CC.FinancialLineItemId = Fin.ID     LEFT JOIN ValueCaptureFinancialLineItemTypes FinType         ON Fin.FinancialLineItemTypeId = FinType.ID WHERE FinType.Title = ''PnL''', [SuggestionText] = N'List all Cost/Revenue Centers linked to PnL Line Items.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(ID) AS [Top Down targets #],        SUM(ISNULL(NonHeadcountCostReductionEst, 0)) AS [Total Non Headcount Cost Reduction Estimate],        SUM(ISNULL(RevenueGrowthEstimate, 0)) AS [Total Revenue Growth Estimate],        SUM(ISNULL(CostToAchieveEstimate, 0)) AS [Total Cost To Achieve Estimate],        SUM(ISNULL(HeadcountCostReductionEst, 0)) AS [Total Headcount Cost Reduction Estimate],        SUM(ISNULL(HeadcountCostReductionEst, 0)) + SUM(ISNULL(NonHeadcountCostReductionEst, 0))        + SUM(ISNULL(RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates ', [SuggestionText] = N'Can you provide Top Down Targets KPIs?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  VCTT.Title, PT.Title, VCTT.CostToAchieveEstimate, VCTT.NonHeadcountCostReductionEst, VCTT.HeadcountCostReductionEst, VCTT.RevenueGrowthEstimate FROM   ValueCaptureTopDownEstimates VCTT  Left Join ProjectTeams PT on PT.ID = VCTT.ProjectTeamId', [SuggestionText] = N'How many top down targets do we have for this project?'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(HeadcountCostReductionEst,0)) AS HeadcountCostReduction FROM ValueCaptureTopDownEstimates', [SuggestionText] = N'What is the Total Headcount Cost Reduction Target?'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(NonHeadcountCostReductionEst,0)) AS NonHeadcountCostReduction FROM  ValueCaptureTopDownEstimates', [SuggestionText] = N'What is the Total Non Headcount Cost Reduction Target?'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(RevenueGrowthEstimate,0)) AS RevenueGrowth FROM  ValueCaptureTopDownEstimates', [SuggestionText] = N'What is the Total Revenue Growth Target?'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(CostToAchieveEstimate,0)) AS CostToAchive FROM  ValueCaptureTopDownEstimates', [SuggestionText] = N'What is the Total Cost to Achieve Target?'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PT.Title ProjectTeams, VBM.Title Benchmark FROM  ValueCaptureCostBenchmarks VBM LEFT JOIN  ProjectTeams PT ON PT.ID = VBM.ProjectTeamId', [SuggestionText] = N'Are there any benchmarks for this project?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Amount as [Client Baseline PnL Amount], A.FinancialLineItem as FinancialLineItem FROM( SELECT F.ID, F.Ordinal, F.Title FinancialLineItem , SUM(C.Amount)/1000000 Amount FROM ValueCaptureFinancialLineItems F LEFT JOIN CostCenters C ON C.FinancialLineItemId = F.ID  GROUP BY F.ID, F.Title, F.Ordinal ) A WHERE A.Amount IS NOT NULL', [SuggestionText] = N'What is my program Client Baseline PnL?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Recommended Initiatives List] FROM     ValueCaptureRecommendedInitiatives', [SuggestionText] = N'List all recommended initiatives for my program.'
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	SUM(a.[Total Top Down Target Value]) AS [Top Down Targets],      SUM(b.[Bottom Up Initiatives Value]) AS [Bottom Up Initiatives Value], 	( SUM(b.[Bottom Up Initiatives Value])-SUM(a.[Total Top Down Target Value])) AS Variance FROM ( SELECT   SUM(ISNULL(HeadcountCostReductionEst, 0)) + SUM(ISNULL(NonHeadcountCostReductionEst, 0))        + SUM(ISNULL(RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates) a, ( select SUM(Amount)*12 as [Bottom Up Initiatives Value]  FROM vwUnpivotEstimates where MYear=''Y3M12'' AND Recurring =1 ) b ', [SuggestionText] = N'Compare Top Down Targets vs Bottom Up Initiatives for my project.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'   SELECT ISNULL(SUM(Act.AMOUNT),0.0) AS [Cumulative One Time Cost Amount] 			   FROM vwUnpivotActuals Act 			   LEFT JOIN ValueCaptureImpactTypes VCIT ON Act.ValueCaptureImpactTypeID=VCIT.ID 			   LEFT JOIN ValueCaptureInitiatives VCI ON Act.ValueCaptureInitiativeID=VCI.ID 			   WHERE VCIT.PositiveOrNegativeValues=''Negative'' 			   AND Act.Recurring<>1 			   AND VCI.Title = ''{ValueCaptureInitiative}''', [SuggestionText] = N'What is cumulative one-time cost for all initiatives?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'  SELECT  	   WP.Title AS [Workplan Items Linked to Value Capture Initiatives]  	   FROM WorkPlan WP 	   LEFT JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WPVC  	             ON WP.ID=WPVC.WorkPlanId 	   LEFT JOIN ValueCaptureInitiatives VCI  	             ON VCI.ID=WPVC.ValueCaptureInitiativeId', [SuggestionText] = N'List all workplan items linked to VC initiatives.'
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID     WHERE          E.Recurring = 1     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID     WHERE          A.Recurring = 1      GROUP BY          A.ValueCaptureInitiativeId, B.Title )   SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , (A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [SuggestionText] = N'List all initiatives that had an estimate annualized run-rate differed by more than 10% from the Actual annualized run-rate.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     CONCAT(''Tracking Period of the Program is from '', CAST(MIN(StartDt) AS DATE), '' to '', CAST(MAX(EndDt) AS DATE)) FROM     ValueCaptureTransactionMonths WHERE     IsItemActive = 1', [SuggestionText] = N'What''s the tracking period for my project?'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''{ProjectTeam}'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''{ProjectTeam}''    ) Act         ON 1 = 1', [SuggestionText] = N'What''s the variance for Legal function?'
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT   	    COUNT(VCI.ID) AS [Initiative Count for Selected Evaluator Quad]  		     FROM ValueCaptureInitiatives VCI 		LEFT JOIN VCInitiativeEvaluatorQuadInfo VCQ  		    ON VCI.VCInitiativeEvaluatorQuadInfoId=VCQ.ID 		       WHERE VCQ.Title= {EvaluatorQuad}', [SuggestionText] = N'Based on Evaluator comparison, how many initiatives have ''High Benefit, High Complexity''?'
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''{ProjectTeam}'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''{ProjectTeam}''     ) Act         ON 1 = 1', [SuggestionText] = N'What is my variance for the IT initiatives?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title Initiatives FROM ValueCaptureInitiatives WHERE ValueCapturePriorityId = 1', [SuggestionText] = N'List all initiatives that requires attention.'
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ISNULL(SUM(Est.Amount), 0.0) AS Estimates,        ISNULL(SUM(Act.Amount), 0.0) AS Actuals,        ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''Finance''           and VCI.Title = ''Initiative 1''           and Est.MYear = ''Y1M1'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''Finance''               AND VCI.Title = ''Initiative 1''               AND MYear = ''Y1M1''     ) Act         ON 1 = 1', [SuggestionText] = N'What is my Y1M1 Estimates, Actuals and Variance for Finance - [Initiative 1]?'
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID 	LEFT JOIN ValueCaptureTransactionMonths VT ON VT.[Key] = E.MYear      WHERE          E.Recurring = 1 		AND (CAST( DATEADD(MM, 3 , GETDATE()) AS DATE) BETWEEN VT.StartDt AND VT.EndDt)     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID  	LEFT JOIN ValueCaptureTransactionMonths VT ON VT.[Key] = A.MYear      WHERE          A.Recurring = 1  		AND (CAST( DATEADD(MM, 3 , GETDATE()) AS DATE) BETWEEN VT.StartDt AND VT.EndDt)     GROUP BY          A.ValueCaptureInitiativeId, B.Title )  SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , ABS(A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [SuggestionText] = N'List initiatives that had an Estimate ARR that differed by 10% (higher or lower) from the Actual ARR for previous month.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS TotalNetSales FROM ValueCaptureEstimates VE LEFT JOIN ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId WHERE FLT.Title = ''PnL'' -- pnl 	AND FL.Title in (''Net sales'') -- net total', [SuggestionText] = N'In the PnL, what is my net sales?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS TotalOperatingPerformance FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL''  AND FLG.Title in (''Total Operating Performance'') ', [SuggestionText] = N'In the PnL, what is my total operating performance?'
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS GrossProfit FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL''  AND FLG.Title in (''Gross Profit'') ', [SuggestionText] = N'In the PnL, what is my gross profit?'
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [EBITA & Net Income] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL'' AND FLG.Title in (''EBITDA'',''Net Income'') ', [SuggestionText] = N'In the PnL, what is my EBITDA and Net Income?'
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Assets] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Total Current Assets'',''Total Non-Current Assets'') ', [SuggestionText] = N'In the Balance Sheet, what is my Total Assets?'
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Liabilities] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Total Current Liabilities'',''Total Non-Current Liabilities'') ', [SuggestionText] = N'In the Balance Sheet, what is my Total Liabilities?'
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Equity] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Equity'') ', [SuggestionText] = N'In the Balance Sheet, what is my Total Equity?'
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	SUM(NonHeadcountCostReductionEst) NonHeadcountCostReduction, 	SUM(HeadcountCostReductionEst) HeadcountCostReduction FROM ValueCaptureTopDownEstimateS', [SuggestionText] = N'What is the total of headcount and non-headcount related cost reduction?'
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH CTE AS  ( 	SELECT ProjectTeamID  	FROM ValueCaptureEstimates E 		LEFT JOIN ValueCaptureInitiatives I ON I.ID = E.ValueCaptureInitiativeId 	EXCEPT 	SELECT ProjectTeamID FROM [ValueCaptureTopDownEstimates] )  SELECT PT.Title [ProjectTeam]  FROM CTE LEFT JOIN ProjectTeams PT ON PT.ID = CTE.ProjectTeamID', [SuggestionText] = N'List out teams that have bottom-up estimates but missing top-down targets.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' DECLARE @CurrentYR NVARCHAR(10), @SQL NVARCHAR(MAX)  SELECT  TOP 1 @CurrentYR = [YEAR] FROM vwValueCaptureTransactionMonths WHERE RelativeYear = YEAR(GETDATE())   SELECT @SQL = '' ;WITH TopDownCTE AS ( 	SELECT  		PT.ID  PROJECTTEAMID 		,PT.Title [ProjectTeam] 		,(SUM(ISNULL(RevenueGrowthEstimate,0))  + SUM(ISNULL(NonHeadcountCostReductionEst,0)) + SUM(ISNULL(HeadcountCostReductionEst,0)))/1000000  [Target] 	FROM [ValueCaptureTopDownEstimates] VT 		LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId 	WHERE PT.ManageValueCapture = 1 	GROUP BY  		PT.ID  		,PT.Title 	UNION ALL 	SELECT  		-1 		,''''Overall'''' 		,(SUM(ISNULL(RevenueGrowthEstimate,0))  + SUM(ISNULL(NonHeadcountCostReductionEst,0)) + SUM(ISNULL(HeadcountCostReductionEst,0)))/1000000  [Target] 	FROM [ValueCaptureTopDownEstimates] VT 		LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId 	WHERE PT.ManageValueCapture = 1 ) , BottomUPCTE AS ( 	SELECT  		VI.PROJECTTEAMID 		,PT.Title [ProjectTeam] 		,(SUM(ISNULL(E.''+@CurrentYR+''M12Estimate,0))*12)/1000000 [Estimate] 	FROM ValueCaptureEstimates E 	 JOIN ValueCaptureInitiatives VI ON VI.ID =E.ValueCaptureInitiativeId 	 LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId 	WHERE  		VI.IsItemActive = 1  		AND E.Recurring = 1  		AND PT.ManageValueCapture = 1 	GROUP BY  		VI.PROJECTTEAMID 		,PT.Title 	UNION ALL 	SELECT  		-1 		,''''Overall'''' 		,(SUM(ISNULL(E.''+@CurrentYR+''M12Estimate,0))*12)/1000000 [Estimate] 	FROM ValueCaptureEstimates E 	 JOIN ValueCaptureInitiatives VI ON VI.ID =E.ValueCaptureInitiativeId 	 LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId 	WHERE  		VI.IsItemActive = 1  		AND E.Recurring = 1  		AND PT.ManageValueCapture = 1 )  SELECT  	COALESCE(T.PROJECTTEAMID,B.PROJECTTEAMID) ProjectTeamID 	,COALESCE(T.ProjectTeam,B.ProjectTeam) ProjectTeam 	,ISNULL(T.[Target],0) [TopDown Target(M)] 	,ISNULL(B.Estimate,0) [BottomUP Estimate(M)] 	,ISNULL(T.[Target],0) - ISNULL(B.Estimate,0) [Variance(M)] FROM TopDownCTE T 	FULL OUTER JOIN BottomUPCTE B ON T.PROJECTTEAMID = B.ProjectTeamId ORDER BY PROJECTTEAMID''  EXEC sp_executesql  @SQL', [SuggestionText] = N'What is the variance between Top down and bottom up? Provide overall variance and variance by the team.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID     WHERE          E.Recurring = 1 		AND E.MYear IN (''Y1M12'')     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID     WHERE          A.Recurring = 1          AND A.MYear IN (''Y1M12'')     GROUP BY          A.ValueCaptureInitiativeId, B.Title )   SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , ABS(A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [SuggestionText] = N'List out initiatives that have an Estimate Annualized Run Rate that differed by 10% (higher or lower) from the Actual Annualized Run Rate for Y1M12.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 143;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      VC.Title AS ValueCaptureInitiativesReadyForApproval FROM      ValueCaptureInitiatives VC WHERE  	ReadyForApproval = 1', [SuggestionText] = N'List out validated initiatives that are ready to be approved.'
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      VI.title AS InitiativeImpactOnPnL FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId WHERE      FL.FinancialLineItemTypeId = 1 GROUP BY      VI.Title', [SuggestionText] = N'List out initiatives that are impacting PnL.'
WHERE [ID] = 145;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 5     Initiatives,Amount FROM( SELECT VI.Title Initiatives ,sum(VE.Amount) Amount FROM      vwUnpivotActuals VE LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN 	ValueCaptureImpactTypes VIT ON VIT.ID = VE.ValueCaptureImpactTypeid GROUP BY      VI.Title,VE.Amount ) A  WHERE A.Amount > 0 ORDER BY  	Amount DESC', [SuggestionText] = N'List out top 5 initiatives that are positively impacting PnL.'
WHERE [ID] = 146;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT TOP 5  		VI.Title [top 5 initiatives with best benefit score] 	FROM  		ValueCaptureInitiatives VI 	LEFT JOIN  		ValueCaptureImpacts VIM ON VIM.ID = VI.ValueCaptureImpactid 	WHERE  		VIM.ID in (1) 	ORDER BY  		VI.BenefitScore DESC', [SuggestionText] = N'List out top 5 initiatives with best benefit score that have high financial impact.'
WHERE [ID] = 147;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT TOP 5  		VI.Title [top 5 most complex initiatives] 	FROM  		ValueCaptureInitiatives VI 	LEFT JOIN  		ValueCaptureImpacts VIM ON VIM.ID = VI.ValueCaptureImpactid 	WHERE  		VIM.ID in (3) 	ORDER BY  		VI.ComplexityScore DESC', [SuggestionText] = N'List out top 5 most complex initiatives that have low financial impact.'
WHERE [ID] = 148;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1 	PT.Title, SUM(ISNULL(HeadcountCostReductionEst,0)) AS MostHeadcountCostReduction FROM  	ValueCaptureTopDownEstimates LEFT JOIN  	ProjectTeams PT ON PT.ID = ValueCaptureTopDownEstimates.Projectteamid GROUP BY  	PT.Title ORDER BY  	SUM(ISNULL(HeadcountCostReductionEst,0)) DESC', [SuggestionText] = N'Which team has most amount of headcount related cost reduction?'
WHERE [ID] = 149;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Iniatives that are Cost Reduction and are Easy for Implementation Ease] FROM ValueCaptureInitiatives VI     LEFT JOIN ValueCaptureTypes VT         ON VT.ID = VI.ValueCaptureTypeID     LEFT JOIN ImplementationEase VD         ON VD.ID = VI.ImplementationEaseID WHERE VT.Title = ''Cost Reduction''       AND VD.Title = ''Easy''', [SuggestionText] = N'List all Iniatives that are Cost Reduction and are Easy for Implementation Ease.'
WHERE [ID] = 150;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VS.Title [Value Capture Stage],        VI.Title [Initiatives that have Talent intiative value drivers] FROM ValueCaptureInitiatives VI     LEFT JOIN ValueCaptureStages VS         ON VS.ID = VI.ValueCaptureStageID     LEFT JOIN ValueCaptureInitiativesToValueCaptureValueDriversForValueCaptureValueDrivers VD         ON VD.ValueCaptureInitiativeId = VI.ID     LEFT JOIN ValueCaptureValueDrivers VV         ON VD.ValueCaptureValueDriverId = VV.ID WHERE VV.Title = ''Talent'' ', [SuggestionText] = N'Provide me a list of Iniatives by stage that have Talent iniative value drivers.'
WHERE [ID] = 151;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	Title as [Value Capture Initiatives with No Owners] FROM 	ValueCaptureInitiatives as VC WHERE 	ItemOwnerId IS NULL', [SuggestionText] = N'Show me all iniatives that do not have an owner.'
WHERE [ID] = 152;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ISNULL(VP.Title, ''No Priority'') AS ValueCapturePriority,     COUNT(VC.ID) AS ValueCapturePriorityCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId --WHERE VC.ValueCapturePriorityId IS NOT NULL GROUP BY VC.ValueCapturePriorityId, VP.Title  ---Stage---  SELECT ISNULL(VS.Title, ''No Stage Assigned'') AS ValueCaptureStage,     COUNT(VC.ID) AS ValueCaptureStageCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VS ON VS.ID = VC.ValueCaptureStageId WHERE VC.ValueCaptureStageId IS NOT NULL GROUP BY VC.ValueCaptureStageId, VS.Title', [SuggestionText] = N'Provide me a count of initiatives by prioirty and stage.'
WHERE [ID] = 153;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT FL.Title [Balance sheet line items that do not have a linked account] FROM ValueCaptureFinancialLineItems FL     LEFT JOIN ValueCaptureFinancialLineItemTypes FLT         ON FLT.ID = FL.FinancialLineItemTypeID     LEFT JOIN BalanceSheetAccounts BLA         ON BLA.FinancialLineItemID = FL.ID WHERE FLT.Title = ''Balance Sheet''       AND BLA.ID IS NULL', [SuggestionText] = N'Show me all Balance sheet line items that do not have a linked account.'
WHERE [ID] = 154;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(E.Amount, 0) * 12) [Run Rate for iniatives in Approved, Committed and Realized] FROM ValueCaptureInitiatives VI     LEFT JOIN vwUnpivotEstimates E         ON E.ValueCaptureInitiativeId = VI.ID     LEFT JOIN ValueCaptureStages VS         ON VS.ID = VI.ValueCaptureStageID WHERE VS.Title IN ( ''Approved'', ''Committed'', ''Realized'' )       AND MYear =       (           select [Key]           from ValueCaptureTransactionMonths           where CAST(EndDt AS date) =           (               SELECT MAX(CAST(EndDt AS date)) FROM ValueCaptureTransactionMonths           )       )', [SuggestionText] = N'What is the Run Rate for iniatives in Approved, Committed and Realized?'
WHERE [ID] = 155;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team],        SUM(T.HeadCountCostReductionEst) [Total target Headcount cost redutciton] FROM ValueCaptureTopDownEstimates T     LEFT JOIN ProjectTeams PT         ON PT.ID = T.ProjectTeamId GROUP BY PT.Title', [SuggestionText] = N'Provide the total Headcount cost redutciton target listed out by project team and provide the number of FTEs.'
WHERE [ID] = 156;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(T.FTEs) [FTEs part of the top down targets for EMEIA] FROM ValueCaptureTopDownEstimates T     LEFT JOIN Regions R         ON R.ID = T.RegionID WHERE R.Title = ''EMEIA''', [SuggestionText] = N'How many FTEs are part of the top down targets for EMEIA?'
WHERE [ID] = 157;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	VI.Title [Initiatives with Benefit score over 75] FROM 	ValueCaptureInitiatives VI LEFT JOIN  	ProjectTeams PT ON PT.ID = VI.ProjectTeamId WHERE 	CAST(BenefitScore AS INT) > 75 	AND PT.Title IN (''HR'')', [SuggestionText] = N'Which HR iniatives have a benefit score over 75?'
WHERE [ID] = 158;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	VI.Title [Initiatives that have Risk associated with them] FROM 	ValueCaptureInitiatives VI LEFT JOIN  	ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageId LEFT JOIN  	RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs VIR ON VIR.ValueCaptureInitiativeId = VI.ID LEFT JOIN 	RisksAndIssues RI ON RI.ID = VIR.RisksAndIssueId WHERE  	RI.IssueRiskCategory IN (''Risk'') 	AND VS.Title IN (''Committed'')', [SuggestionText] = N'List out all Committed Iniatives that have a risk associated with them.'
WHERE [ID] = 159;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	VI.Title [top 5 initiatives with best benefit score] FROM  	ValueCaptureInitiatives VI LEFT JOIN 	ValueCaptureImpactTypes VIT ON VIT.ID = VI.ValueCaptureImpactTypeId LEFT JOIN  	ValueCaptureImpacts VIM ON VIM.ID = VI.ValueCaptureImpactid WHERE  	VIM.[Key] in (''High'') 	AND VIT.PositiveOrNegativeValues IN (''Positive'')', [SuggestionText] = N'List all High Benefit iniatives that are in the Identified Stage.'
WHERE [ID] = 160;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	VI.Title [Initiative is Approved with no Owner] FROM 	ValueCaptureInitiatives VI LEFT JOIN  	ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageId WHERE  	VS.Title IN (''Approved'') 	AND 	VI.ItemOwnerId IS NULL', [SuggestionText] = N'Show me all iniatives that are approved and do not have an owner assigned.'
WHERE [ID] = 161;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	COUNT(VI.ID) FROM 	ValueCaptureInitiatives VI LEFT JOIN 	UserProfiles UP ON UP.ID = VI.ItemOwnerId WHERE  	UP.EMail = ''{Username}''', [SuggestionText] = N'How many iniatives are assigned to me?'
WHERE [ID] = 162;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	PT.Title ProjectTeam,SUM(ISNULL(NonHeadcountCostReductionEst,0)) NonHeadcountCostReductionTarget FROM  	ValueCaptureTopDownEstimates LEFT JOIN  	ProjectTeams PT ON PT.ID = ValueCaptureTopDownEstimates.Projectteamid GROUP BY  	PT.Title', [SuggestionText] = N'Provide the total non-headcount cost reduciton targets listed out by project team.'
WHERE [ID] = 163;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 164;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 165;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' ', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 166;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Day 1 processes? '
WHERE [ID] = 167;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Current State processes? '
WHERE [ID] = 168;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N WHERE NodeTypeId = 3 GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [SuggestionText] = N'Can you provide me number of processes by op model?'
WHERE [ID] = 169;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [SuggestionText] = N'How many processes we have in current state?'
WHERE [ID] = 170;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ', [SuggestionText] = N'How many processes we have in Day1 state?'
WHERE [ID] = 171;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''  AND N.NodeTypeId = 3  AND N.ID NOT IN (   SELECT DISTINCT NTO.NodeId   FROM Nodes N1   LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null  )', [SuggestionText] = N'How many processes don''t have an Owner assigned in Current State?'
WHERE [ID] = 172;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.ID 	,PR.Title FROM Nodes PR JOIN TransactionStates T ON T.ID = PR.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' 	AND PR.NodeTypeId = 3 	AND NOT EXISTS  				(SELECT 1 FROM [NodesToDispositionsForDispositionNew] D WHERE D.NodeId = PR.ID)', [SuggestionText] = N'List processes that don''t have Disposition assigned in Day 1 state.'
WHERE [ID] = 173;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT d.Title FROM Dispositions d', [SuggestionText] = N'List the Disposition options available.'
WHERE [ID] = 174;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [ProcessGroup] ,COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) [Enablers Count] FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 2 GROUP BY N.Title ORDER BY [Enablers Count] DESC', [SuggestionText] = N'How many enablers are associated with each Process Group?'
WHERE [ID] = 175;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title [Disposition] 	,COUNT(SD.SystemId) [SystemCount] FROM Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID GROUP BY D.Title', [SuggestionText] = N'List the total number of systems by disposition.'
WHERE [ID] = 176;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT PR.Title [Process] , D.DispositionId FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId  	LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 	AND D.NodeId IS NULL 	AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'Can you please list down all Day 1 processes where no disposition has been tagged?'
WHERE [ID] = 177;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT 	N.Title [Process]	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 3 GROUP BY N.Title HAVING COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) = 0', [SuggestionText] = N'Can you please list all processes with no Enablers?'
WHERE [ID] = 178;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.Title as MissingInDay1 FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''CURRENT_STATE'' EXCEPT SELECT 	PR.Title [Process] FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'Can you please compare the Current state & day 1 operating model and list all processes which are missing in Day1 as compared to current state?'
WHERE [ID] = 179;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title Enabler, ''Asset'' as Category	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID LEFT JOIN [Assets] A ON A.ID = NA.AssetsId WHERE A.Title IS NOT NULL UNION ALL SELECT DISTINCT F.Title Enabler, ''Facility'' as Category FROM Nodes N LEFT JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID LEFT JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE F.Title IS NOT NULL  UNION ALL SELECT DISTINCT S.Title Enabler , ''System'' as Category FROM Nodes N LEFT JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID LEFT JOIN [Systems] S ON S.ID = NS.SystemsId WHERE S.Title IS NOT NULL  UNION ALL SELECT DISTINCT T.Title Enabler	, ''TPA'' as Category FROM Nodes N LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID LEFT JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId WHERE T.Title IS NOT NULL ', [SuggestionText] = N'What Enablers are we tracking for this project?'
WHERE [ID] = 180;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(s.ID) AS [# Systems present in this functional OP model] FROM Systems s', [SuggestionText] = N'How many Systems are there in this functional op model?'
WHERE [ID] = 181;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(tpa.ID) AS [# TPAs present in this functional OP model] FROM ThirdPartyAgreements tpa', [SuggestionText] = N'How many TPAs are there in this functional op model?'
WHERE [ID] = 182;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ST.Title AS SystemType, COUNT(S.ID) [# Systems by Type] FROM Systems S LEFT JOIN SystemTypes ST ON ST.ID = S.TypeId WHERE S.TypeId IS NOT NULL GROUP BY ST.Title', [SuggestionText] = N'List the number of Systems by Type.'
WHERE [ID] = 183;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT O.Title AS Owners, Count(*) AS [# TPAs by Ownership] FROM ThirdPartyAgreements TP LEFT JOIN Owners O ON O.ID = TP.OwnerID WHERE TP.OwnerID IS NOT NULL GROUP BY O.Title', [SuggestionText] = N'List the number of TPAs by Ownership.'
WHERE [ID] = 184;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [ProcessGroups With No Process] FROM Nodes N WHERE N.nodetypeid = 2 AND ID NOT IN (SELECT ns.NodeParentId FROM Nodes ns)', [SuggestionText] = N'List down all process groups with no process within them.'
WHERE [ID] = 185;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(P.[ID]) AS [Number of Process across Op Model] FROM Nodes P     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = ''Process''', [SuggestionText] = N'List the number of processes across op models.'
WHERE [ID] = 186;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        OMA.Details,        OMA.FieldImpacted,        OMA.OldValue AS [Old Value],        OMA.NewValue AS [New Value],        [OMA.Title] AS [Activity] FROM OperatingModelActivityLog OMA WHERE OMA.Modified >= DATEADD(hh, -1, GETDATE())', [SuggestionText] = N'List history of changes to the op model in the past one hour.'
WHERE [ID] = 187;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        OMA.FieldImpacted,        OMA.OldValue AS [Old Value],        OMA.NewValue AS [New Value],        [OMA.Title] AS [Activity] FROM OperatingModelActivityLog OMA WHERE OMA.FieldImpacted = ''Owner''       AND CAST(OMA.Modified AS DATE) = CAST(GETDATE() AS DATE)', [SuggestionText] = N'List the history of changes to Ownership in the op model today.'
WHERE [ID] = 188;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        OMA.FieldImpacted,        OMA.OldValue AS [Old Value],        OMA.NewValue AS [New Value],        [OMA.Title] AS [Activity] FROM OperatingModelActivityLog OMA WHERE OMA.Title = ''Deleted''       AND DATEPART(wk, CAST(OMA.Modified AS DATE)) = DATEPART(wk, CAST(GETDATE() AS DATE))       AND YEAR(OMA.Modified) = YEAR(GETDATE())', [SuggestionText] = N'List the history of deletes in the op model this week.'
WHERE [ID] = 189;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title [State], N.Title AS OperatingModel FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId  WHERE N.NodeTypeId = 1', [SuggestionText] = N'List the functional operating models across different states.'
WHERE [ID] = 190;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title Opmodel, L.Title LiveNote, Note FROM OperatingModelLiveNotes L LEFT JOIN Nodes N ON N.Id = L.NodeId', [SuggestionText] = N'Are there any Live Notes in this op model?'
WHERE [ID] = 191;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process FROM OperatingModelActivityLog OL  LEFT JOIN Nodes N ON N.ID = Ol.ObjectID WHERE OL.Title = ''Updated'' AND Object = ''Process'' AND (CAST(OL.Modified AS DATE) BETWEEN DATEADD(DAY, -7, CAST(GETDATE()AS DATE))  AND CAST(GETDATE() AS DATE))', [SuggestionText] = N'List down all processes which were updated since last 1 week.'
WHERE [ID] = 192;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process, OldValue, NewValue  FROM OperatingModelActivityLog PL  LEFT JOIN Nodes N ON N.ID = PL.ObjectID  WHERE Object = ''Process'' AND PL.Title = ''Updated'' AND FieldImpacted = ''Title'' AND N.TransactionStateId = 6', [SuggestionText] = N'List down all processes which have been renamed in Day 1 op model.'
WHERE [ID] = 193;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 5     S.Title AS [Systems],     Count(NSS.NodesID) AS [ProcessCount] FROM Nodes N     LEFT JOIN [dbo].[NodesToSystemsForEnablerSystems] NSS         ON N.ID = NSS.NodesId     LEFT JOIN [dbo].[Systems] S         ON NSS.SystemsId = S.ID WHERE N.NodeTypeId = 3 GROUP BY S.Title ORDER BY Count(NSS.NodesID) DESC', [SuggestionText] = N'Please provide top 5 systems that are linked to various processes.'
WHERE [ID] = 194;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [List of processes for CurrentState where ownership is not present] FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''   AND N.NodeTypeId = 3   AND N.ID NOT IN (     SELECT DISTINCT NTO.NodeId     FROM Nodes N1     LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null   )', [SuggestionText] = N'For Current State, list all processes that doesn''t have any ownership.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 195;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT     PR.Title [Process] FROM     Nodes                                    PR     JOIN         TransactionStates                    S             ON S.ID = PR.TransactionStateId     LEFT JOIN         NodesToDispositionsForDispositionNew D             ON D.NodeId = PR.ID WHERE     PR.NodeTypeId = 3     AND D.NodeId IS NULL     AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'For Day 1 Operating Models, list all processes that doesn''t have any dispositions.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 196;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.NodeTypeId,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  ,       --SELECT * FROM PG_Hierarchy         ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID     FROM     (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT TOP 1     Functions AS [Function with highest number of processes] FROM (     SELECT Functions,            COUNT(ID) as [Process Count]     FROM ProcessCTE     GROUP BY Functions ) A order by [Process Count] desc    ', [SuggestionText] = N'Which function has the highest number of processes?'
WHERE [ID] = 197;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Processes with Disposition as TSA] FROM   Nodes   N   LEFT JOIN     NodesToDispositionsForDispositionNew NTD             ON NTD.NodeId = N.ID     LEFT JOIN         Dispositions D  ON NTD.DispositionId = D.ID WHERE     D.Title = ''TSA''     AND N.NodeTypeId = 3 -- To get the list of Processes', [SuggestionText] = N'List down all Processes which have their disposition set as TSA.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 198;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT       N.Title as [List of Processes with No Disposition] FROM Nodes N          WHERE N.NodeTypeId=3 AND N.ID NOT IN   (SELECT DN.NodeId FROM NodesToDispositionsForDispositionNew DN)', [SuggestionText] = N'List down all processes with no Disposition assigned.'
WHERE [ID] = 199;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1)  [No. of Processes] FROM Nodes PR JOIN NODES P ON PR.NodeParentID = P.ID WHERE PR.NodeTypeId = 3 AND P.Title = ''{FunctionName}''', [SuggestionText] = N'How many processes are there in the IT function?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 200;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PR.Title [Process] , COUNT(DISTINCT D.DispositionId) [DispostionCount] FROM Nodes PR JOIN NODES P ON PR.NodeParentID = P.ID LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 AND P.Title = ''COMMERCIAL'' GROUP BY PR.Title HAVING COUNT(DISTINCT D.DispositionId) > 1', [SuggestionText] = N'List processes that have more than 1 disposition in IT.'
WHERE [ID] = 201;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.NodeTypeId,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ),       --SELECT * FROM PG_Hierarchy         ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID AS [ProcessID]     FROM     (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT ISNULL(Geo.Title, ''Not Assigned'') AS [Geographic Coverages],        COUNT(P.ProcessID) AS [Total Number of Process in Real Estate] FROM ProcessCTE P     LEFT JOIN ProcessAttributes PA         ON P.ProcessID = PA.NodeId     LEFT JOIN GeographicCoverages Geo         ON PA.GeographicCoverageId = Geo.ID WHERE P.Functions =''{FunctionName}'' GROUP BY Geo.Title', [SuggestionText] = N'What is total number of processes in Real Estate grouped by geographic coverage?'
WHERE [ID] = 202;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.TransactionStateId,            HierId = HierId + 1     FROM Nodes,          PG_Hierarchy     WHERE Nodes.NodeParentID = PG_Hierarchy.id    ) SELECT DISTINCT      F.Title AS [Functions],     SF.[Title] AS  [Subfunctions] FROM (SELECT * FROM PG_Hierarchy WHERE HierId = 2) F     LEFT JOIN     (SELECT * FROM PG_Hierarchy WHERE HierId = 3) SF         ON F.ID = SF.NodeParentID ORDER BY 1,          2', [SuggestionText] = N'List all functions and sub-functions for functional operating model [Name].', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 203;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     O.Title     AS [Process Owner],     COUNT(N.ID) AS [Process Distribution] FROM     Nodes      N     LEFT JOIN         Owners O             ON N.OwnerId = O.ID WHERE     N.NodeTypeId = 3 GROUP BY     O.Title ', [SuggestionText] = N'Provide process owner distribution for my project.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 204;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.TransactionStateId,            HierId = HierId + 1     FROM Nodes,          PG_Hierarchy     WHERE Nodes.NodeParentID = PG_Hierarchy.id    ) SELECT DISTINCT      SF.[Title] AS  [Subfunctions] FROM (SELECT * FROM PG_Hierarchy WHERE HierId = 2) F     LEFT JOIN     (SELECT * FROM PG_Hierarchy WHERE HierId = 3) SF         ON F.ID = SF.NodeParentID WHERE F.Title=''{FunctionName}'' ORDER BY 1', [SuggestionText] = N'List all sub-functions for Finance.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 205;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.NodeTypeId,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  ,       --SELECT * FROM PG_Hierarchy        ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID AS [ProcessID]     FROM     (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT P.Processes,        ISNULL(S.Title, ''Not Assigned'') AS [Systems],        ISNULL(TPA.Title, ''Not Assigned'') AS [Third Party Agreements] FROM ProcessCTE P     LEFT JOIN NodesToThirdPartyAgreementsForEnablerTpa NTPA         ON P.ProcessID = NTPA.NodesId     LEFT JOIN ThirdPartyAgreements TPA         ON NTPA.ThirdPartyAgreementsId = TPA.ID     LEFT JOIN NodesToSystemsForEnablerSystems NSys         ON NSys.NodesId = P.ProcessID     LEFT JOIN Systems S         ON NSys.SystemsId = S.ID', [SuggestionText] = N'List all details for processes and systems, third party agreements linkages.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 206;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT A.Title Assest,        P.Title LinkedProcess FROM Assets A     LEFT JOIN ProcessAssetLinks PA         ON PA.AssetId = A.ID     LEFT JOIN Nodes P         ON P.ID = PA.ProcessId     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = ''Process''', [SuggestionText] = N'List the Assets and their linked processes.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 207;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title OpModel, BP.Title  EndToEndProcess FROM BusinessProcesses BP  LEFT JOIN Nodes N ON N.ID = BP.NodeId  WHERE N.NodeTypeId = 1', [SuggestionText] = N'Are there any end-to-end business processes in this op model?'
WHERE [ID] = 208;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes  N    WHERE NodeParentID IS NULL           AND TransactionStateID = 8     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ) SELECT N.Title [Function],        NTSS.Title AS [Field Status],        OPS.Title AS [Op Status] FROM NodeTrackers NT     LEFT JOIN NodeTrackerStatuses NTS         ON NTS.NodeTrackerID = NT.ID     JOIN     (SELECT * FROM GetSelectedFunction GSF WHERE HierId = 2 and Title = ''HR'') N         ON N.ID = NT.NodeId     LEFT JOIN NodeTrackerStatusFields NTSS         ON NTSS.ID = NTS.NodeTrackerStatusFieldId     LEFT JOIN OpStatuses OPS         ON OPS.ID = NTS.NodeTrackerStatusStatusId', [SuggestionText] = N'In the Progress Tracker, what is the current status of HR?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 209;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'/*---- What is Automatic Workplan?----*/ SELECT D.Title Disposition,        WP.Title Tasks FROM NodesToWorkPlansForTask NWP     LEFT JOIN Nodes N         ON N.ID = NWP.NodeId     LEFT JOIN WorkPlan WP         ON NWP.WorkPlanId = WP.ID     LEFT JOIN NodesToDispositionsForDispositionNew ND         ON ND.NodeID = N.ID     LEFT JOIN Dispositions D         ON D.ID = ND.DispositionID WHERE N.NodeTypeId = 3', [SuggestionText] = N'In the Automatic Workplan, what are the defualt task lists for different dispostions?'
WHERE [ID] = 210;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes ND    WHERE NodeParentID IS NULL           AND TransactionStateID = 6     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM Nodes ROOT     WHERE ROOT.ID in (  select ID from GetSelectedFunction GSF where HierId = 2 and Title = ''Finance''  )     UNION ALL     SELECT CHILD.NodeParentID, CHILD.ID,   CHILD.Title, PARENT.TITLE,   PARENT.ID, CHILD.NodeTypeId     FROM PG_Hierarchy PARENT PGHP,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ) SELECT COUNT(*) AS [Process with multiple dispositions for Finance] FROM PG_Hierarchy WHERE NodeTypeId = 3       AND ID IN (                     SELECT NodeID                     FROM                     (                         SELECT NodeId,                                Count(DispositionID) As [Disposition Count] FROM NodesToDispositionsForDispositionNew NDDN  GROUP BY NodeId HAVING Count(DispositionID) > 1 ) a  )', [SuggestionText] = N'In Finance, how many processes have multiple dispositions?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 211;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Process which doesn''''t have ownership] FROM  Nodes   N  JOIN  TransactionStates T  ON T.ID = N.TransactionStateId WHERE     OwnerId IS NULL     AND N.NodeTypeId = 3 -- To select Node Type = Process', [SuggestionText] = N'List down all processes with no Owners assigned.'
WHERE [ID] = 212;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes with more than one Disposition] FROM Nodes N WHERE N.NodeTypeId = 3       AND N.ID IN (                       SELECT NodeID                       FROM                       (                           SELECT NodeId,                                  COUNT(DispositionID) AS [Disposition Count]                           FROM NodesToDispositionsForDispositionNew                           GROUP BY NodeId                           HAVING COUNT(DispositionID) > 1                       ) a                   ) ', [SuggestionText] = N'List down all processes with more than one Disposition associated with them.'
WHERE [ID] = 213;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT ID,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes  WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.ID,            Nodes.Title,            Nodes.NodeParentID,            Nodes.TransactionStateId,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, TransactionStateID) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.TransactionStateID     FROM Nodes ROOT     WHERE ROOT.ID IN (                          SELECT ID                          FROM GetSelectedFunction                          WHERE HierId = 2                                AND Title = ''{FunctionName}''                                AND TransactionStateId = 6                      )     UNION ALL     SELECT CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.TransactionStateId     FROM PG_Hierarchy PARENT,          Nodes CHILD     WHERE PARENT.id = CHILD.NodeParentID    ) SELECT Title AS [List of Processes Associated with Legal Function] FROM PG_Hierarchy ORDER BY ID,          title DESC ', [SuggestionText] = N'Can you please list all processes associated with Legal function?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 214;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of all Processes associated with APAC] FROM     Nodes       N     LEFT JOIN         Regions R             ON N.CountryRegionID = R.ID WHERE     n.NodeTypeId = 3     AND R.Title = ''{Region}''', [SuggestionText] = N'Can you please list all processes associated with APAC?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 215;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes  WHERE NodeParentID IS NULL  UNION ALL        SELECT    Nodes.id,Nodes.Title,Nodes.NodeParentID,  Nodes.NodeTypeId,  HierId = HierId+1 FROM Nodes, GetSelectedFunction   where Nodes.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes FROM (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT P.Functions, A.Processes  FROM (SELECT DISTINCT [Processes]  		FROM ProcessCTE 		GROUP BY Processes  		HAVING COUNT(DISTINCT [Functions] ) > 1) A  	LEFT JOIN ProcessCTE P ON P.Processes = A.Processes ', [SuggestionText] = N'Can you please list all processes with same names across different functions?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 216;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     [List of Processes with same name] FROM     (         SELECT             N.Title  AS [List of Processes with same name],             Count(1) AS [Repeat Count]         FROM             Nodes N         WHERE             N.NodeTypeId = 3         GROUP BY             N.Title         HAVING             COUNT(*) > 1     ) a ORDER BY     1 ', [SuggestionText] = N'Can you please list all processes with same name?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 217;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes tagged as ParentCo in Current State with Disposition set as TSA ] FROM Nodes N     LEFT JOIN NodesToOwnersForOwnerNew NTO         on N.ID = NTO.NodeId     LEFT JOIN Owners O         ON O.ID = NTO.OwnerId     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID     LEFT JOIN TransactionStates TS         ON N.TransactionStateId = TS.ID     LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND TS.[Key] = ''CURRENT_STATE''       AND O.Title = ''Parent Co''       AND D.Title = ''TSA''', [SuggestionText] = N'Can you please list the processes which are tagged as ''ParentCo'' in Current state having disposition set as ''TSA''?'
WHERE [ID] = 218;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Systems not tagged in any process] FROM     Systems WHERE     ID NOT IN (                   SELECT DISTINCT                       SystemsId                   FROM                       Nodes                               N                       LEFT JOIN                           NodesToSystemsForEnablerSystems NSS                               ON N.ID = NSS.NodesId  					  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId                    WHERE T.Title= ''Day 1'' AND                        N.NodeTypeId = 3               )', [SuggestionText] = N'can you please list all systems which are not tagged to any process in Day 1 op model?'
WHERE [ID] = 219;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     ISNULL(ST.Title, ''System Type Not Assigned'') AS [SystemsType],     S.Title AS [Systems] FROM     Systems         S     LEFT JOIN         SystemTypes ST             ON S.TypeId = ST.ID', [SuggestionText] = N'Can you please provide of all systems based upon their type?'
WHERE [ID] = 220;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nod  WHERE NodeParentID IS NULL  UNION ALL        SELECT    Nodes.id,Nodes.Title,Nodes.NodeParentID,  Nodes.NodeTypeId,  HierId = HierId+1 FROM Nodes, GetSelectedFunction   where Nodes.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number for Multiple Deposition]  				FROM ProcessCTE 				WHERE ID IN ( 									SELECT NodeID 									FROM 									( 										SELECT NodeId, 											   Count(DispositionID) As [Disposition Count] 										FROM NodesToDispositionsForDispositionNew 										GROUP BY NodeId 										HAVING Count(DispositionID) > 1 									) a 								) 		GROUP BY [Functions] 				ORDER BY  COUNT(*) DESC    ', [SuggestionText] = N'Which function has the highest number of multi disposition processes?'
WHERE [ID] = 221;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nod  WHERE NodeParentID IS NULL   UNION ALL         SELECT    Nodes.id,Nodes.Title,Nodes.NodeParentID,  Nodes.NodeTypeId,  HierId = HierId+1 FROM Nodes, GetSelectedFunction   WHERE Nodes.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2    UNION ALL         SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  WHERE  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS (  SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number of Live Without]  FROM ProcessCTE WHERE ID IN (	SELECT NodeId 				FROM NodesToDispositionsForDispositionNew ND  				LEFT JOIN Dispositions D ON D.ID = DispositionID  				WHERE D.Title = ''Live without''			 				) GROUP BY [Functions] ORDER BY  COUNT(*) DESC', [SuggestionText] = N'which function has the highest number of ''Live without''?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 222;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nod WHERE NodeParentID IS NULL  UNION ALL        SELECT    Nodes.id,Nodes.Title,Nodes.NodeParentID,  Nodes.NodeTypeId,  HierId = HierId+1 FROM Nodes, GetSelectedFunction   where Nodes.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number of Processes tagged to them] , COUNT(*)  [No of Processes] 				FROM ProcessCTE 		GROUP BY [Functions] 				ORDER BY  COUNT(*) DESC    ', [SuggestionText] = N'Which function has the highest number of processes tagged to them? and how many?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 223;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.TransactionStateId,            HierId = HierId + 1     FROM Nodes,          PG_Hierarchy     WHERE Nodes.NodeParentID = PG_Hierarchy.id    ),       ProcessCTE AS (SELECT DISTINCT         F.Title AS [Functions],         f.id AS FunctionID     FROM     (SELECT * FROM PG_Hierarchy WHERE HierId = 2) F         LEFT JOIN         (SELECT * FROM PG_Hierarchy WHERE HierId = 3) SF             ON F.ID = SF.NodeParentID    ) SELECT Top 1     Functions as [Function with Highest Number of Enablers],     [Enablers Count] FROM (     SELECT P.Functions,            --,COUNT(DISTINCT TPA.ID) as TPACount            --,COUNT(DISTINCT S.ID) as SystemCount            --,COUNT(DISTINCT Asset.ID) as AssetCount            --,COUNT(DISTINCT Roles.ID) as RolesCount,            COUNT(DISTINCT TPA.ID) + COUNT(DISTINCT S.ID) + COUNT(DISTINCT Asset.ID) + COUNT(DISTINCT Roles.ID) AS [Enablers Count]     FROM ProcessCTE P         LEFT JOIN NodesToThirdPartyAgreementsForEnablerTpa NTPA --Third Party Aggrements             ON P.FunctionID = NTPA.NodesId         LEFT JOIN ThirdPartyAgreements TPA             ON NTPA.ThirdPartyAgreementsId = TPA.ID         LEFT JOIN NodesToSystemsForEnablerSystems NSys -- Systems             ON NSys.NodesId = P.FunctionID         LEFT JOIN Systems S             ON NSys.SystemsId = S.ID         LEFT JOIN NodesToAssetsForEnablerAssets NAsset --Assets             ON NAsset.NodesId = P.FunctionID         LEFT JOIN Assets Asset             ON Asset.ID = NAsset.AssetsId         LEFT JOIN NodesToRolesForEnablerRoles NRole --Roles             ON NAsset.NodesId = P.FunctionID         LEFT JOIN OrgRolesMaster Roles             ON Roles.ID = NRole.RolesId     GROUP BY P.Functions ) A ORDER BY [Enablers Count] DESC', [SuggestionText] = N'Which function has the highest number of enablers tagged to them? and how many?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 224;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID,  HierId = 1 FROM Nodes  WHERE NodeParentID IS NULL    UNION ALL        SELECT    Nodes.id,Nodes.Title,Nodes.NodeParentID,    HierId = HierId+1 FROM Nodes, GetSelectedFunction   where Nodes.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy(NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM Nodes ROOT   WHERE ROOT.ID in (select ID from GetSelectedFunction where HierId=2 and Title=''Finance & Accounting'')       UNION ALL        SELECT  CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  )   SELECT PG.Title, OldValue, NewValue  FROM PG_Hierarchy PG  JOIN (SELECT PL.ObjectID, OldValue, NewValue 			FROM OperatingModelActivityLog PL 			WHERE Object = ''Process'' AND Title = ''Updated'' AND PL.Modified = ( 			SELECT  Max(Modified) Modified FROM OperatingModelActivityLog  			WHERE ObjectID IN (SELECT ID FROM PG_Hierarchy PG WHERE NodeTypeId=3 )  			AND Object = ''Process'' AND Title = ''Updated'')) A ON A.ObjectID = PG.ID', [SuggestionText] = N'Which process within Finance has been updated most recently and what was the updates?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 225;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Process Associated with Workplan] FROM     Nodes                       N     LEFT JOIN         NodesToWorkPlansForTask NWP             ON N.ID = NWP.NodeId     LEFT JOIN         WorkPlan                WP             ON NWP.WorkPlanId = WP.ID WHERE     N.NodeTypeId = 3', [SuggestionText] = N'How many processes have been associated with a workplan item?'
WHERE [ID] = 226;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(DISTINCT n.ID) AS [No of Process having 2 owners or Dispositions] FROM Nodes n LEFT JOIN (     SELECT NodeId     FROM NodesToDispositionsForDispositionNew  ndd   GROUP BY NodeId     HAVING COUNT(DispositionID) = 2 ) d ON n.ID = d.NodeId LEFT JOIN (     SELECT NodeID     FROM NodesToOwnersForOwnerNew  non   GROUP BY NodeID     HAVING COUNT(OwnerId) = 2 ) o ON n.ID = o.NodeID WHERE n.NodeTypeId = 3 AND (d.NodeId IS NOT NULL OR o.NodeID IS NOT NULL)', [SuggestionText] = N'How many processes have 2 owners or dispositions? '
WHERE [ID] = 227;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	COUNT(SD.SystemId) [No of Systems are dispositioned rebuild] FROM  Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID WHERE D.Title = ''Rebuild''', [SuggestionText] = N'How many systems are dispositoned Rebuild?'
WHERE [ID] = 228;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT O.Title [Owners], COUNT(N.ID) [No of Processes]  FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID  LEFT JOIN NodesToOwnersForOwnerNew NOS ON NOS.NodeId = N.ID  LEFT JOIN Owners O ON O.ID = NOS.OwnerId  WHERE NT.Title = ''Process''  GROUP BY O.Title', [SuggestionText] = N'Provide a count of all processes by owner.'
WHERE [ID] = 229;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	R.Title Regions 	, COUNT(D.DispositionId) [Count of Disposition]  FROM NodesToDispositionsForDispositionNew D     JOIN Nodes N ON D.NodeId = N.ID 	JOIN TransactionStates S ON S.ID = N.TransactionStateId  	LEFT JOIN NodeTypes NT ON NT.ID = N.NodeTypeId  	LEFT JOIN Regions R ON R.ID = N.CountryRegionID  WHERE NT.Title = ''Process''  	AND S.[Key] = ''DAY_ONE'' GROUP BY R.Title', [SuggestionText] = N'Show me the count of dispositions in Day 1 model by assigned region.'
WHERE [ID] = 230;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Processes with no owner assigned] FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process''    AND N.ID NOT IN (     SELECT DISTINCT NTO.NodeId     FROM Nodes N1     LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	WHERE NTO.NodeId is not null   )', [SuggestionText] = N'List all processes that do not have an owner assigned.'
WHERE [ID] = 231;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title AS [List of Teams with Disposition set as Unidentified] FROM Nodes N     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID 	LEFT JOIN  NodesToProjectTeamsForProjectTeam NP 	    ON N.ID = NP.NodesId  	LEFT JOIN ProjectTeams PT 	    ON PT.ID = NP.ProjectTeamsId      LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND D.Title = ''Unidentified''', [SuggestionText] = N'Which teams have processes that are disposition ''Unidentified''?'
WHERE [ID] = 232;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Processes with total headcount greater than 0] FROM Nodes N     LEFT JOIN vwHeadcount H         ON H.NodeId = N.ID     LEFT JOIN Nodetypes NT         ON NT.ID = N.NodeTypeId GROUP BY N.Title HAVING SUM(ISNULL(H.TotalHeadCount, 0)) > 0', [SuggestionText] = N'List all processes with total headcount greater than 0.'
WHERE [ID] = 233;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title [Facilities in North America that are leased or owned]   FROM Facilities F  LEFT JOIN FacilityOccupancyTypes FT ON FT.ID = F.FacilityOccupancyTypeID  LEFT JOIN Countries C ON C.ID = F.CountryID  LEFT JOIN Regions R ON R.ID = C.CountryRegionID WHERE FT.Title IN (''Leased'', ''Owned'') AND R.Title = ''North America''', [SuggestionText] = N'List all Facilities in North America that are leased or owned.'
WHERE [ID] = 234;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(N.ID) [No of Proccesses to which TPA is assigned] FROM NodesToThirdPartyAgreementsForEnablerTpa NTP  INNER JOIN Nodes N ON N.ID = NTP.NodesId  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process''', [SuggestionText] = N'How many processes have a TPA assigned to them? '
WHERE [ID] = 235;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Enabler [Enabler with linked processes] FROM( SELECT DISTINCT A.Title Enabler 	 FROM Nodes N LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID INNER JOIN [Assets] A ON A.ID = NA.AssetsId  WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT F.Title Enabler FROM Nodes N LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID INNER JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT S.Title Enabler  FROM Nodes N  LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID INNER JOIN [Systems] S ON S.ID = NS.SystemsId WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT T.Title Enabler	 FROM Nodes N  LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID INNER JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId  WHERE NTT.Title = ''Process''   ) A', [SuggestionText] = N'Show me all enablers that have a linked process.'
WHERE [ID] = 236;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes with Disposition set as TSA ] FROM Nodes N     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID     LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND D.Title = ''TSA''', [SuggestionText] = N'List all processes that have the disposition TSA.'
WHERE [ID] = 237;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(N.ID) AS [No of Processes are Live Without]  FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process'' AND N.ID IN (	SELECT NodeId 				FROM NodesToDispositionsForDispositionNew ND  				LEFT JOIN Dispositions D ON D.ID = DispositionID  				WHERE D.Title = ''Live without''			 				) ', [SuggestionText] = N'How many processes are Live without? '
WHERE [ID] = 238;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Systems being used by Project Team and Process Group] FROM     Systems WHERE  ID IN (                   SELECT DISTINCT                       SystemsId                   FROM                       Nodes N                       LEFT JOIN NodesToSystemsForEnablerSystems NSS                        ON N.ID = NSS.NodesId  					  LEFT JOIN  NodesToProjectTeamsForProjectTeam NP 					  ON N.ID = NP.NodesId  					  LEFT JOIN NodeTypes NT ON NT.ID = N.NodeTypeId                    WHERE  NT.Title IN (''ProcessGroup'')               )	', [SuggestionText] = N'List out the systems being used by Project Team and Process Group.'
WHERE [ID] = 239;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Process groups are not started on Followup Calls for Current State] FROM Nodes N     LEFT JOIN Nodetypes NT         ON NT.ID = N.NodeTypeId     LEFT JOIN NodeTrackers NTC         ON NTC.NodeID = N.ID     LEFT JOIN NodeTrackerStatuses NTS         ON NTS.NodeTrackerID = NTC.ID     LEFT JOIN TransactionStates T         ON T.ID = N.TransactionStateID WHERE N.NodeOnTracker = 1       AND NT.Title = ''Process Group''       AND T.[Key] = ''CURRENT_STATE''       AND N.ID NOT IN (SELECT N.ID ProcessGroupID   FROM Nodes N  LEFT JOIN Nodetypes NT ON NT.ID = N.NodeTypeId LEFT JOIN NodeTrackers NTC  ON NTC.NodeID = N.ID LEFT JOIN NodeTrackerStatuses NTS ON NTS.NodeTrackerID = NTC.ID  LEFT JOIN TransactionStates T  ON T.ID = N.TransactionStateID   WHERE N.NodeOnTracker = 1 AND NT.Title = ''Process Group'' AND T.[Key] = ''CURRENT_STATE'' AND NTS.Title = ''FollowUp Call'')', [SuggestionText] = N'Which process groups are not started on Followup Calls for Current State?'
WHERE [ID] = 240;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL      UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ) SELECT O.Title [Client Owner for HR] FROM GetSelectedFunction N 	LEFT JOIN NodesToOwnersForOwnerNew NOS ON NOS.NodeId = N.ID  	LEFT JOIN Owners O ON O.ID = NOS.OwnerId  WHERE N.HierId = 2 AND N.Title = ''HR''', [SuggestionText] = N'Who is the Client owner for HR?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 241;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 242;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the count of TSAs by sub function.'
WHERE [ID] = 243;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', [SuggestionText] = N'Give me the list of TSAs by Provider.'
WHERE [ID] = 244;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', [SuggestionText] = N'Give me the list of TSAs by Receiver.'
WHERE [ID] = 245;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', [SuggestionText] = N'Can you provide me list of TSAs by phases?'
WHERE [ID] = 246;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', [SuggestionText] = N'Show me the breakdown of TSAs by duration.'
WHERE [ID] = 247;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', [SuggestionText] = N'How many TSAs does each team have?'
WHERE [ID] = 248;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    TST.Title as [Phase],    COUNT(TC.ID) AS [# TSAs across different phases] FROM    TSAItems TC    LEFT JOIN TSAPhases TST ON TC.PhaseID = TST.ID  Group BY    TST.Title ', [SuggestionText] = N'List the number of TSAs across different phases.'
WHERE [ID] = 249;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    T.Title PendingTSAItems  FROM    TSAItems T    JOIN TSAStatuses TS ON T.TSAItemTSAStatusId = TS.ID  WHERE    T.AuthorId = ''{Username}''    AND TS.[key] = ''ACTIVE'' ', [SuggestionText] = N'How many pending TSA items do I have?'
WHERE [ID] = 250;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    tb.Title as [Billing Period Name],    tb.DeadlineDate as [Contribution Deadlines]  FROM    TSABillingPeriods tb', [SuggestionText] = N'In Cost Tracking, how is my billing periods setup?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 251;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT    tp.Title AS [TSA Phases]  FROM TSAPhases tp', [SuggestionText] = N'What are the different TSA phases in my project?'
WHERE [ID] = 252;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ProviderLegalEntityId = L.ID where  L.ServiceLocation is not null UNION  SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ReceiverLegalEntityId = L.ID   where  L.ServiceLocation is not null ', [SuggestionText] = N'List the TSA service locations in my project.'
WHERE [ID] = 253;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs],     s.Title   AS [TSA Statuses] FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID     LEFT JOIN         Functions   F             ON TSA.FunctionId = F.ID WHERE     F.Title = ''{FunctionName}''', [SuggestionText] = N'List the TSAs for the Finance fucntion with their status.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 254;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'DECLARE @UserProfiles int; SELECT    @UserProfiles = ID  FROM    UserProfiles up WHERE    EMail = ''{Username}''; WITH TEMPCTE AS (   SELECT      tr.FunctionId,      tr.SubFunctionId    FROM      TSAReviewers tr   WHERE      tr.ProviderApproverId = @UserProfiles      OR tr.RecipientApproverId = @UserProfiles )  SELECT    TSA.Title as [List of TSA to be reviewed] FROM    TSAItems TSA    JOIN TEMPCTE ON TSA.FunctionId = TEMPCTE.FunctionId    AND tsa.SubFunctionId = TEMPCTE.SubFunctionId    JOIN TSAPhases TP ON TSA.PhaseId = TP.ID  WHERE    TP.[Key] IN (''ALIGNMENT'', ''APPROVAL''); ', [SuggestionText] = N'List the TSAs that I need to review.'
WHERE [ID] = 255;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT   tsa.Title DefaultCurrency FROM  TSACurrencies tsa WHERE tsa.CurrencyCode =''{CurrencyCode}''', [SuggestionText] = N'What is the default currency setting?'
WHERE [ID] = 256;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT   tsa.CurrencyExchangeRateToUSD  FROM  TSACurrencies tsa WHERE tsa.CurrencyCode ={CurrencyCode}', [SuggestionText] = N'List the exchange rates we setup for the default currency on my project.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 257;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    DISTINCT F.Title as [Functions To Be Configured] FROM    TSAReviewers TR    LEFT JOIN Functions F on F.ID = TR.FunctionId ', [SuggestionText] = N'In Reviewer Assignments, what functions require to be configured properly?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 258;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    DISTINCT SF.Title as [SubFunctions To Be Configured] FROM    TSAReviewers TR    LEFT JOIN SubFunctions SF on SF.ID = TR.SubFunctionId ', [SuggestionText] = N'In Reviewer Assignments, what sub-functions need to be configured for my project?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 259;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT CASE WHEN SUM(DeadlineReminder) > 0 THEN ''Yes, email reminder before the deadline is setup'' ELSE ''No, email reminder before the deadline is setup'' END AS [Send an email reminder before the deadline?] FROM( SELECT     tsa.Title,     CAST( tsa.DeadlineReminder AS INT) DeadlineReminder FROM     TSABillingPeriods tsa WHERE     DeadlineReminder = 1) A', [SuggestionText] = N'In Billing Periods, have we setup email reminder beofre deadline?'
WHERE [ID] = 260;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     tsa.Title        AS [Billing Period Name],     tsa.DeadlineDate AS [Contribution Deadlines] FROM     TSABillingPeriods tsa', [SuggestionText] = N'List the billing periods with their Contribution deadlines.'
WHERE [ID] = 261;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT CASE WHEN SUM(SendEmailImmediately) > 0 THEN ''Yes, notifying data contributors by email '' ELSE ''No, not notifying data contributors by email '' END AS [Notify data contributors by email ?] FROM( SELECT     tbp.Title                AS [Billing Period Name],     CAST(tbp.SendEmailImmediately AS INT) SendEmailImmediately FROM     TSABillingPeriods tbp WHERE     tbp.SendEmailImmediately = 1) A', [SuggestionText] = N'Are we not notifying data contributors by email for any billing periods?'
WHERE [ID] = 262;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     f.title   AS [Functions],     (t.TSAItemFTECostForServiceDurationUSD + t.MarkupOnFTECostUSD + t.ExternalMaterialCostUSD) AS [TSA Costs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND t.Duration IS NOT NULL', [SuggestionText] = N'What my TSA costs by  function?'
WHERE [ID] = 263;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'-- Total TSA Costs over Month SELECT month_year AS [By Month],        ROUND((SUM(fte_cost_per_month) + SUM(nonfte_cost_per_month)), 2) AS [Total TSA Costs Over Month] FROM vwTSACostWaterfall tcw GROUP BY date_,          month_year   -- Total TSA Costs over Quarter SELECT [quarter] AS [By Quarter],        ROUND((SUM(fte_cost_per_month) + SUM(nonfte_cost_per_month)), 2) AS [Total TSA Costs Over Quarter] FROM vwTSACostWaterfall tcwf GROUP BY Concat(Year(date_), Datepart(quarter, date_)),          [quarter]   -- Total TSA Costs over Year SELECT [year] AS [By Year],        ROUND((SUM(fte_cost_per_month) + SUM(nonfte_cost_per_month)), 2) AS [Total TSA Costs Over Year] FROM vwTSACostWaterfall vtcwf GROUP BY [year]', [SuggestionText] = N'What is my total TSA costs over time?'
WHERE [ID] = 264;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs] FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID WHERE          S.Title<>''{TSAStatus}''', [SuggestionText] = N'How many TSAs left to sign?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 265;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     COUNT(TSA.ID) AS [# TSAs signed by Function],     F.Title       AS Functions FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID     LEFT JOIN         Functions   F             ON TSA.FunctionId = F.ID WHERE     S.Title = ''{TSAStatus}'' GROUP BY     F.Title', [SuggestionText] = N'List number of signed TSAs by function.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 266;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     [tcwf.year]                               AS [By Year],     ROUND(SUM(tcwf.fte_cost_per_month), 2)    AS [TSA FTE Cost for Selected Year],     ROUND(SUM(tcwf.nonfte_cost_per_month), 2) AS [TSA Non-FTE Cost for Selected Year] FROM     vwTSACostWaterfall tcwf WHERE      [tcwf.year] = ''{Year}'' GROUP BY     [tcwf.year]', [SuggestionText] = N'Break down the total TSA cost for this year by FTE and Non-FTE cost.'
WHERE [ID] = 267;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     tp.Title AS [TSA Stages] FROM     TSAPhases tp ORDER BY     Ordinal', [SuggestionText] = N'List out stages that are preconfigured on this instance for TSA lifecycle.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 268;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Stg.Title AS [Stage Name],        COUNT(TSA.ID) AS [# TSAs Identified] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] = ''IDENTIFICATION'' GROUP BY Stg.Title', [SuggestionText] = N'How many TSA have been identified?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 269;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     ti.Title AS [TSAs that have duration for more than 18 months] FROM     TSAItems ti WHERE     ti.Duration > 18', [SuggestionText] = N'List out TSAs that have duration for more than 18 months.'
WHERE [ID] = 270;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs that are ready to be approved] FROM     TSAItems      TSA     LEFT JOIN         TSAPhases Stg             ON TSA.PhaseId = Stg.ID WHERE     Stg.[Key] IN ( ''ALIGNMENT'',''APPROVAL'') ', [SuggestionText] = N'List out TSAs are that are ready to be approved.'
WHERE [ID] = 271;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     f.title AS [Functions],     SUM((t.TSAItemFTECostForServiceDurationUSD + t.MarkupOnFTECostUSD + t.ExternalMaterialCostUSD) )AS [TSA Costs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND t.Duration IS NOT NULL GROUP BY  f.title', [SuggestionText] = N'What is the total of TSA cost by function?'
WHERE [ID] = 272;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Open Risks] FROM TSAItems TSA     LEFT JOIN RisksAndIssues RI         ON TSA.ID = RI.TSAItemId     LEFT JOIN Statuses S         ON RI.ProgressId = S.ID WHERE S.[Key] NOT IN ( ''COMPLETED'', ''CLOSED'' )', [SuggestionText] = N'List out TSA with Open risks.'
WHERE [ID] = 273;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS [Buyer Side Reviewer for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.RecipientApproverID = UP.ID WHERE F.Title =''{FunctionName}''', [SuggestionText] = N'Who is the buy side reviewer for finance TSAs?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 274;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS [Buyer Side Reviewer for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.ProviderApproverId = UP.ID WHERE F.Title =''{FunctionName}''', [SuggestionText] = N'Who is the sell side reviewer for finance TSAs?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 275;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS [Approver for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.RecipientApproverID = UP.ID WHERE F.Title = ''{FunctionName}''  UNION   SELECT UP.Title AS [Approver for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.ProviderApproverId = UP.ID WHERE F.Title =''{FunctionName}''', [SuggestionText] = N'Who is the approver for finance TSAs?'
WHERE [ID] = 276;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Behind Schedule Tasks Linked] FROM TSAItems TSA     LEFT JOIN Workplan WP         ON TSA.ID = WP.TSAItemId     LEFT JOIN Statuses S         ON WP.ProgressId = S.ID WHERE WP.WorkPlanTaskType = ''Task''       AND S.[Key] = ''BEHIND_SCHEDULE''', [SuggestionText] = N'List out TSAs with behind schedule tasks linked.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 277;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT f.title AS [Functions],        COUNT(t.ID) AS [TSAs Count],        (SUM(t.TSAItemFTECostForServiceDurationUSD) + SUM(t.MarkupOnFTECostUSD) + SUM(t.ExternalMaterialCostUSD)) AS [TSAs Costs] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE TSADisp.Title = ''rTSA (reverse TSA)''       AND s.title <> ''Canceled''       AND t.Duration IS NOT NULL GROUP BY f.title', [SuggestionText] = N'Show me the count and cost of reverse TSAs by function.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 278;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [TSA Items in Alignment phase for IT] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID WHERE Stg.[Key] = ''ALIGNMENT''       AND F.Title = ''{FunctionName}''', [SuggestionText] = N'How many items are in the allignment phase for IT?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 279;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [# TSA items in the repository which have been modified in the last 7 days] FROM TSAItems TSA     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND CAST(TSA.Modified AS DATE)       BETWEEN CAST(GETDATE() - 7 AS DATE) AND CAST(GETDATE() AS DATE) ', [SuggestionText] = N'How many items in the repository have been modified in the last 7 days?'
WHERE [ID] = 280;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [# TSA items in the repository which have been created in the last 5 days] FROM TSAItems TSA     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND CAST(TSA.Created AS DATE)       BETWEEN CAST(GETDATE() - 5 AS DATE) AND CAST(GETDATE() AS DATE) ', [SuggestionText] = N'How many new items s in the repository have been created in the last 5 days?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 281;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AVG(t.Duration) AS [Average Duration for IT TSAs],        (SUM(t.TSAItemFTECostForServiceDurationUSD) + SUM(t.MarkupOnFTECostUSD) + SUM(t.ExternalMaterialCostUSD)) AS [Cost for IT TSAs] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id WHERE s.title <> ''Canceled''       AND t.Duration IS NOT NULL       AND f.Title = ''IT'' GROUP BY f.title', [SuggestionText] = N'What is the average duration and cost for IT TSAs?'
WHERE [ID] = 282;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Behind Schedule / At Risk Tasks Linked] FROM TSAItems TSA     LEFT JOIN Workplan WP         ON TSA.ID = WP.TSAItemId     LEFT JOIN Statuses S         ON WP.WorkPlanTaskStatusId = S.ID WHERE WP.WorkPlanTaskType = ''Task''       AND S.[Key] IN (''BEHIND_SCHEDULE'',''AT_RISK'')', [SuggestionText] = N'Show me all TSAs that have a linked task that is At Risk or Behind Schedule.'
WHERE [ID] = 283;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSA Items that need review] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] IN ( ''ALIGNMENT'', ''APPROVAL'' )', [SuggestionText] = N'List all TSAs that need review.'
WHERE [ID] = 284;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title as [TSAs that need to be signed along with Item Owner], t.TSAItemPersonInCharge as [Item Owner] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]=''SIGNED''', [SuggestionText] = N'List all TSAs that need to be signed along with the item owner.'
WHERE [ID] = 285;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [TSAs and rTSAs that have a markup greater than 5%]    ,TSADisp.Title AS [TSA / rTSA] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     	LEFT OUTER JOIN 	    TSADay1Dispositions TSADisp  		    ON t.TSADay1DispositionId=TSADisp.ID WHERE         s.title <> ''Canceled'' 	  AND t.TSAItemMarkup >0.05', [SuggestionText] = N'Show me all TSAs and rTSAs that have a markup greater than 5%.'
WHERE [ID] = 286;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs are in a local currency that is not US dollar] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSACurrencies TSACurr         ON t.TSAItemLocalCurrencyId = TSACurr.ID     LEFT OUTER JOIN Currencies Curr         ON TSACurr.CurrencyID = Curr.ID WHERE Curr.Title <> ''USD ($)''       AND s.title <> ''Canceled''', [SuggestionText] = N'How many TSAs are in a local currency that is not US dollar?'
WHERE [ID] = 287;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title as [Inactive TSAs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''ACTIVE'' ', [SuggestionText] = N'List out all Inactive TSAs.'
WHERE [ID] = 288;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT t.Title as [TSAs that have duration less than 2 months] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''CANCELED'' AND t.Duration<2', [SuggestionText] = N'List All TSAs where the duration is less than 2 months.'
WHERE [ID] = 289;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT t.Title as [TSAs that have duration less than 2 months] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''CANCELED'' AND t.Duration>10', [SuggestionText] = N'List all TSAs where the duration is more than 10 months.'
WHERE [ID] = 290;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs due in next 45days] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id WHERE CAST(t.TSAItemEndDate AS DATE)       BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE() + 45 AS DATE)       AND s.title <> ''Canceled''', [SuggestionText] = N'List All TSAs due in next 45days.'
WHERE [ID] = 291;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [TSAs that have a markup above 1%] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.TSAItemMarkup >0.01', [SuggestionText] = N'List all TSAs where the markup is above 1%.'
WHERE [ID] = 292;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     t.Title AS [TSAs where Provider is not tagged] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE     s.title <> ''Canceled''     AND t.ProviderLegalEntityId IS NULL', [SuggestionText] = N'List all TSAs where provider is not tagged.'
WHERE [ID] = 293;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT    t.Title AS [TSAs where Receiver is not tagged] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.ReceiverLegalEntityId IS NULL', [SuggestionText] = N'List all TSAs where receiver is not tagged.'
WHERE [ID] = 294;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [Mixed Price Type TSAs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id   	LEFT OUTER JOIN 	PriceTypes Pric  	        ON t.TSAItemPriceTypeID=Pric.ID WHERE         s.title <> ''Canceled'' 	  AND Pric.Title=''Mixed price''', [SuggestionText] = N'List all mixed price type TSAs.'
WHERE [ID] = 295;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [List all TSAs which are not getting settled in USD]    FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     	LEFT OUTER JOIN 	    TSACurrencies TSACurr  		    ON t.TSAItemLocalCurrencyId=TSACurr.ID 	LEFT OUTER JOIN Currencies Curr 	        ON TSACurr.CurrencyID=Curr.ID WHERE         Curr.Title<>''USD ($)''  	  AND s.title <> ''Canceled''', [SuggestionText] = N'List all TSAs which are not getting settled n USD.'
WHERE [ID] = 296;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [TSAs where User has provided comments] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.Comments IS NOT NULL', [SuggestionText] = N'List all TSAs where User has provided comments.'
WHERE [ID] = 297;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     ISNULL(Stg.Title, ''No Phase Assigned'') AS [Phase],     (TSA.Title)                          AS [ TSAs title] FROM     TSAItems      TSA     LEFT JOIN         TSAPhases Stg             ON TSA.PhaseId = Stg.ID', [SuggestionText] = N'List all TSAs per phase.'
WHERE [ID] = 298;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     t.Title AS [TSAs assigned to function due in next 30 days] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND f.Title=''{FunctionName}'' 	AND CAST(t.TSAItemEndDate AS DATE) BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE()+30 AS DATE)', [SuggestionText] = N'List All TSAs assigned to IT due in next 30 days.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 299;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs assigned to IT due in next 30 days] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id WHERE s.title <> ''Canceled''       AND f.Title = ''Finance''       AND CAST(t.TSAItemEndDate AS DATE)       BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE() + 15 AS DATE)       AND t.TSAItemMarkup <= 0.01       AND t.ReceiverLegalEntityId IS NULL', [SuggestionText] = N'List All TSAs assigned to finance due in next 15 days where markup is below 1% and has no receiver tagged.'
WHERE [ID] = 300;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs Items which are tagged as rTSA for Day 1 disposition] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE s.title <> ''Canceled''       AND TSADisp.Title = ''rTSA (reverse TSA)''', [SuggestionText] = N'List all Items which are tagged as rTSA for Day 1 disposition.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 301;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSA Items where total number of FTEs providing service is greater than 5] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE s.title <> ''Canceled''       AND t.TSAItemNoOfFTEProvidingService > 5', [SuggestionText] = N'List all Items where total number of FTEs providing service is greater than 5.'
WHERE [ID] = 302;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSA items which have been in Detailing phase for more than 15 days] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] = ''DETAILING''       AND CAST(TSA.Modified AS DATE) < CAST(GETDATE() - 15 AS DATE)', [SuggestionText] = N'List all items which have been in Detailing phase for more than 15 days.'
WHERE [ID] = 303;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [Finance related TSA items with relevant SLA details],        ISNULL(TSA.TSAItemSLAName, '' '') AS [SLA Details] FROM TSAItems TSA     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND F.Title = ''Finance''', [SuggestionText] = N'List all finance related items with relevant SLA details.'
WHERE [ID] = 304;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSA items where external cost is greater than FTE cost for entire duration] FROM TSAItems TSA     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND (TSA.TSAItemExternalMaterialCost > TSA.TSAItemFTECostForServiceDuration)', [SuggestionText] = N'List all items where external cost is greater than FTE cost for entire duration.'
WHERE [ID] = 305;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] != ''CAPITAL_EDGE_SUPPORT'' order by TT.Title ', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the project teams that make up the governance structure for this engagement?'
WHERE [ID] = 306;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = ''Milestone'' GROUP BY pt.Title ', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How many milestones does each team have?'
WHERE [ID] = 307;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', [SuggestionText] = N'How many interdependencies does each team have?'
WHERE [ID] = 308;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(1) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = ''Risk'' GROUP BY pt.Title ', [SuggestionText] = N'How many risks does each team have?'
WHERE [ID] = 309;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 310;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 311;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 312;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 313;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do I set alerts/send email for various item owners?'
WHERE [ID] = 314;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do I add a client user to the PMO app?'
WHERE [ID] = 315;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 316;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past.'
WHERE [ID] = 317;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 318;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 319;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 320;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 321;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 322;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 323;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 324;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past.'
WHERE [ID] = 325;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 326;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 327;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 328;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 329;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 330;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past.'
WHERE [ID] = 331;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 332;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 333;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 334;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past.'
WHERE [ID] = 335;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 336;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 337;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 338;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 339;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 340;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 341;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 342;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 343;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 344;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 345;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 346;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 347;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 348;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best strategies for improving a company in the {Sector} sector?'
WHERE [ID] = 349;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are recent examples of improvements being made in the {Sector} sector?'
WHERE [ID] = 350;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 351;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 352;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 353;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What is a normative operating model for the {Sector} sector?'
WHERE [ID] = 354;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are key considerations when defining an operating model for a {Sector} sector company?'
WHERE [ID] = 355;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 356;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the corporate functions typically involved in the {Sector} sector?'
WHERE [ID] = 357;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 358;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 359;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provides templates of TSA.'
WHERE [ID] = 360;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What should be the typical duration for TSA?'
WHERE [ID] = 361;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Things I should keep in mind for longer duration TSAs?'
WHERE [ID] = 362;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 363;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 364;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 365;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 366;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 367;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240618140054_AddTeamTypeInSuggestionQuery', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        OMA.Details,        OMA.FieldImpacted,        OMA.OldValue AS [Old Value],        OMA.NewValue AS [New Value],        OMA.Title AS [Activity] FROM OperatingModelActivityLog OMA WHERE OMA.Modified >= DATEADD(hh, -1, GETDATE())'
WHERE [ID] = 187;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        OMA.FieldImpacted,        OMA.OldValue AS [Old Value],        OMA.NewValue AS [New Value],        OMA.Title AS [Activity] FROM OperatingModelActivityLog OMA WHERE OMA.FieldImpacted = ''Owner''       AND CAST(OMA.Modified AS DATE) = CAST(GETDATE() AS DATE)'
WHERE [ID] = 188;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        OMA.FieldImpacted,        OMA.OldValue AS [Old Value],        OMA.NewValue AS [New Value],        OMA.Title AS [Activity] FROM OperatingModelActivityLog OMA WHERE OMA.Title = ''Deleted''       AND DATEPART(wk, CAST(OMA.Modified AS DATE)) = DATEPART(wk, CAST(GETDATE() AS DATE))       AND YEAR(OMA.Modified) = YEAR(GETDATE())'
WHERE [ID] = 189;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes ND    WHERE NodeParentID IS NULL           AND TransactionStateID = 6     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM Nodes ROOT     WHERE ROOT.ID in (  select ID from GetSelectedFunction GSF where HierId = 2 and Title = ''Finance''  )     UNION ALL     SELECT CHILD.NodeParentID, CHILD.ID,   CHILD.Title, PARENT.TITLE,   PARENT.ID, CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ) SELECT COUNT(*) AS [Process with multiple dispositions for Finance] FROM PG_Hierarchy WHERE NodeTypeId = 3       AND ID IN (                     SELECT NodeID                     FROM                     (                         SELECT NodeId,                                Count(DispositionID) As [Disposition Count] FROM NodesToDispositionsForDispositionNew NDDN  GROUP BY NodeId HAVING Count(DispositionID) > 1 ) a  )'
WHERE [ID] = 211;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT tcwf.year  AS [By Year], ROUND(SUM(tcwf.fte_cost_per_month), 2)    AS [TSA FTE Cost for Selected Year],     ROUND(SUM(tcwf.nonfte_cost_per_month), 2) AS [TSA Non-FTE Cost for Selected Year] FROM     vwTSACostWaterfall tcwf WHERE      tcwf.year = ''{Year}'' GROUP BY     tcwf.year'
WHERE [ID] = 267;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240618154918_SQLQueryAliasCorrection', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'IsEnabled', N'Key', N'Title', N'Value') AND [object_id] = OBJECT_ID(N'[AssistantConfigurations]'))
    SET IDENTITY_INSERT [AssistantConfigurations] ON;
INSERT INTO [AssistantConfigurations] ([ID], [IsEnabled], [Key], [Title], [Value])
VALUES (2, CAST(1 AS bit), N'SOURCE_CONFIGS', N'Source Configuration', N'{"project-data": {"isActive": true,"text-box-enabled": false},"project-docs": {"isActive": true,"text-box-enabled": true},"ey-guidance": {"isActive": true,"text-box-enabled": true},"internet": {"isActive": true,"text-box-enabled": true}}');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'IsEnabled', N'Key', N'Title', N'Value') AND [object_id] = OBJECT_ID(N'[AssistantConfigurations]'))
    SET IDENTITY_INSERT [AssistantConfigurations] OFF;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.RiskImpact, RI.RiskProbability, COUNT(*) AS RiskCount FROM RisksAndIssues RI LEFT JOIN ProjectTeams pt on pt.ID = RI.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE RI.IssueRiskCategory = ''Risk'' AND RI.ItemStatusId NOT IN (SELECT S.ID FROM statuses S WHERE S.[Key] IN (''COMPLETED'', ''CLOSED'')) AND (RI.RiskImpact IS NOT NULL OR RI.RiskProbability IS NOT NULL) GROUP BY RI.RiskImpact, RI.RiskProbability ORDER BY RI.RiskImpact, RI.RiskProbability'
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1 CAST(RP.PeriodEndDate AS DATE) AS WeeklyStatusDueDate FROM ReportingPeriods RP WHERE CAST(GETDATE() AS DATE) BETWEEN CAST(RP.PeriodStartDate AS DATE) AND CAST(RP.PeriodEndDate AS DATE) ORDER BY RP.Modified DESC'
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title AS WorkPlanItem FROM Workplan W LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE TT.[Key] = ''PROJECT_MANAGEMENT'' AND DATEPART(ww,W.TaskDueDate) = DATEPART(ww,GETDATE()) + 1'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT WS.Title FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN WeeklyStatusStatuses WS ON PSE.WeeklyStatusStatusId = WS.ID JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = {ProjectTeam} AND RP.ID = (SELECT RPID.ID -1 FROM ReportingPeriods RPID WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate)'
WHERE [ID] = 22;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AN.Title, AN.AccomplishmentNextstepCategory FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = {ProjectTeam} AND RP.ID = (SELECT RPID.ID -1 FROM ReportingPeriods RPID WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate) ORDER BY AN.AccomplishmentNextstepCategory'
WHERE [ID] = 23;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.Title FROM Interdependencies I WHERE CAST(I.ItemDueDate AS DATE) < CAST(GETDATE() AS DATE)'
WHERE [ID] = 24;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1 PT.Title Team, SUM(Counts) TotalInterdependencies FROM ( SELECT IDP.ProviderProjectTeamID TeamID, Count(IDP.ID) Counts FROM Interdependencies IDP WHERE CAST(IDP.ItemDueDate AS DATE) < CAST(GETDATE() AS DATE) GROUP BY IDP.ProviderProjectTeamID UNION ALL SELECT IDR.ReceiverProjectTeamID, Count(IDR.ID) FROM Interdependencies IDR WHERE CAST(IDR.ItemDueDate AS DATE) < CAST(GETDATE() AS DATE) GROUP BY IDR.ReceiverProjectTeamID ) SUB JOIN ProjectTeams PT ON SUB.TeamID = PT.ID GROUP BY PT.Title ORDER BY TotalInterdependencies DESC'
WHERE [ID] = 25;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title AS RisksWithNoMitigation FROM RisksandIssues RI LEFT JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE RI.RiskMitigation IS NULL AND RI.IssueRiskCategory = ''Risk'' AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title AS RisksWithNoMitigation FROM RisksandIssues RI LEFT JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE RI.ItemOwnerID IS NULL AND RI.IssueRiskCategory = ''Risk'' AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title As Milestones FROM Workplan W LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE W.WorkplanTaskType = ''Milestone''  AND CAST(W.StartDate AS DATE) > CAST(GETDATE() AS DATE) AND TT.[Key] = ''PROJECT_MANAGEMENT'' AND EXISTS (SELECT 1 FROM WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues WRIARI WHERE WRIARI.WorkPlanId = W.ID)'
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AN.Title FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN UserProfiles UP ON PT.ItemOwnerID = UP.ID JOIN AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE UP.EMail = ''{Username}'' AND RP.ID = (SELECT RPID.ID -1 FROM ReportingPeriods RPID WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate) AND AN.AccomplishmentNextstepCategory = ''Accomplishment'''
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AN.Title AS NextSteps FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = {ProjectTeam} AND RP.ID = (SELECT RPID.ID FROM ReportingPeriods RPID WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate) AND AN.AccomplishmentNextstepCategory = ''Next Step'''
WHERE [ID] = 33;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team]  FROM ProjectStatusEntries PSE  LEFT JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId LEFT JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID  LEFT JOIN WeeklyStatusStatuses WS ON WS.ID = PSE.WeeklyStatusStatusId  WHERE  RP.ID = (SELECT RPID.ID  FROM ReportingPeriods RPID WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate) AND WS.[KEY] IN (''AT_RISK'',''BEHIND_SCHEDULE'') AND TT.[Key]=''PROJECT_MANAGEMENT'''
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksCompletedLastWeek  FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID    JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID   JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  CAST(W.ActualEndDate AS DATE) >= CAST(DATEADD(week,DATEDIFF(week,0,GETDATE()), 0) AS DATE)   AND CAST(W.ActualEndDate AS DATE) < CAST( DATEADD(week,DATEDIFF(week,0, GETDATE()) + 1,0) AS DATE)   AND S.[KEY] NOT IN (''COMPLETED'', ''CANCELLED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT WSS.Title StatusValue ,''CurrentStatus'' as Category FROM ProjectStatusEntries PSE LEFT JOIN WeeklyStatusStatuses WSS ON WSS.ID=PSE.WeeklyStatusStatusId LEFT JOIN ProjectTeams PT on PT.ID=PSE.ProjectTeamId WHERE PSE.ReportingPeriodId=(SELECT TOP 1 RPID.ID FROM ReportingPeriods RPID Where cast(RPID.PeriodStartDate as date) <= cast(getDate() as date) Order BY RPID.PeriodEndDate DESC) AND PT.Title like {ProjectTeam}  UNION SELECT WSS.Title StatusValue ,''PreviousStatus'' as Category FROM ProjectStatusEntries PSE  LEFT JOIN WeeklyStatusStatuses WSS ON WSS.ID=PSE.WeeklyStatusStatusId LEFT JOIN ProjectTeams PT on PT.ID=PSE.ProjectTeamId WHERE PSE.ReportingPeriodId=(SELECT  RPID.ID FROM   ReportingPeriods RPID Where cast(RPID.PeriodStartDate as date) <= cast(getDate() as date) Order BY RPID.PeriodEndDate DESC Offset 1 Rows FETCH NEXT 1 ROWS ONLY) AND  PT.Title like {ProjectTeam}'
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ProjectTeam FROM(   SELECT      PT.Title AS Projectteam,     COUNT(PT.ID) AS TeamUpdateCount, DENSE_RANK() OVER (ORDER BY COUNT(PT.ID)) ROW_NUM FROM      WorkPlan W JOIN ProjectTeams PT ON PT.ID = W.ProjectTeamId JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE      CAST(W.Modified AS DATE) BETWEEN DATEADD(day, -14, CAST(GETDATE() AS DATE)) AND DATEADD(day, -7, CAST(GETDATE() AS DATE)) AND PT.ItemIsActive=1 AND TT.[Key] =  ''PROJECT_MANAGEMENT'' GROUP BY PT.Title) A'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      W.Title AS [List of Critical Milestones due in next 15 days with no owners Assigned yet] FROM      WorkPlan W JOIN ProjectTeams PT ON PT.ID = W.ProjectTeamId JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE      W.WorkPlanTaskType IN (''Milestone'')     AND CAST(W.TaskDueDate AS DATE) BETWEEN CAST(GETDATE() AS DATE) AND DATEADD(day, 15, CAST(GETDATE() AS DATE))     AND W.IsCritical IN (1)     AND W.TaskOwnerId IS NULL AND TT.[Key] =  ''PROJECT_MANAGEMENT'''
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title as [List down all tasks associated with interdependencies] from Workplan W where W.ID in ( SELECT WIRT.WorkPlanId FROM WorkPlansToInterdependenciesForReceiverTasks WIRT UNION select WIPT.WorkPlanId FROM WorkPlansToInterdependenciesForProviderTasks WIPT) AND W.WorkPlanTaskType=''Task'''
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title AS WorkPlanItem FROM Workplan W LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE TT.[Key] = ''PROJECT_MANAGEMENT''  AND DATEPART(ww,W.TaskDueDate) = DATEPART(ww,GETDATE())'
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title, W.WorkPlanTaskType, W.StartDate, W.TaskDueDate, PT.Title ProjectTeam, S.Title [Status], UP.Title TaskOwner FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN UserProfiles UP ON W.TaskOwnerId = UP.ID WHERE W.UniqueItemIdentifier = ''HR.2.2.6'''
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title FROM ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId WHERE ManageProjectStatus = 1 AND  TT.[Key] = ''PROJECT_MANAGEMENT''  EXCEPT   SELECT PT.Title  FROM ProjectStatusEntries PSE  LEFT JOIN ReportingPeriods RP ON PSE.ReportingPeriodId = RP.ID  LEFT JOIN ProjectTeams PT ON PSE.ProjectTeamId = PT.ID  WHERE RP.ID = (SELECT RPID.ID FROM ReportingPeriods RPID WHERE CAST(GETDATE() AS DATE) BETWEEN CAST(RPID.PeriodStartDate AS DATE) AND CAST(RPID.PeriodEndDate AS DATE)      )   AND PSE.WeeklyStatusStatusId IS NOT NULL'
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(R.ID) AS NewRisksCount FROM  RisksAndIssues R JOIN ProjectTeams PT ON R.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE R.IssueRiskCategory = ''Risk'' AND DATEDIFF(day, R.Created, GETDATE()) <= 5 AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      ANS.Title FROM     ProjectStatusEntries PSE    LEFT OUTER JOIN AccomplishmentsAndNextSteps ANS ON PSE.ID = ANS.ProjectStatusEntryId     LEFT JOIN ProjectTeams PT ON PT.ID = PSE.ProjectTeamId     LEFT OUTER JOIN ReportingPeriods RP ON PSE.ReportingPeriodId = RP.ID  WHERE     ANS.AccomplishmentNextStepCategory IN ''{AccomplishmentNextStepCategory}'' AND RP.PeriodStartDate = (         SELECT TOP 1 RPD.PeriodStartDate          FROM ReportingPeriods RPD       WHERE CAST (GETDATE() AS DATE) BETWEEN CAST(RPD.PeriodStartDate AS DATE) AND CAST(RPD.PeriodEndDate AS DATE)      ) '
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH CTE AS (SELECT COUNT(*) AS OverdueItemCount,      PT.Title AS [ProjectTeam With Most Overdue Item]  FROM WorkPlan W  LEFT JOIN [ProjectTeams] PT ON PT.ID = W.ProjectteamId   LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId  WHERE  S.[Key] <> ''{Key}''    AND TT.[Key]=''PROJECT_MANAGEMENT''    AND CAST(W.TaskDueDate AS DATE ) < CAST(GETDATE() AS DATE) AND PT.Title IS NOT NULL GROUP BY PT.Title )  SELECT Top 1 [ProjectTeam With Most Overdue Item] FROM CTE ORDER BY OverdueItemCount DESC'
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ''Total Top Down Target'' AS KPI, FORMAT((SUM(VCTDE.HeadcountCostReductionEst)+SUM(VCTDE.NonHeadcountCostReductionEst)+SUM(VCTDE.RevenueGrowthEstimate))/1000000,''N2'') AS ''Value (Million)'' FROM ValueCaptureTopDownEstimates VCTDE'
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VT.RevenueGrowthEstimate,0)) [RevenueGrowthTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title = {ProjectTeam}'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VT.CostToAchieveEstimate,0)) [CostToAchieveTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title ={ProjectTeam}'
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VT.HeadcountCostReductionEst,0)) [HeadCountCostReductionTarget] FROM ValueCaptureTopDownEstimates VT'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(VCTDE.NonHeadcountCostReductionEst) + SUM(VCTDE.RevenueGrowthEstimate) + SUM(VCTDE.HeadcountCostReductionEst) ''Total Top Down Target Value'' FROM ValueCaptureTopDownEstimates VCTDE'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(VCTDE.RevenueGrowthEstimate) RevenueGrowth,SUM(VCTDE.TotalCostReduction) CostReduction FROM ValueCaptureTopDownEstimates VCTDE'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) FROM ValueCaptureInitiatives VCI WHERE VCI.IsItemActive = 1'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team] ,CAST(SUM(ISNULL(VT.RevenueGrowthEstimate,0))/1000000 AS FLOAT) [Revenue Growth(in Million)] FROM ValueCaptureTopDownEstimates VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId GROUP BY PT.Title'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VC.Title AS [ValueCaptureInitiatives with no Owners] FROM ValueCaptureInitiatives VC WHERE VC.ItemOwnerId IS NULL'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VP.Title AS ValueCapturepriority, COUNT(VC.ValueCapturePriorityId) AS ValueCapturePriorityCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId where VC.ValueCapturePriorityId is not null GROUP BY VC.ValueCapturePriorityId, VP.Title'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS UserProfile, COUNT(VC.ID) AS ValueCaptureOwnerwiseCount FROM ValueCaptureInitiatives VC LEFT JOIN UserProfiles UP ON UP.ID = VC.ItemOwnerId WHERE VC.ItemOwnerId IS NOT NULL GROUP BY VC.ItemOwnerId, UP.Title'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title,SUM(ISNULL(VCTDE.NonHeadcountCostReductionEst,0)) + SUM(ISNULL(VCTDE.RevenueGrowthEstimate,0)) + SUM(ISNULL(VCTDE.HeadcountCostReductionEst,0)) AS TotalTopDownTarget FROM ValueCaptureTopDownEstimates VCTDE LEFT JOIN ProjectTeams PT ON PT.ID = VCTDE.ProjectTeamId GROUP BY PT.Title'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS ValueCaptureStage, COUNT(VC.ID) AS ValueCaptureStageCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VC.ValueCaptureStageId GROUP BY VC.ValueCaptureStageId, VCS.Title'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title as Functions, COUNT(VC.FunctionId) AS ValueCaptureFunction FROM ValueCaptureInitiatives VC LEFT JOIN Functions F ON F.ID = VC.FunctionId WHERE VC.FunctionId IS NOT NULL GROUP BY VC.FunctionId, F.Title '
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCTDE.ID) AS [Top Down targets #],        SUM(ISNULL(VCTDE.NonHeadcountCostReductionEst, 0)) AS [Total Non Headcount Cost Reduction Estimate],        SUM(ISNULL(VCTDE.RevenueGrowthEstimate, 0)) AS [Total Revenue Growth Estimate],        SUM(ISNULL(VCTDE.CostToAchieveEstimate, 0)) AS [Total Cost To Achieve Estimate],        SUM(ISNULL(VCTDE.HeadcountCostReductionEst, 0)) AS [Total Headcount Cost Reduction Estimate],        SUM(ISNULL(VCTDE.HeadcountCostReductionEst, 0)) + SUM(ISNULL(VCTDE.NonHeadcountCostReductionEst, 0))        + SUM(ISNULL(VCTDE.RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates VCTDE'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  VCTT.Title, PT.Title, VCTT.CostToAchieveEstimate, VCTT.NonHeadcountCostReductionEst, VCTT.HeadcountCostReductionEst, VCTT.RevenueGrowthEstimate FROM   ValueCaptureTopDownEstimates VCTT  LEFT JOIN ProjectTeams PT on PT.ID = VCTT.ProjectTeamId'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VCTDE.HeadcountCostReductionEst,0)) AS HeadcountCostReduction FROM ValueCaptureTopDownEstimates VCTDE'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VCTDE.NonHeadcountCostReductionEst,0)) AS NonHeadcountCostReduction FROM ValueCaptureTopDownEstimates VCTDE'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VCTDE.RevenueGrowthEstimate,0)) AS RevenueGrowth FROM ValueCaptureTopDownEstimates VCTDE'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VCTDE.CostToAchieveEstimate,0)) AS CostToAchive FROM ValueCaptureTopDownEstimates VCTDE'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT A.Amount as [Client Baseline PnL Amount], A.FinancialLineItem as FinancialLineItem FROM( SELECT F.ID, F.Ordinal, F.Title FinancialLineItem , SUM(C.Amount)/1000000 Amount FROM ValueCaptureFinancialLineItems F LEFT JOIN CostCenters C ON C.FinancialLineItemId = F.ID  GROUP BY F.ID, F.Title, F.Ordinal ) A WHERE A.Amount IS NOT NULL'
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCRI.Title AS [Recommended Initiatives List] FROM ValueCaptureRecommendedInitiatives VCRI'
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	SUM(a.[Total Top Down Target Value]) AS [Top Down Targets],      SUM(b.[Bottom Up Initiatives Value]) AS [Bottom Up Initiatives Value], 	( SUM(b.[Bottom Up Initiatives Value])-SUM(a.[Total Top Down Target Value])) AS Variance FROM ( SELECT   SUM(ISNULL(VCTDE.HeadcountCostReductionEst, 0)) + SUM(ISNULL(VCTDE.NonHeadcountCostReductionEst, 0))        + SUM(ISNULL(VCTDE.RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates VCTDE) a, ( select SUM(Amount)*12 as [Bottom Up Initiatives Value]  FROM vwUnpivotEstimates where MYear=''Y3M12'' AND Recurring =1 ) b '
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT CONCAT(''Tracking Period of the Program is from '', CAST(MIN(VCTM.StartDt) AS DATE), '' to '', CAST(MAX(VCTM.EndDt) AS DATE)) FROM ValueCaptureTransactionMonths VCTM WHERE VCTM.IsItemActive = 1'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''{ProjectTeam}'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''{ProjectTeam}''    ) Act         ON 1 = 1'
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title Initiatives FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCapturePriorityId = 1'
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS TotalNetSales FROM ValueCaptureEstimates VE LEFT JOIN ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId WHERE FLT.Title = ''PnL'' AND FL.Title in (''Net sales'')', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(VCTDE.NonHeadcountCostReductionEst) NonHeadcountCostReduction, SUM(VCTDE.HeadcountCostReductionEst) HeadcountCostReduction FROM ValueCaptureTopDownEstimates VCTDE'
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH CTE AS  ( 	SELECT I.ProjectTeamId  	FROM ValueCaptureEstimates E 		LEFT JOIN ValueCaptureInitiatives I ON I.ID = E.ValueCaptureInitiativeId 	EXCEPT 	SELECT VCTDE.ProjectTeamId FROM ValueCaptureTopDownEstimates VCTDE )  SELECT PT.Title [ProjectTeam]  FROM CTE LEFT JOIN ProjectTeams PT ON PT.ID = CTE.ProjectTeamId'
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' DECLARE @CurrentYR NVARCHAR(10), @SQL NVARCHAR(MAX)  SELECT  TOP 1 @CurrentYR = [YEAR] FROM vwValueCaptureTransactionMonths WHERE RelativeYear = YEAR(GETDATE())   SELECT @SQL = '' ;WITH TopDownCTE AS ( 	SELECT  		PT.ID  PROJECTTEAMID 		,PT.Title [ProjectTeam] 		,(SUM(ISNULL(VT.RevenueGrowthEstimate,0))  + SUM(ISNULL(VT.NonHeadcountCostReductionEst,0)) + SUM(ISNULL(VT.HeadcountCostReductionEst,0)))/1000000  [Target] 	FROM ValueCaptureTopDownEstimates VT 		LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId 	WHERE PT.ManageValueCapture = 1 	GROUP BY  		PT.ID  		,PT.Title 	UNION ALL 	SELECT  		-1 		,''''Overall'''' 		,(SUM(ISNULL(VT.RevenueGrowthEstimate,0))  + SUM(ISNULL(VT.NonHeadcountCostReductionEst,0)) + SUM(ISNULL(VT.HeadcountCostReductionEst,0)))/1000000  [Target] 	FROM ValueCaptureTopDownEstimates VT 		LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId 	WHERE PT.ManageValueCapture = 1 ) , BottomUPCTE AS ( 	SELECT  		VI.ProjectTeamId 		,PT.Title [ProjectTeam] 		,(SUM(ISNULL(E.''+@CurrentYR+''M12Estimate,0))*12)/1000000 [Estimate] 	FROM ValueCaptureEstimates E 	 JOIN ValueCaptureInitiatives VI ON VI.ID =E.ValueCaptureInitiativeId 	 LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId 	WHERE  		VI.IsItemActive = 1  		AND E.Recurring = 1  		AND PT.ManageValueCapture = 1 	GROUP BY  		VI.PROJECTTEAMID 		,PT.Title 	UNION ALL 	SELECT  		-1 		,''''Overall'''' 		,(SUM(ISNULL(E.''+@CurrentYR+''M12Estimate,0))*12)/1000000 [Estimate] 	FROM ValueCaptureEstimates E 	 JOIN ValueCaptureInitiatives VI ON VI.ID =E.ValueCaptureInitiativeId 	 LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId 	WHERE  		VI.IsItemActive = 1  		AND E.Recurring = 1  		AND PT.ManageValueCapture = 1 )  SELECT  	COALESCE(T.PROJECTTEAMID,B.PROJECTTEAMID) ProjectTeamID 	,COALESCE(T.ProjectTeam,B.ProjectTeam) ProjectTeam 	,ISNULL(T.[Target],0) [TopDown Target(M)] 	,ISNULL(B.Estimate,0) [BottomUP Estimate(M)] 	,ISNULL(T.[Target],0) - ISNULL(B.Estimate,0) [Variance(M)] FROM TopDownCTE T 	FULL OUTER JOIN BottomUPCTE B ON T.ProjectTeamId = B.ProjectTeamId ORDER BY ProjectTeamId''  EXEC sp_executesql  @SQL'
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VC.Title AS ValueCaptureInitiativesReadyForApproval FROM ValueCaptureInitiatives VC WHERE VC.ReadyForApproval = 1'
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 5 A.Initiatives, A.Amount FROM( SELECT VI.Title Initiatives ,sum(VE.Amount) Amount FROM vwUnpivotActuals VE LEFT JOIN ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN ValueCaptureImpactTypes VIT ON VIT.ID = VE.ValueCaptureImpactTypeid GROUP BY VI.Title,VE.Amount ) A WHERE A.Amount > 0 ORDER BY A.Amount DESC'
WHERE [ID] = 146;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1 PT.Title, SUM(ISNULL(VCTDE.HeadcountCostReductionEst,0)) AS MostHeadcountCostReduction FROM ValueCaptureTopDownEstimates VCTDE LEFT JOIN ProjectTeams PT ON PT.ID = VCTDE.ProjectTeamId GROUP BY PT.Title ORDER BY SUM(ISNULL(VCTDE.HeadcountCostReductionEst,0)) DESC'
WHERE [ID] = 149;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VC.Title as [Value Capture Initiatives with No Owners] FROM ValueCaptureInitiatives as VC WHERE VC.ItemOwnerId IS NULL'
WHERE [ID] = 152;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ISNULL(VP.Title, ''No Priority'') AS ValueCapturePriority,     COUNT(VC.ID) AS ValueCapturePriorityCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId WHERE VC.ValueCapturePriorityId IS NOT NULL GROUP BY VC.ValueCapturePriorityId, VP.Title SELECT ISNULL(VS.Title, ''No Stage Assigned'') AS ValueCaptureStage,     COUNT(VC.ID) AS ValueCaptureStageCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VS ON VS.ID = VC.ValueCaptureStageId WHERE VC.ValueCaptureStageId IS NOT NULL GROUP BY VC.ValueCaptureStageId, VS.Title'
WHERE [ID] = 153;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(E.Amount, 0) * 12) [Run Rate for iniatives in Approved, Committed and Realized] FROM ValueCaptureInitiatives VI LEFT JOIN vwUnpivotEstimates E ON E.ValueCaptureInitiativeId = VI.ID LEFT JOIN ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageID WHERE VS.Title IN ( ''Approved'', ''Committed'', ''Realized'' ) AND MYear = ( select VCTMK.[Key] from ValueCaptureTransactionMonths VCTMK where CAST(VCTMK.EndDt AS date) = (SELECT MAX(CAST(VCTM.EndDt AS date)) FROM ValueCaptureTransactionMonths VCTM))'
WHERE [ID] = 155;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiatives with Benefit score over 75] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId WHERE CAST(VI.BenefitScore AS INT) > 75 AND PT.Title IN (''HR'')'
WHERE [ID] = 158;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ns.Title, a.TotalCount FROM ( SELECT COUNT(Title) AS TotalCount, BusinessEntityId FROM Nodes nds WHERE NodeTypeId = 3 GROUP BY BusinessEntityId ) a INNER JOIN Nodes ns ON a.BusinessEntityId = ns.ID'
WHERE [ID] = 169;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ns.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ns ON a.BusinessEntityId = ns.ID '
WHERE [ID] = 170;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ns.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ns ON a.BusinessEntityId = ns.ID '
WHERE [ID] = 171;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM Dispositions d'
WHERE [ID] = 174;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# Systems present in this functional OP model] FROM Systems s'
WHERE [ID] = 181;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# TPAs present in this functional OP model] FROM ThirdPartyAgreements tpa'
WHERE [ID] = 182;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog opma WHERE Modified >= DATEADD(hh, -1, GETDATE())'
WHERE [ID] = 187;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog opma WHERE FieldImpacted = ''Owner''       AND CAST(Modified AS DATE) = CAST(GETDATE() AS DATE)'
WHERE [ID] = 188;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog opma WHERE Title = ''Deleted''       AND DATEPART(wk, CAST(Modified AS DATE)) = DATEPART(wk, CAST(GETDATE() AS DATE))       AND YEAR(Modified) = YEAR(GETDATE())'
WHERE [ID] = 189;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT PR.Title [Process] FROM Nodes PR     JOIN TransactionStates  S  ON S.ID = PR.TransactionStateId    LEFT JOIN  NodesToDispositionsForDispositionNew D             ON D.NodeId = PR.ID WHERE     PR.NodeTypeId = 3     AND D.NodeId IS NULL     AND S.[Key] = ''DAY_ONE'''
WHERE [ID] = 196;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes  n   WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,  nds.Title,   nds.NodeParentID, nds.NodeTypeId, HierId = HierId + 1     FROM Nodes nds, GetSelectedFunction  where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  , ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID     FROM     (SELECT * FROM PG_Hierarchy pgh WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT TOP 1     Functions AS [Function with highest number of processes] FROM (     SELECT Functions,            COUNT(ID) as [Process Count]     FROM ProcessCTE  tc   GROUP BY Functions ) A order by [Process Count] desc    '
WHERE [ID] = 197;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Processes with Disposition as TSA] FROM   Nodes   N   LEFT JOIN     NodesToDispositionsForDispositionNew NTD             ON NTD.NodeId = N.ID     LEFT JOIN         Dispositions  D ON NTD.DispositionId = D.ID WHERE     D.Title = ''TSA''     AND N.NodeTypeId = 3'
WHERE [ID] = 198;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title as [List of Processes with No Disposition] FROM Nodes N WHERE N.NodeTypeId=3 AND N.ID NOT IN (SELECT NodeId FROM NodesToDispositionsForDispositionNew ndd)'
WHERE [ID] = 199;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.NodeTypeId,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ), ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID AS [ProcessID]     FROM     (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT ISNULL(Geo.Title, ''Not Assigned'') AS [Geographic Coverages],        COUNT(P.ProcessID) AS [Total Number of Process in Real Estate] FROM ProcessCTE P     LEFT JOIN ProcessAttributes PA         ON P.ProcessID = PA.NodeId     LEFT JOIN GeographicCoverages Geo         ON PA.GeographicCoverageId = Geo.ID WHERE P.Functions =''{FunctionName}'' GROUP BY Geo.Title'
WHERE [ID] = 202;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,            HierId = HierId + 1     FROM Nodes nds,          PG_Hierarchy     WHERE nds.NodeParentID = PG_Hierarchy.id    ) SELECT DISTINCT      F.Title AS [Functions],     SF.[Title] AS  [Subfunctions] FROM (SELECT * FROM PG_Hierarchy pg WHERE HierId = 2) F     LEFT JOIN     (SELECT * FROM PG_Hierarchy pg WHERE HierId = 3) SF         ON F.ID = SF.NodeParentID ORDER BY 1,          2'
WHERE [ID] = 203;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes  nd   WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,            HierId = HierId + 1     FROM Nodes nds,          PG_Hierarchy     WHERE nds.NodeParentID = PG_Hierarchy.id    ) SELECT DISTINCT      SF.[Title] AS  [Subfunctions] FROM (SELECT * FROM PG_Hierarchy pg WHERE HierId = 2) F     LEFT JOIN     (SELECT * FROM PG_Hierarchy pg WHERE HierId = 3) SF         ON F.ID = SF.NodeParentID WHERE F.Title=''{FunctionName}'' ORDER BY 1'
WHERE [ID] = 205;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.NodeTypeId,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  ,        ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID AS [ProcessID]     FROM     (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT P.Processes,        ISNULL(S.Title, ''Not Assigned'') AS [Systems],        ISNULL(TPA.Title, ''Not Assigned'') AS [Third Party Agreements] FROM ProcessCTE P     LEFT JOIN NodesToThirdPartyAgreementsForEnablerTpa NTPA         ON P.ProcessID = NTPA.NodesId     LEFT JOIN ThirdPartyAgreements TPA         ON NTPA.ThirdPartyAgreementsId = TPA.ID     LEFT JOIN NodesToSystemsForEnablerSystems NSys         ON NSys.NodesId = P.ProcessID     LEFT JOIN Systems S         ON NSys.SystemsId = S.ID'
WHERE [ID] = 206;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL           AND TransactionStateID = 8     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ) SELECT N.Title [Function],        NTSS.Title AS [Field Status],        OPS.Title AS [Op Status] FROM NodeTrackers NT     LEFT JOIN NodeTrackerStatuses NTS         ON NTS.NodeTrackerID = NT.ID     JOIN     (SELECT * FROM GetSelectedFunction gsf WHERE HierId = 2 and Title = ''HR'') N         ON N.ID = NT.NodeId     LEFT JOIN NodeTrackerStatusFields NTSS         ON NTSS.ID = NTS.NodeTrackerStatusFieldId     LEFT JOIN OpStatuses OPS         ON OPS.ID = NTS.NodeTrackerStatusStatusId'
WHERE [ID] = 209;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title Disposition,        WP.Title Tasks FROM NodesToWorkPlansForTask NWP     LEFT JOIN Nodes N         ON N.ID = NWP.NodeId     LEFT JOIN WorkPlan WP         ON NWP.WorkPlanId = WP.ID     LEFT JOIN NodesToDispositionsForDispositionNew ND         ON ND.NodeID = N.ID     LEFT JOIN Dispositions D         ON D.ID = ND.DispositionID WHERE N.NodeTypeId = 3'
WHERE [ID] = 210;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL           AND TransactionStateID = 6     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM Nodes ROOT     WHERE ROOT.ID in (select ID from GetSelectedFunction gsf where HierId = 2 and Title = ''Finance'' )     UNION ALL     SELECT CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ) SELECT COUNT(*) AS [Process with multiple dispositions for Finance] FROM PG_Hierarchy pg WHERE NodeTypeId = 3       AND ID IN (                     SELECT NodeID                     FROM                     (                         SELECT NodeId,                                Count(DispositionID) As [Disposition Count]                         FROM NodesToDispositionsForDispositionNew   ndf     GROUP BY NodeId                         HAVING Count(DispositionID) > 1                     ) a                 )'
WHERE [ID] = 211;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Process which doesn''''t have ownership] FROM     Nodes                 N     JOIN         TransactionStates T             ON T.ID = N.TransactionStateId WHERE     OwnerId IS NULL     AND N.NodeTypeId = 3'
WHERE [ID] = 212;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes with more than one Disposition] FROM Nodes N WHERE N.NodeTypeId = 3       AND N.ID IN ( SELECT NodeID   FROM   (    SELECT NodeId, COUNT(DispositionID) AS [Disposition Count]                           FROM NodesToDispositionsForDispositionNew    ndf                       GROUP BY NodeId                           HAVING COUNT(DispositionID) > 1                       ) a                   ) '
WHERE [ID] = 213;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT ID,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes  nd   WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.ID,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, TransactionStateID) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.TransactionStateID     FROM Nodes ROOT     WHERE ROOT.ID IN (                          SELECT ID                          FROM GetSelectedFunction         gsf                 WHERE HierId = 2                                AND Title = ''{FunctionName}''                                AND TransactionStateId = 6                      )     UNION ALL     SELECT CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.TransactionStateId     FROM PG_Hierarchy PARENT,          Nodes CHILD     WHERE PARENT.id = CHILD.NodeParentID    ) SELECT Title AS [List of Processes Associated with Legal Function] FROM PG_Hierarchy pgh ORDER BY ID,          title DESC '
WHERE [ID] = 214;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nd WHERE NodeParentID IS NULL  UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes FROM (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT P.Functions, A.Processes  FROM (SELECT DISTINCT [Processes]  		FROM ProcessCTE 	pte	GROUP BY Processes  		HAVING COUNT(DISTINCT [Functions] ) > 1) A  	LEFT JOIN ProcessCTE P ON P.Processes = A.Processes ', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 216;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Systems not tagged in any process] FROM     Systems s WHERE     ID NOT IN (                   SELECT DISTINCT                       SystemsId                   FROM                       Nodes                               N                       LEFT JOIN                           NodesToSystemsForEnablerSystems NSS                               ON N.ID = NSS.NodesId  					  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId                    WHERE T.Title= ''Day 1'' AND                        N.NodeTypeId = 3               )'
WHERE [ID] = 219;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     ISNULL(ST.Title, ''System Type Not Assigned'') AS [SystemsType],     S.Title                                      AS [Systems] FROM     Systems         S     LEFT JOIN         SystemTypes ST             ON S.TypeId = ST.ID'
WHERE [ID] = 220;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nd  WHERE NodeParentID IS NULL  UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF LEFT JOIN (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number for Multiple Deposition]  FROM ProcessCTE p WHERE ID IN ( SELECT NodeID FROM ( SELECT NodeId,    Count(DispositionID) As [Disposition Count] FROM NodesToDispositionsForDispositionNew ndn GROUP BY NodeId HAVING Count(DispositionID) > 1 ) a ) GROUP BY [Functions] ORDER BY  COUNT(*) DESC', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 221;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes n   WHERE NodeParentID IS NULL   UNION ALL         SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   WHERE nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2    UNION ALL         SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  WHERE  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS (  SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy gg WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number of Live Without]  FROM ProcessCTE pp WHERE ID IN (	SELECT NodeId 				FROM NodesToDispositionsForDispositionNew ND  				LEFT JOIN Dispositions D ON D.ID = DispositionID  				WHERE D.Title = ''Live without''			 				) GROUP BY [Functions] ORDER BY  COUNT(*) DESC'
WHERE [ID] = 222;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nd  WHERE NodeParentID IS NULL  UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy pp WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy pp WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number of Processes tagged to them] , COUNT(*)  [No of Processes] 				FROM ProcessCTE 	ppt	GROUP BY [Functions] 				ORDER BY  COUNT(*) DESC    '
WHERE [ID] = 223;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes   n  WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,             HierId = HierId + 1     FROM Nodes nds,          PG_Hierarchy     WHERE nds.NodeParentID = PG_Hierarchy.id    ),       ProcessCTE AS (SELECT DISTINCT          F.Title AS [Functions],         f.id AS FunctionID     FROM     (SELECT * FROM PG_Hierarchy pp WHERE HierId = 2) F         LEFT JOIN         (SELECT * FROM PG_Hierarchy gg WHERE HierId = 3) SF             ON F.ID = SF.NodeParentID    ) SELECT Top 1     Functions as [Function with Highest Number of Enablers],     [Enablers Count] FROM (     SELECT P.Functions,            COUNT(DISTINCT TPA.ID) + COUNT(DISTINCT S.ID) + COUNT(DISTINCT Asset.ID) + COUNT(DISTINCT Roles.ID) AS [Enablers Count]     FROM ProcessCTE P         LEFT JOIN NodesToThirdPartyAgreementsForEnablerTpa NTPA           ON P.FunctionID = NTPA.NodesId         LEFT JOIN ThirdPartyAgreements TPA             ON NTPA.ThirdPartyAgreementsId = TPA.ID          LEFT JOIN NodesToSystemsForEnablerSystems NSys              ON NSys.NodesId = P.FunctionID         LEFT JOIN Systems S             ON NSys.SystemsId = S.ID         LEFT JOIN NodesToAssetsForEnablerAssets NAsset              ON NAsset.NodesId = P.FunctionID         LEFT JOIN Assets Asset             ON Asset.ID = NAsset.AssetsId          LEFT JOIN NodesToRolesForEnablerRoles NRole --Roles              ON NAsset.NodesId = P.FunctionID         LEFT JOIN OrgRolesMaster Roles             ON Roles.ID = NRole.RolesId     GROUP BY P.Functions ) A ORDER BY [Enablers Count] DESC', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 224;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID,  HierId = 1 FROM Nodes n WHERE NodeParentID IS NULL    UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,    HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy(NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM Nodes ROOT   WHERE ROOT.ID in (select ID from GetSelectedFunction g where HierId=2 and Title=''Finance & Accounting'')       UNION ALL        SELECT  CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  )   SELECT PG.Title, OldValue, NewValue  FROM PG_Hierarchy PG  JOIN (SELECT PL.ObjectID, OldValue, NewValue 			FROM OperatingModelActivityLog PL 			WHERE Object = ''Process'' AND Title = ''Updated'' AND PL.Modified = ( 			SELECT  Max(Modified) Modified FROM OperatingModelActivityLog  	op		WHERE ObjectID IN (SELECT ID FROM PG_Hierarchy PG WHERE NodeTypeId=3 )  			AND Object = ''Process'' AND Title = ''Updated'')) A ON A.ObjectID = PG.ID'
WHERE [ID] = 225;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(DISTINCT n.ID) AS [No of Process having 2 owners or Dispositions] FROM Nodes n LEFT JOIN (     SELECT NodeId     FROM NodesToDispositionsForDispositionNew  nn   GROUP BY NodeId     HAVING COUNT(DispositionID) = 2 ) d ON n.ID = d.NodeId LEFT JOIN (     SELECT NodeID     FROM NodesToOwnersForOwnerNew  no   GROUP BY NodeID     HAVING COUNT(OwnerId) = 2 ) o ON n.ID = o.NodeID WHERE n.NodeTypeId = 3 AND (d.NodeId IS NOT NULL OR o.NodeID IS NOT NULL)'
WHERE [ID] = 227;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Systems being used by Project Team and Process Group] FROM     Systems s WHERE  ID IN (                   SELECT DISTINCT                       SystemsId                   FROM                       Nodes N                       LEFT JOIN NodesToSystemsForEnablerSystems NSS                        ON N.ID = NSS.NodesId  					  LEFT JOIN  NodesToProjectTeamsForProjectTeam NP 					  ON N.ID = NP.NodesId  					  LEFT JOIN NodeTypes NT ON NT.ID = N.NodeTypeId                    WHERE  NT.Title IN (''ProcessGroup'')               )	'
WHERE [ID] = 239;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Process groups are not started on Followup Calls for Current State] FROM Nodes N     LEFT JOIN Nodetypes NT         ON NT.ID = N.NodeTypeId     LEFT JOIN NodeTrackers NTC         ON NTC.NodeID = N.ID     LEFT JOIN NodeTrackerStatuses NTS         ON NTS.NodeTrackerID = NTC.ID     LEFT JOIN TransactionStates T         ON T.ID = N.TransactionStateID WHERE N.NodeOnTracker = 1       AND NT.Title = ''Process Group''       AND T.[Key] = ''CURRENT_STATE''       AND N.ID NOT IN (                           SELECT N.ID ProcessGroupID                           FROM Nodes N                               LEFT JOIN Nodetypes NT                                   ON NT.ID = N.NodeTypeId                               LEFT JOIN NodeTrackers NTC                                   ON NTC.NodeID = N.ID                               LEFT JOIN NodeTrackerStatuses NTS                                   ON NTS.NodeTrackerID = NTC.ID                               LEFT JOIN TransactionStates T                                   ON T.ID = N.TransactionStateID                           WHERE N.NodeOnTracker = 1                                 AND NT.Title = ''Process Group''                                 AND T.[Key] = ''CURRENT_STATE''                                 AND NTS.Title = ''FollowUp Call''                       )'
WHERE [ID] = 240;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes n    WHERE NodeParentID IS NULL      UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ) SELECT O.Title [Client Owner for HR] FROM GetSelectedFunction N 	LEFT JOIN NodesToOwnersForOwnerNew NOS ON NOS.NodeId = N.ID  	LEFT JOIN Owners O ON O.ID = NOS.OwnerId  WHERE N.HierId = 2 AND N.Title = ''HR''', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 241;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Title as [Billing Period Name],    DeadlineDate as [Contribution Deadlines]  FROM    TSABillingPeriods tb'
WHERE [ID] = 251;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT    Title AS [TSA Phases]  FROM TSAPhases tp'
WHERE [ID] = 252;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'DECLARE @UserProfiles int; SELECT    @UserProfiles = ID  FROM    UserProfiles up  WHERE    EMail = ''{Username}'' ; WITH TEMPCTE AS (   SELECT      FunctionId,      SubFunctionId    FROM      TSAReviewers  tr  WHERE      ProviderApproverId = @UserProfiles      OR RecipientApproverId = @UserProfiles )  SELECT    TSA.Title as [List of TSA to be reviewed] FROM    TSAItems TSA    JOIN TEMPCTE ON TSA.FunctionId = TEMPCTE.FunctionId    AND tsa.SubFunctionId = TEMPCTE.SubFunctionId    JOIN TSAPhases TP ON TSA.PhaseId = TP.ID  WHERE    TP.[Key] IN (''ALIGNMENT'', ''APPROVAL''); '
WHERE [ID] = 255;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT   Title DefaultCurrency FROM  TSACurrencies tc WHERE CurrencyCode =''{CurrencyCode}'''
WHERE [ID] = 256;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT   CurrencyExchangeRateToUSD  FROM  TSACurrencies t WHERE CurrencyCode ={CurrencyCode}'
WHERE [ID] = 257;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT CASE WHEN SUM(DeadlineReminder) > 0 THEN ''Yes, email reminder before the deadline is setup'' ELSE ''No, email reminder before the deadline is setup'' END AS [Send an email reminder before the deadline?] FROM( SELECT     Title,     CAST( DeadlineReminder AS INT) DeadlineReminder FROM     TSABillingPeriods tb WHERE     DeadlineReminder = 1) A'
WHERE [ID] = 260;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title        AS [Billing Period Name],     DeadlineDate AS [Contribution Deadlines] FROM     TSABillingPeriods t'
WHERE [ID] = 261;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT CASE WHEN SUM(SendEmailImmediately) > 0 THEN ''Yes, notifying data contributors by email '' ELSE ''No, not notifying data contributors by email '' END AS [Notify data contributors by email ?] FROM( SELECT     Title                AS [Billing Period Name],     CAST(SendEmailImmediately AS INT) SendEmailImmediately FROM     TSABillingPeriods tb WHERE     SendEmailImmediately = 1) A'
WHERE [ID] = 262;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT month_year AS [By Month],        ROUND((SUM(fte_cost_per_month) + SUM(nonfte_cost_per_month)), 2) AS [Total TSA Costs Over Month] FROM vwTSACostWaterfall  vw GROUP BY date_,          month_year  SELECT [quarter] AS [By Quarter],        ROUND((SUM(fte_cost_per_month) + SUM(nonfte_cost_per_month)), 2) AS [Total TSA Costs Over Quarter] FROM vwTSACostWaterfall vwc GROUP BY Concat(Year(date_), Datepart(quarter, date_)),          [quarter]    SELECT [year] AS [By Year],        ROUND((SUM(fte_cost_per_month) + SUM(nonfte_cost_per_month)), 2) AS [Total TSA Costs Over Year] FROM vwTSACostWaterfall cw GROUP BY [year]'
WHERE [ID] = 264;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     [year]                               AS [By Year],     ROUND(SUM(fte_cost_per_month), 2)    AS [TSA FTE Cost for Selected Year],     ROUND(SUM(nonfte_cost_per_month), 2) AS [TSA Non-FTE Cost for Selected Year] FROM     vwTSACostWaterfall wf WHERE      [year] = ''{Year}'' GROUP BY     [year]'
WHERE [ID] = 267;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [TSA Stages] FROM     TSAPhases t ORDER BY     Ordinal'
WHERE [ID] = 268;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [TSAs that have duration for more than 18 months] FROM     TSAItems ts WHERE     Duration > 18'
WHERE [ID] = 270;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     f.title  AS [Functions],     SUM((t.TSAItemFTECostForServiceDurationUSD + t.MarkupOnFTECostUSD + t.ExternalMaterialCostUSD) )AS [TSA Costs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND t.Duration IS NOT NULL GROUP BY  f.title'
WHERE [ID] = 272;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [TSA Items in Alignment phase for IT] FROM TSAItems TSA LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID WHERE Stg.[Key] = ''ALIGNMENT''       AND F.Title = ''{FunctionName}'''
WHERE [ID] = 279;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	  SELECT    t.Title AS [List all TSAs which are not getting settled in USD]    FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     	LEFT OUTER JOIN 	    TSACurrencies TSACurr  		    ON t.TSAItemLocalCurrencyId=TSACurr.ID 	LEFT OUTER JOIN Currencies Curr 	        ON TSACurr.CurrencyID=Curr.ID WHERE         Curr.Title<>''USD ($)''  	  AND s.title <> ''Canceled'''
WHERE [ID] = 296;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT WP._TemplateFile FROM WorkPlan WP'
WHERE [ID] = 310;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Cost Savings'''
WHERE [ID] = 319;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Revenue Growth'''
WHERE [ID] = 320;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''one-time'''
WHERE [ID] = 321;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Cost Savings'' AND VCI.ProjectTeam = ''IT'''
WHERE [ID] = 322;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''one-time'' AND VCI.ProjectTeam = ''Supply Chain'''
WHERE [ID] = 323;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N._TemplateFile FROM Nodes N'
WHERE [ID] = 327;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title FROM TSAItems TSA'
WHERE [ID] = 332;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title, TSA.ServiceInScopeDescription, TSA.[Function], TSA.SubFunction FROM TSAItems TSA'
WHERE [ID] = 333;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT WP._TemplateFile FROM WorkPlan WP'
WHERE [ID] = 336;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240619122747_AddTableAliasAndConfig', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DELETE FROM [AssistantSuggestions]
WHERE [ID] = 364;
SELECT @@ROWCOUNT;

GO

DELETE FROM [AssistantSuggestions]
WHERE [ID] = 365;
SELECT @@ROWCOUNT;

GO

DELETE FROM [AssistantSuggestions]
WHERE [ID] = 366;
SELECT @@ROWCOUNT;

GO

DELETE FROM [AssistantSuggestions]
WHERE [ID] = 367;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1 CAST(RP.PeriodEndDate AS DATE) AS WeeklyStatusDueDate  FROM ReportingPeriods RP WHERE CAST(GETDATE() AS DATE) BETWEEN CAST(RP.PeriodStartDate AS DATE) AND CAST(RP.PeriodEndDate AS DATE) ORDER BY RP.Modified DESC'
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1 PT.Title Team, SUM(Counts) TotalInterdependencies  FROM  (SELECT ProviderProjectTeamID TeamID, Count(ID) Counts  FROM Interdependencies I WHERE CAST(I.ItemDueDate AS DATE) < CAST(GETDATE() AS DATE) GROUP BY I.ProviderProjectTeamID  UNION ALL  SELECT ReceiverProjectTeamID, Count(ID)  FROM Interdependencies I WHERE CAST(I.ItemDueDate AS DATE) < CAST(GETDATE() AS DATE) GROUP BY I.ReceiverProjectTeamID ) SUB  JOIN ProjectTeams PT ON SUB.TeamID = PT.ID GROUP BY PT.Title ORDER BY TotalInterdependencies DESC'
WHERE [ID] = 25;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT WSS.Title StatusValue ,''CurrentStatus'' as Category FROM ProjectStatusEntries PSE  LEFT JOIN WeeklyStatusStatuses WSS ON WSS.ID=PSE.WeeklyStatusStatusId  LEFT JOIN ProjectTeams PT on PT.ID=PSE.ProjectTeamId  WHERE PSE.ReportingPeriodId=(SELECT TOP 1 RP.ID  FROM ReportingPeriods RP Where cast(RP.PeriodStartDate as date) <= cast(getDate() as date) Order BY RP.PeriodEndDate DESC) AND PT.Title like {ProjectTeam}  UNION SELECT WSS.Title StatusValue ,''PreviousStatus'' as Category  FROM ProjectStatusEntries PSE   LEFT JOIN WeeklyStatusStatuses WSS ON WSS.ID=PSE.WeeklyStatusStatusId  LEFT JOIN ProjectTeams PT on PT.ID=PSE.ProjectTeamId  WHERE PSE.ReportingPeriodId=(SELECT  RP.ID FROM   ReportingPeriods RP Where cast(RP.PeriodStartDate as date) <= cast(getDate() as date)  Order BY RP.PeriodEndDate DESC Offset 1 Rows FETCH NEXT 1 ROWS ONLY) AND  PT.Title like {ProjectTeam}'
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title as [List down all tasks associated with interdependencies]  from Workplan W where W.ID in  ( SELECT WTIR.WorkPlanId  FROM WorkPlansToInterdependenciesForReceiverTasks WTIR  UNION  select WTIP.WorkPlanId  FROM WorkPlansToInterdependenciesForProviderTasks WTIP) AND W.WorkPlanTaskType=''Task'''
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AN.Title, AN.AccomplishmentNextStepCategory FROM  ProjectStatusEntries  PSE   LEFT OUTER JOIN AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId      LEFT JOIN ProjectTeams PT ON PT.ID = PSE.ProjectTeamId      LEFT OUTER JOIN ReportingPeriods RP ON PSE.ReportingPeriodId = RP.ID  where AN.Title IS NOT NULL AND RP.PeriodStartDate = (    SELECT TOP 1 RP.PeriodStartDate    FROM ReportingPeriods RP   WHERE CAST (GETDATE() AS DATE) BETWEEN CAST(RP.PeriodStartDate AS DATE) AND CAST(RP.PeriodEndDate AS DATE)  )'
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ''Total Top Down Target'' AS KPI,  FORMAT((SUM(VTE.HeadcountCostReductionEst)+SUM(VTE.NonHeadcountCostReductionEst)+SUM(VTE.RevenueGrowthEstimate))/1000000,''N2'') AS ''Value (Million)''  FROM ValueCaptureTopDownEstimates VTE'
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(VTE.NonHeadcountCostReductionEst) + SUM(VTE.RevenueGrowthEstimate) + SUM(VTE.HeadcountCostReductionEst) ''Total Top Down Target Value'' FROM ValueCaptureTopDownEstimates VTE ', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(VTE.RevenueGrowthEstimate) RevenueGrowth,SUM(VTE.TotalCostReduction) CostReduction FROM ValueCaptureTopDownEstimates VTE'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) FROM ValueCaptureInitiatives VI WHERE VI.IsItemActive = 1'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title,SUM(ISNULL(VTE.NonHeadcountCostReductionEst,0)) + SUM(ISNULL(VTE.RevenueGrowthEstimate,0)) + SUM(ISNULL(VTE.HeadcountCostReductionEst,0)) AS TotalTopDownTarget  FROM ValueCaptureTopDownEstimates VTE LEFT JOIN ProjectTeams PT ON PT.ID = VTE.Projectteamid GROUP BY PT.Title'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) AS [Top Down targets #],         SUM(ISNULL(VTE.NonHeadcountCostReductionEst, 0)) AS [Total Non Headcount Cost Reduction Estimate],         SUM(ISNULL(VTE.RevenueGrowthEstimate, 0)) AS [Total Revenue Growth Estimate],         SUM(ISNULL(VTE.CostToAchieveEstimate, 0)) AS [Total Cost To Achieve Estimate],        SUM(ISNULL(VTE.HeadcountCostReductionEst, 0)) AS [Total Headcount Cost Reduction Estimate],         SUM(ISNULL(VTE.HeadcountCostReductionEst, 0)) + SUM(ISNULL(VTE.NonHeadcountCostReductionEst, 0))  + SUM(ISNULL(VTE.RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates VTE'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VTE.HeadcountCostReductionEst,0)) AS HeadcountCostReduction FROM ValueCaptureTopDownEstimates VTE'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(VTE.NonHeadcountCostReductionEst,0)) AS NonHeadcountCostReduction FROM  ValueCaptureTopDownEstimates VTE'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(VTE.RevenueGrowthEstimate,0)) AS RevenueGrowth FROM  ValueCaptureTopDownEstimates VTE'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(VTE.CostToAchieveEstimate,0)) AS CostToAchive FROM  ValueCaptureTopDownEstimates VTE'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     CONCAT(''Tracking Period of the Program is from '', CAST(MIN(VTM.StartDt) AS DATE), '' to '', CAST(MAX(VTM.EndDt) AS DATE)) FROM     ValueCaptureTransactionMonths VTM WHERE     VTM.IsItemActive = 1'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ISNULL(SUM(Est.Amount), 0.0) AS Estimates,        ISNULL(SUM(Act.Amount), 0.0) AS Actuals,        ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''Finance''           and VCI.Title = ''Initiative 1''           and Est.MYear = ''Y1M1'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''Finance''               AND VCI.Title = ''Initiative 1''               AND MYear = ''Y1M1''     ) Act         ON 1 = 1', [SuggestionText] = N'What is my Y1M1 Estimates, Actuals and Variance for Finance - [Initiative 1]?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID 	LEFT JOIN ValueCaptureTransactionMonths VT ON VT.[Key] = E.MYear      WHERE          E.Recurring = 1 		AND (CAST( DATEADD(MM, 3 , GETDATE()) AS DATE) BETWEEN VT.StartDt AND VT.EndDt)     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID  	LEFT JOIN ValueCaptureTransactionMonths VT ON VT.[Key] = A.MYear      WHERE          A.Recurring = 1  		AND (CAST( DATEADD(MM, 3 , GETDATE()) AS DATE) BETWEEN VT.StartDt AND VT.EndDt)     GROUP BY          A.ValueCaptureInitiativeId, B.Title )  SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , ABS(A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [SuggestionText] = N'List initiatives that had an Estimate ARR that differed by 10% (higher or lower) from the Actual ARR for previous month.'
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  ISNULL(SUM(UE.Amount)/1000000,0) AS TotalNetSales FROM ValueCaptureEstimates VE LEFT JOIN ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId WHERE FLT.Title = ''PnL'' AND FL.Title in (''Net sales'')', [SuggestionText] = N'In the PnL, what is my net sales?'
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS TotalOperatingPerformance FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL''  AND FLG.Title in (''Total Operating Performance'') ', [SuggestionText] = N'In the PnL, what is my total operating performance?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS GrossProfit FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL''  AND FLG.Title in (''Gross Profit'') ', [SuggestionText] = N'In the PnL, what is my gross profit?'
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [EBITA & Net Income] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL'' AND FLG.Title in (''EBITDA'',''Net Income'') ', [SuggestionText] = N'In the PnL, what is my EBITDA and Net Income?'
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Assets] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Total Current Assets'',''Total Non-Current Assets'') ', [SuggestionText] = N'In the Balance Sheet, what is my Total Assets?'
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Liabilities] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Total Current Liabilities'',''Total Non-Current Liabilities'') ', [SuggestionText] = N'In the Balance Sheet, what is my Total Liabilities?'
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Equity] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Equity'') ', [SuggestionText] = N'In the Balance Sheet, what is my Total Equity?'
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(VTE.NonHeadcountCostReductionEst) NonHeadcountCostReduction, SUM(VTE.HeadcountCostReductionEst) HeadcountCostReduction FROM ValueCaptureTopDownEstimates VTE', [SuggestionText] = N'What is the total of headcount and non-headcount related cost reduction?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH CTE AS  ( 	SELECT I.ProjectTeamId  	FROM ValueCaptureEstimates E 		LEFT JOIN ValueCaptureInitiatives I ON I.ID = E.ValueCaptureInitiativeId 	EXCEPT 	SELECT VCTDE.ProjectTeamId FROM ValueCaptureTopDownEstimates VCTDE )  SELECT PT.Title [ProjectTeam]  FROM CTE LEFT JOIN ProjectTeams PT ON PT.ID = CTE.ProjectTeamId', [SuggestionText] = N'List out teams that have bottom-up estimates but missing top-down targets.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' DECLARE @CurrentYR NVARCHAR(10), @SQL NVARCHAR(MAX)  SELECT  TOP 1 @CurrentYR = [YEAR] FROM vwValueCaptureTransactionMonths WHERE RelativeYear = YEAR(GETDATE())   SELECT @SQL = '' ;WITH TopDownCTE AS ( 	SELECT  		PT.ID  PROJECTTEAMID 		,PT.Title [ProjectTeam] 		,(SUM(ISNULL(VT.RevenueGrowthEstimate,0))  + SUM(ISNULL(VT.NonHeadcountCostReductionEst,0)) + SUM(ISNULL(VT.HeadcountCostReductionEst,0)))/1000000  [Target] 	FROM ValueCaptureTopDownEstimates VT 		LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId 	WHERE PT.ManageValueCapture = 1 	GROUP BY  		PT.ID  		,PT.Title 	UNION ALL 	SELECT  		-1 		,''''Overall'''' 		,(SUM(ISNULL(VT.RevenueGrowthEstimate,0))  + SUM(ISNULL(VT.NonHeadcountCostReductionEst,0)) + SUM(ISNULL(VT.HeadcountCostReductionEst,0)))/1000000  [Target] 	FROM ValueCaptureTopDownEstimates VT 		LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId 	WHERE PT.ManageValueCapture = 1 ) , BottomUPCTE AS ( 	SELECT  		VI.ProjectTeamId 		,PT.Title [ProjectTeam] 		,(SUM(ISNULL(E.''+@CurrentYR+''M12Estimate,0))*12)/1000000 [Estimate] 	FROM ValueCaptureEstimates E 	 JOIN ValueCaptureInitiatives VI ON VI.ID =E.ValueCaptureInitiativeId 	 LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId 	WHERE  		VI.IsItemActive = 1  		AND E.Recurring = 1  		AND PT.ManageValueCapture = 1 	GROUP BY  		VI.PROJECTTEAMID 		,PT.Title 	UNION ALL 	SELECT  		-1 		,''''Overall'''' 		,(SUM(ISNULL(E.''+@CurrentYR+''M12Estimate,0))*12)/1000000 [Estimate] 	FROM ValueCaptureEstimates E 	 JOIN ValueCaptureInitiatives VI ON VI.ID =E.ValueCaptureInitiativeId 	 LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId 	WHERE  		VI.IsItemActive = 1  		AND E.Recurring = 1  		AND PT.ManageValueCapture = 1 )  SELECT  	COALESCE(T.PROJECTTEAMID,B.PROJECTTEAMID) ProjectTeamID 	,COALESCE(T.ProjectTeam,B.ProjectTeam) ProjectTeam 	,ISNULL(T.[Target],0) [TopDown Target(M)] 	,ISNULL(B.Estimate,0) [BottomUP Estimate(M)] 	,ISNULL(T.[Target],0) - ISNULL(B.Estimate,0) [Variance(M)] FROM TopDownCTE T 	FULL OUTER JOIN BottomUPCTE B ON T.ProjectTeamId = B.ProjectTeamId ORDER BY ProjectTeamId''  EXEC sp_executesql  @SQL', [SuggestionText] = N'What is the variance between Top down and bottom up? Provide overall variance and variance by the team.'
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID     WHERE          E.Recurring = 1 		AND E.MYear IN (''Y1M12'')     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID     WHERE          A.Recurring = 1          AND A.MYear IN (''Y1M12'')     GROUP BY          A.ValueCaptureInitiativeId, B.Title )   SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , ABS(A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [SuggestionText] = N'List out initiatives that have an Estimate Annualized Run Rate that differed by 10% (higher or lower) from the Actual Annualized Run Rate for Y1M12.'
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  VC.Title AS ValueCaptureInitiativesReadyForApproval FROM  ValueCaptureInitiatives VC WHERE  VC.ReadyForApproval = 1', [SuggestionText] = N'List out validated initiatives that are ready to be approved.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 143;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      VI.title AS InitiativeImpactOnPnL FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId WHERE      FL.FinancialLineItemTypeId = 1 GROUP BY      VI.Title', [SuggestionText] = N'List out initiatives that are impacting PnL.'
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 5 A.Initiatives, A.Amount FROM( SELECT VI.Title Initiatives ,sum(VE.Amount) Amount FROM vwUnpivotActuals VE LEFT JOIN ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN ValueCaptureImpactTypes VIT ON VIT.ID = VE.ValueCaptureImpactTypeid GROUP BY VI.Title,VE.Amount ) A WHERE A.Amount > 0 ORDER BY A.Amount DESC', [SuggestionText] = N'List out top 5 initiatives that are positively impacting PnL.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 145;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT TOP 5  		VI.Title [top 5 initiatives with best benefit score] 	FROM  		ValueCaptureInitiatives VI 	LEFT JOIN  		ValueCaptureImpacts VIM ON VIM.ID = VI.ValueCaptureImpactid 	WHERE  		VIM.ID in (1) 	ORDER BY  		VI.BenefitScore DESC', [SuggestionText] = N'List out top 5 initiatives with best benefit score that have high financial impact.'
WHERE [ID] = 146;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT TOP 5  		VI.Title [top 5 most complex initiatives] 	FROM  		ValueCaptureInitiatives VI 	LEFT JOIN  		ValueCaptureImpacts VIM ON VIM.ID = VI.ValueCaptureImpactid 	WHERE  		VIM.ID in (3) 	ORDER BY  		VI.ComplexityScore DESC', [SuggestionText] = N'List out top 5 most complex initiatives that have low financial impact.'
WHERE [ID] = 147;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1  PT.Title, SUM(ISNULL(VTE.HeadcountCostReductionEst,0)) AS MostHeadcountCostReduction FROM   ValueCaptureTopDownEstimates VTE LEFT JOIN   ProjectTeams PT ON PT.ID = VTE.Projectteamid GROUP BY   PT.Title ORDER BY   SUM(ISNULL(VTE.HeadcountCostReductionEst,0)) DESC', [SuggestionText] = N'Which team has most amount of headcount related cost reduction?'
WHERE [ID] = 148;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Iniatives that are Cost Reduction and are Easy for Implementation Ease] FROM ValueCaptureInitiatives VI     LEFT JOIN ValueCaptureTypes VT         ON VT.ID = VI.ValueCaptureTypeID     LEFT JOIN ImplementationEase VD         ON VD.ID = VI.ImplementationEaseID WHERE VT.Title = ''Cost Reduction''       AND VD.Title = ''Easy''', [SuggestionText] = N'List all Iniatives that are Cost Reduction and are Easy for Implementation Ease.'
WHERE [ID] = 149;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VS.Title [Value Capture Stage],        VI.Title [Initiatives that have Talent intiative value drivers] FROM ValueCaptureInitiatives VI     LEFT JOIN ValueCaptureStages VS         ON VS.ID = VI.ValueCaptureStageID     LEFT JOIN ValueCaptureInitiativesToValueCaptureValueDriversForValueCaptureValueDrivers VD         ON VD.ValueCaptureInitiativeId = VI.ID     LEFT JOIN ValueCaptureValueDrivers VV         ON VD.ValueCaptureValueDriverId = VV.ID WHERE VV.Title = ''Talent'' ', [SuggestionText] = N'Provide me a list of Iniatives by stage that have Talent iniative value drivers.'
WHERE [ID] = 150;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VC.Title as [Value Capture Initiatives with No Owners] FROM ValueCaptureInitiatives as VC WHERE VC.ItemOwnerId IS NULL', [SuggestionText] = N'Show me all iniatives that do not have an owner.'
WHERE [ID] = 151;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      ISNULL(VP.Title, ''No Priority'') AS Category,     COUNT(VC.ID) AS Count,     ''Priority'' AS Type FROM      ValueCaptureInitiatives VC LEFT JOIN      ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId GROUP BY      VC.ValueCapturePriorityId, VP.Title  UNION ALL  SELECT      ISNULL(VS.Title, ''No Stage Assigned'') AS Category,     COUNT(VC.ID) AS Count,     ''Stage'' AS Type FROM      ValueCaptureInitiatives VC LEFT JOIN      ValueCaptureStages VS ON VS.ID = VC.ValueCaptureStageId WHERE      VC.ValueCaptureStageId IS NOT NULL GROUP BY      VC.ValueCaptureStageId, VS.Title;', [SuggestionText] = N'Provide me a count of initiatives by prioirty and stage.'
WHERE [ID] = 152;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT FL.Title [Balance sheet line items that do not have a linked account] FROM ValueCaptureFinancialLineItems FL     LEFT JOIN ValueCaptureFinancialLineItemTypes FLT         ON FLT.ID = FL.FinancialLineItemTypeID     LEFT JOIN BalanceSheetAccounts BLA         ON BLA.FinancialLineItemID = FL.ID WHERE FLT.Title = ''Balance Sheet''       AND BLA.ID IS NULL', [SuggestionText] = N'Show me all Balance sheet line items that do not have a linked account.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 153;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(E.Amount, 0) * 12) [Run Rate for iniatives in Approved, Committed and Realized] FROM ValueCaptureInitiatives VI LEFT JOIN vwUnpivotEstimates E ON E.ValueCaptureInitiativeId = VI.ID LEFT JOIN ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageID WHERE VS.Title IN ( ''Approved'', ''Committed'', ''Realized'' ) AND MYear = ( select VCTMK.[Key] from ValueCaptureTransactionMonths VCTMK where CAST(VCTMK.EndDt AS date) = (SELECT MAX(CAST(VCTM.EndDt AS date)) FROM ValueCaptureTransactionMonths VCTM))', [SuggestionText] = N'What is the Run Rate for iniatives in Approved, Committed and Realized?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 154;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team],        SUM(T.HeadCountCostReductionEst) [Total target Headcount cost redutciton] FROM ValueCaptureTopDownEstimates T     LEFT JOIN ProjectTeams PT         ON PT.ID = T.ProjectTeamId GROUP BY PT.Title', [SuggestionText] = N'Provide the total Headcount cost redutciton target listed out by project team and provide the number of FTEs.'
WHERE [ID] = 155;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(T.FTEs) [FTEs part of the top down targets for EMEIA] FROM ValueCaptureTopDownEstimates T     LEFT JOIN Regions R         ON R.ID = T.RegionID WHERE R.Title = ''EMEIA''', [SuggestionText] = N'How many FTEs are part of the top down targets for EMEIA?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 156;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiatives with Benefit score over 75] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId WHERE CAST(VI.BenefitScore AS INT) > 75 AND PT.Title IN (''HR'')', [SuggestionText] = N'Which HR iniatives have a benefit score over 75?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 157;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	VI.Title [Initiatives that have Risk associated with them] FROM 	ValueCaptureInitiatives VI LEFT JOIN  	ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageId LEFT JOIN  	RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs VIR ON VIR.ValueCaptureInitiativeId = VI.ID LEFT JOIN 	RisksAndIssues RI ON RI.ID = VIR.RisksAndIssueId WHERE  	RI.IssueRiskCategory IN (''Risk'') 	AND VS.Title IN (''Committed'')', [SuggestionText] = N'List out all Committed Iniatives that have a risk associated with them.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 158;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select Top 5 VC.Title, VS.Title, VC.BenefitScore From ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VS on VS.ID = VC.ValueCaptureStageId where VS.Title in (''Identified'') order by BenefitScore desc', [SuggestionText] = N'List all High Benefit iniatives that are in the Identified Stage.'
WHERE [ID] = 159;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	VI.Title [Initiative is Approved with no Owner] FROM 	ValueCaptureInitiatives VI LEFT JOIN  	ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageId WHERE  	VS.Title IN (''Approved'') 	AND 	VI.ItemOwnerId IS NULL', [SuggestionText] = N'Show me all iniatives that are approved and do not have an owner assigned.'
WHERE [ID] = 160;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	COUNT(VI.ID) FROM 	ValueCaptureInitiatives VI LEFT JOIN 	UserProfiles UP ON UP.ID = VI.ItemOwnerId WHERE  	UP.EMail = ''{Username}''', [SuggestionText] = N'How many iniatives are assigned to me?'
WHERE [ID] = 161;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PT.Title ProjectTeam,SUM(ISNULL(VTE.NonHeadcountCostReductionEst,0)) NonHeadcountCostReductionTarget  FROM   ValueCaptureTopDownEstimates VTE LEFT JOIN   ProjectTeams PT ON PT.ID = VTE.Projectteamid GROUP BY   PT.Title', [SuggestionText] = N'Provide the total non-headcount cost reduciton targets listed out by project team.'
WHERE [ID] = 162;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 163;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' ', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 164;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' ', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 165;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Day 1 processes? '
WHERE [ID] = 166;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Current State processes? '
WHERE [ID] = 167;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ns.Title, a.TotalCount FROM ( SELECT COUNT(Title) AS TotalCount, BusinessEntityId FROM Nodes nds WHERE NodeTypeId = 3 GROUP BY BusinessEntityId ) a INNER JOIN Nodes ns ON a.BusinessEntityId = ns.ID', [SuggestionText] = N'Can you provide me number of processes by op model?'
WHERE [ID] = 168;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ns.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ns ON a.BusinessEntityId = ns.ID ', [SuggestionText] = N'How many processes we have in current state?'
WHERE [ID] = 169;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ns.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ns ON a.BusinessEntityId = ns.ID ', [SuggestionText] = N'How many processes we have in Day1 state?'
WHERE [ID] = 170;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''  AND N.NodeTypeId = 3  AND N.ID NOT IN (   SELECT DISTINCT NTO.NodeId   FROM Nodes N1   LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null  )', [SuggestionText] = N'How many processes don''t have an Owner assigned in Current State?'
WHERE [ID] = 171;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.ID 	,PR.Title FROM Nodes PR JOIN TransactionStates T ON T.ID = PR.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' 	AND PR.NodeTypeId = 3 	AND NOT EXISTS  				(SELECT 1 FROM [NodesToDispositionsForDispositionNew] D WHERE D.NodeId = PR.ID)', [SuggestionText] = N'List processes that don''t have Disposition assigned in Day 1 state.'
WHERE [ID] = 172;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM Dispositions d', [SuggestionText] = N'List the Disposition options available.'
WHERE [ID] = 173;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [ProcessGroup] ,COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) [Enablers Count] FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 2 GROUP BY N.Title ORDER BY [Enablers Count] DESC', [SuggestionText] = N'How many enablers are associated with each Process Group?'
WHERE [ID] = 174;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title [Disposition] 	,COUNT(SD.SystemId) [SystemCount] FROM Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID GROUP BY D.Title', [SuggestionText] = N'List the total number of systems by disposition.'
WHERE [ID] = 175;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT PR.Title [Process] , D.DispositionId FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId  	LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 	AND D.NodeId IS NULL 	AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'Can you please list down all Day 1 processes where no disposition has been tagged?'
WHERE [ID] = 176;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT 	N.Title [Process]	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 3 GROUP BY N.Title HAVING COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) = 0', [SuggestionText] = N'Can you please list all processes with no Enablers?'
WHERE [ID] = 177;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.Title as MissingInDay1 FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''CURRENT_STATE'' EXCEPT SELECT 	PR.Title [Process] FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'Can you please compare the Current state & day 1 operating model and list all processes which are missing in Day1 as compared to current state?'
WHERE [ID] = 178;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title Enabler, ''Asset'' as Category	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID LEFT JOIN [Assets] A ON A.ID = NA.AssetsId WHERE A.Title IS NOT NULL UNION ALL SELECT DISTINCT F.Title Enabler, ''Facility'' as Category FROM Nodes N LEFT JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID LEFT JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE F.Title IS NOT NULL  UNION ALL SELECT DISTINCT S.Title Enabler , ''System'' as Category FROM Nodes N LEFT JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID LEFT JOIN [Systems] S ON S.ID = NS.SystemsId WHERE S.Title IS NOT NULL  UNION ALL SELECT DISTINCT T.Title Enabler	, ''TPA'' as Category FROM Nodes N LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID LEFT JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId WHERE T.Title IS NOT NULL ', [SuggestionText] = N'What Enablers are we tracking for this project?'
WHERE [ID] = 179;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# Systems present in this functional OP model] FROM Systems s', [SuggestionText] = N'How many Systems are there in this functional op model?'
WHERE [ID] = 180;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# TPAs present in this functional OP model] FROM ThirdPartyAgreements tpa', [SuggestionText] = N'How many TPAs are there in this functional op model?'
WHERE [ID] = 181;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ST.Title AS SystemType, COUNT(S.ID) [# Systems by Type] FROM Systems S LEFT JOIN SystemTypes ST ON ST.ID = S.TypeId WHERE S.TypeId IS NOT NULL GROUP BY ST.Title', [SuggestionText] = N'List the number of Systems by Type.'
WHERE [ID] = 182;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT O.Title AS Owners, Count(*) AS [# TPAs by Ownership] FROM ThirdPartyAgreements TP LEFT JOIN Owners O ON O.ID = TP.OwnerID WHERE TP.OwnerID IS NOT NULL GROUP BY O.Title', [SuggestionText] = N'List the number of TPAs by Ownership.'
WHERE [ID] = 183;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [ProcessGroups With No Process] FROM Nodes N WHERE N.nodetypeid = 2 AND ID NOT IN (SELECT ns.NodeParentId FROM Nodes ns)', [SuggestionText] = N'List down all process groups with no process within them.'
WHERE [ID] = 184;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(P.[ID]) AS [Number of Process across Op Model] FROM Nodes P     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = ''Process''', [SuggestionText] = N'List the number of processes across op models.'
WHERE [ID] = 185;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog opma WHERE Modified >= DATEADD(hh, -1, GETDATE())', [SuggestionText] = N'List history of changes to the op model in the past one hour.'
WHERE [ID] = 186;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog opma WHERE FieldImpacted = ''Owner''       AND CAST(Modified AS DATE) = CAST(GETDATE() AS DATE)', [SuggestionText] = N'List the history of changes to Ownership in the op model today.'
WHERE [ID] = 187;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog opma WHERE Title = ''Deleted''       AND DATEPART(wk, CAST(Modified AS DATE)) = DATEPART(wk, CAST(GETDATE() AS DATE))       AND YEAR(Modified) = YEAR(GETDATE())', [SuggestionText] = N'List the history of deletes in the op model this week.'
WHERE [ID] = 188;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title [State], N.Title AS OperatingModel FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId  WHERE N.NodeTypeId = 1', [SuggestionText] = N'List the functional operating models across different states.'
WHERE [ID] = 189;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title Opmodel, L.Title LiveNote, Note FROM OperatingModelLiveNotes L LEFT JOIN Nodes N ON N.Id = L.NodeId', [SuggestionText] = N'Are there any Live Notes in this op model?'
WHERE [ID] = 190;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process FROM OperatingModelActivityLog OL  LEFT JOIN Nodes N ON N.ID = Ol.ObjectID WHERE OL.Title = ''Updated'' AND Object = ''Process'' AND (CAST(OL.Modified AS DATE) BETWEEN DATEADD(DAY, -7, CAST(GETDATE()AS DATE))  AND CAST(GETDATE() AS DATE))', [SuggestionText] = N'List down all processes which were updated since last 1 week.'
WHERE [ID] = 191;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process, OldValue, NewValue  FROM OperatingModelActivityLog PL  LEFT JOIN Nodes N ON N.ID = PL.ObjectID  WHERE Object = ''Process'' AND PL.Title = ''Updated'' AND FieldImpacted = ''Title'' AND N.TransactionStateId = 6', [SuggestionText] = N'List down all processes which have been renamed in Day 1 op model.'
WHERE [ID] = 192;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 5     S.Title AS [Systems],     Count(NSS.NodesID) AS [ProcessCount] FROM Nodes N     LEFT JOIN [dbo].[NodesToSystemsForEnablerSystems] NSS         ON N.ID = NSS.NodesId     LEFT JOIN [dbo].[Systems] S         ON NSS.SystemsId = S.ID WHERE N.NodeTypeId = 3 GROUP BY S.Title ORDER BY Count(NSS.NodesID) DESC', [SuggestionText] = N'Please provide top 5 systems that are linked to various processes.'
WHERE [ID] = 193;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [List of processes for CurrentState where ownership is not present] FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''   AND N.NodeTypeId = 3   AND N.ID NOT IN (     SELECT DISTINCT NTO.NodeId     FROM Nodes N1     LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null   )', [SuggestionText] = N'For Current State, list all processes that doesn''t have any ownership.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 194;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT PR.Title [Process] FROM Nodes PR     JOIN TransactionStates  S  ON S.ID = PR.TransactionStateId    LEFT JOIN  NodesToDispositionsForDispositionNew D             ON D.NodeId = PR.ID WHERE     PR.NodeTypeId = 3     AND D.NodeId IS NULL     AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'For Day 1 Operating Models, list all processes that doesn''t have any dispositions.'
WHERE [ID] = 195;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes  n   WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,  nds.Title,   nds.NodeParentID, nds.NodeTypeId, HierId = HierId + 1     FROM Nodes nds, GetSelectedFunction  where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  , ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID     FROM     (SELECT * FROM PG_Hierarchy pgh WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT TOP 1     Functions AS [Function with highest number of processes] FROM (     SELECT Functions,            COUNT(ID) as [Process Count]     FROM ProcessCTE  tc   GROUP BY Functions ) A order by [Process Count] desc    ', [SuggestionText] = N'Which function has the highest number of processes?'
WHERE [ID] = 196;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Processes with Disposition as TSA] FROM   Nodes   N   LEFT JOIN     NodesToDispositionsForDispositionNew NTD             ON NTD.NodeId = N.ID     LEFT JOIN         Dispositions  D ON NTD.DispositionId = D.ID WHERE     D.Title = ''TSA''     AND N.NodeTypeId = 3', [SuggestionText] = N'List down all Processes which have their disposition set as TSA.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 197;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title as [List of Processes with No Disposition] FROM Nodes N WHERE N.NodeTypeId=3 AND N.ID NOT IN (SELECT NodeId FROM NodesToDispositionsForDispositionNew ndd)', [SuggestionText] = N'List down all processes with no Disposition assigned.'
WHERE [ID] = 198;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1)  [No. of Processes] FROM Nodes PR JOIN NODES P ON PR.NodeParentID = P.ID WHERE PR.NodeTypeId = 3 AND P.Title = ''{FunctionName}''', [SuggestionText] = N'How many processes are there in the IT function?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 199;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PR.Title [Process] , COUNT(DISTINCT D.DispositionId) [DispostionCount] FROM Nodes PR JOIN NODES P ON PR.NodeParentID = P.ID LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 AND P.Title = ''COMMERCIAL'' GROUP BY PR.Title HAVING COUNT(DISTINCT D.DispositionId) > 1', [SuggestionText] = N'List processes that have more than 1 disposition in IT.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 200;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.NodeTypeId,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ), ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID AS [ProcessID]     FROM     (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT ISNULL(Geo.Title, ''Not Assigned'') AS [Geographic Coverages],        COUNT(P.ProcessID) AS [Total Number of Process in Real Estate] FROM ProcessCTE P     LEFT JOIN ProcessAttributes PA         ON P.ProcessID = PA.NodeId     LEFT JOIN GeographicCoverages Geo         ON PA.GeographicCoverageId = Geo.ID WHERE P.Functions =''{FunctionName}'' GROUP BY Geo.Title', [SuggestionText] = N'What is total number of processes in Real Estate grouped by geographic coverage?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 201;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,            HierId = HierId + 1     FROM Nodes nds,          PG_Hierarchy     WHERE nds.NodeParentID = PG_Hierarchy.id    ) SELECT DISTINCT      F.Title AS [Functions],     SF.[Title] AS  [Subfunctions] FROM (SELECT * FROM PG_Hierarchy pg WHERE HierId = 2) F     LEFT JOIN     (SELECT * FROM PG_Hierarchy pg WHERE HierId = 3) SF         ON F.ID = SF.NodeParentID ORDER BY 1,          2', [SuggestionText] = N'List all functions and sub-functions for functional operating model [Name].'
WHERE [ID] = 202;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     O.Title     AS [Process Owner],     COUNT(N.ID) AS [Process Distribution] FROM     Nodes      N     LEFT JOIN         Owners O             ON N.OwnerId = O.ID WHERE     N.NodeTypeId = 3 GROUP BY     O.Title ', [SuggestionText] = N'Provide process owner distribution for my project.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 203;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes  nd   WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,            HierId = HierId + 1     FROM Nodes nds,          PG_Hierarchy     WHERE nds.NodeParentID = PG_Hierarchy.id    ) SELECT DISTINCT      SF.[Title] AS  [Subfunctions] FROM (SELECT * FROM PG_Hierarchy pg WHERE HierId = 2) F     LEFT JOIN     (SELECT * FROM PG_Hierarchy pg WHERE HierId = 3) SF         ON F.ID = SF.NodeParentID WHERE F.Title=''{FunctionName}'' ORDER BY 1', [SuggestionText] = N'List all sub-functions for Finance.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 204;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.NodeTypeId,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  ,        ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID AS [ProcessID]     FROM     (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT P.Processes,        ISNULL(S.Title, ''Not Assigned'') AS [Systems],        ISNULL(TPA.Title, ''Not Assigned'') AS [Third Party Agreements] FROM ProcessCTE P     LEFT JOIN NodesToThirdPartyAgreementsForEnablerTpa NTPA         ON P.ProcessID = NTPA.NodesId     LEFT JOIN ThirdPartyAgreements TPA         ON NTPA.ThirdPartyAgreementsId = TPA.ID     LEFT JOIN NodesToSystemsForEnablerSystems NSys         ON NSys.NodesId = P.ProcessID     LEFT JOIN Systems S         ON NSys.SystemsId = S.ID', [SuggestionText] = N'List all details for processes and systems, third party agreements linkages.'
WHERE [ID] = 205;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT A.Title Assest,        P.Title LinkedProcess FROM Assets A     LEFT JOIN ProcessAssetLinks PA         ON PA.AssetId = A.ID     LEFT JOIN Nodes P         ON P.ID = PA.ProcessId     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = ''Process''', [SuggestionText] = N'List the Assets and their linked processes.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 206;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title OpModel, BP.Title  EndToEndProcess FROM BusinessProcesses BP  LEFT JOIN Nodes N ON N.ID = BP.NodeId  WHERE N.NodeTypeId = 1', [SuggestionText] = N'Are there any end-to-end business processes in this op model?'
WHERE [ID] = 207;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL           AND TransactionStateID = 8     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ) SELECT N.Title [Function],        NTSS.Title AS [Field Status],        OPS.Title AS [Op Status] FROM NodeTrackers NT     LEFT JOIN NodeTrackerStatuses NTS         ON NTS.NodeTrackerID = NT.ID     JOIN     (SELECT * FROM GetSelectedFunction gsf WHERE HierId = 2 and Title = ''HR'') N         ON N.ID = NT.NodeId     LEFT JOIN NodeTrackerStatusFields NTSS         ON NTSS.ID = NTS.NodeTrackerStatusFieldId     LEFT JOIN OpStatuses OPS         ON OPS.ID = NTS.NodeTrackerStatusStatusId', [SuggestionText] = N'In the Progress Tracker, what is the current status of HR?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 208;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL           AND TransactionStateID = 6     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM Nodes ROOT     WHERE ROOT.ID in (select ID from GetSelectedFunction gsf where HierId = 2 and Title = ''Finance'' )     UNION ALL     SELECT CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ) SELECT COUNT(*) AS [Process with multiple dispositions for Finance] FROM PG_Hierarchy pg WHERE NodeTypeId = 3       AND ID IN (                     SELECT NodeID                     FROM                     (                         SELECT NodeId,                                Count(DispositionID) As [Disposition Count]                         FROM NodesToDispositionsForDispositionNew   ndf     GROUP BY NodeId                         HAVING Count(DispositionID) > 1                     ) a                 )', [SuggestionText] = N'In Finance, how many processes have multiple dispositions?'
WHERE [ID] = 209;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Process which doesn''''t have ownership] FROM     Nodes                 N     JOIN         TransactionStates T             ON T.ID = N.TransactionStateId WHERE     OwnerId IS NULL     AND N.NodeTypeId = 3', [SuggestionText] = N'List down all processes with no Owners assigned.'
WHERE [ID] = 210;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes with more than one Disposition] FROM Nodes N WHERE N.NodeTypeId = 3       AND N.ID IN ( SELECT NodeID   FROM   (    SELECT NodeId, COUNT(DispositionID) AS [Disposition Count]                           FROM NodesToDispositionsForDispositionNew    ndf                       GROUP BY NodeId                           HAVING COUNT(DispositionID) > 1                       ) a                   ) ', [SuggestionText] = N'List down all processes with more than one Disposition associated with them.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 211;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT ID,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes  nd   WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.ID,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, TransactionStateID) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.TransactionStateID     FROM Nodes ROOT     WHERE ROOT.ID IN (                          SELECT ID                          FROM GetSelectedFunction         gsf                 WHERE HierId = 2                                AND Title = ''{FunctionName}''                                AND TransactionStateId = 6                      )     UNION ALL     SELECT CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.TransactionStateId     FROM PG_Hierarchy PARENT,          Nodes CHILD     WHERE PARENT.id = CHILD.NodeParentID    ) SELECT Title AS [List of Processes Associated with Legal Function] FROM PG_Hierarchy pgh ORDER BY ID,          title DESC ', [SuggestionText] = N'Can you please list all processes associated with Legal function?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 212;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of all Processes associated with APAC] FROM     Nodes       N     LEFT JOIN         Regions R             ON N.CountryRegionID = R.ID WHERE     n.NodeTypeId = 3     AND R.Title = ''{Region}''', [SuggestionText] = N'Can you please list all processes associated with APAC?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 213;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nd WHERE NodeParentID IS NULL  UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes FROM (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT P.Functions, A.Processes  FROM (SELECT DISTINCT [Processes]  		FROM ProcessCTE 	pte	GROUP BY Processes  		HAVING COUNT(DISTINCT [Functions] ) > 1) A  	LEFT JOIN ProcessCTE P ON P.Processes = A.Processes ', [SuggestionText] = N'Can you please list all processes with same names across different functions?'
WHERE [ID] = 214;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     [List of Processes with same name] FROM     (         SELECT             N.Title  AS [List of Processes with same name],             Count(1) AS [Repeat Count]         FROM             Nodes N         WHERE             N.NodeTypeId = 3         GROUP BY             N.Title         HAVING             COUNT(*) > 1     ) a ORDER BY     1 ', [SuggestionText] = N'Can you please list all processes with same name?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 215;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes tagged as ParentCo in Current State with Disposition set as TSA ] FROM Nodes N     LEFT JOIN NodesToOwnersForOwnerNew NTO         on N.ID = NTO.NodeId     LEFT JOIN Owners O         ON O.ID = NTO.OwnerId     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID     LEFT JOIN TransactionStates TS         ON N.TransactionStateId = TS.ID     LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND TS.[Key] = ''CURRENT_STATE''       AND O.Title = ''Parent Co''       AND D.Title = ''TSA''', [SuggestionText] = N'Can you please list the processes which are tagged as ''ParentCo'' in Current state having disposition set as ''TSA''?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 216;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Systems not tagged in any process] FROM     Systems s WHERE     ID NOT IN (                   SELECT DISTINCT                       SystemsId                   FROM                       Nodes                               N                       LEFT JOIN                           NodesToSystemsForEnablerSystems NSS                               ON N.ID = NSS.NodesId  					  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId                    WHERE T.Title= ''Day 1'' AND                        N.NodeTypeId = 3               )', [SuggestionText] = N'can you please list all systems which are not tagged to any process in Day 1 op model?'
WHERE [ID] = 217;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     ISNULL(ST.Title, ''System Type Not Assigned'') AS [SystemsType],     S.Title                                      AS [Systems] FROM     Systems         S     LEFT JOIN         SystemTypes ST             ON S.TypeId = ST.ID', [SuggestionText] = N'Can you please provide of all systems based upon their type?'
WHERE [ID] = 218;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nd  WHERE NodeParentID IS NULL  UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF LEFT JOIN (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number for Multiple Deposition]  FROM ProcessCTE p WHERE ID IN ( SELECT NodeID FROM ( SELECT NodeId,    Count(DispositionID) As [Disposition Count] FROM NodesToDispositionsForDispositionNew ndn GROUP BY NodeId HAVING Count(DispositionID) > 1 ) a ) GROUP BY [Functions] ORDER BY  COUNT(*) DESC', [SuggestionText] = N'Which function has the highest number of multi disposition processes?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 219;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes n   WHERE NodeParentID IS NULL   UNION ALL         SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   WHERE nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2    UNION ALL         SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  WHERE  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS (  SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy gg WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number of Live Without]  FROM ProcessCTE pp WHERE ID IN (	SELECT NodeId 				FROM NodesToDispositionsForDispositionNew ND  				LEFT JOIN Dispositions D ON D.ID = DispositionID  				WHERE D.Title = ''Live without''			 				) GROUP BY [Functions] ORDER BY  COUNT(*) DESC', [SuggestionText] = N'which function has the highest number of ''Live without''?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 220;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nd  WHERE NodeParentID IS NULL  UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy pp WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy pp WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number of Processes tagged to them] , COUNT(*)  [No of Processes] 				FROM ProcessCTE 	ppt	GROUP BY [Functions] 				ORDER BY  COUNT(*) DESC    ', [SuggestionText] = N'Which function has the highest number of processes tagged to them? and how many?'
WHERE [ID] = 221;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes   n  WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,             HierId = HierId + 1     FROM Nodes nds,          PG_Hierarchy     WHERE nds.NodeParentID = PG_Hierarchy.id    ),       ProcessCTE AS (SELECT DISTINCT          F.Title AS [Functions],         f.id AS FunctionID     FROM     (SELECT * FROM PG_Hierarchy pp WHERE HierId = 2) F         LEFT JOIN         (SELECT * FROM PG_Hierarchy gg WHERE HierId = 3) SF             ON F.ID = SF.NodeParentID    ) SELECT Top 1     Functions as [Function with Highest Number of Enablers],     [Enablers Count] FROM (     SELECT P.Functions,            COUNT(DISTINCT TPA.ID) + COUNT(DISTINCT S.ID) + COUNT(DISTINCT Asset.ID) + COUNT(DISTINCT Roles.ID) AS [Enablers Count]     FROM ProcessCTE P         LEFT JOIN NodesToThirdPartyAgreementsForEnablerTpa NTPA           ON P.FunctionID = NTPA.NodesId         LEFT JOIN ThirdPartyAgreements TPA             ON NTPA.ThirdPartyAgreementsId = TPA.ID          LEFT JOIN NodesToSystemsForEnablerSystems NSys              ON NSys.NodesId = P.FunctionID         LEFT JOIN Systems S             ON NSys.SystemsId = S.ID         LEFT JOIN NodesToAssetsForEnablerAssets NAsset              ON NAsset.NodesId = P.FunctionID         LEFT JOIN Assets Asset             ON Asset.ID = NAsset.AssetsId          LEFT JOIN NodesToRolesForEnablerRoles NRole --Roles              ON NAsset.NodesId = P.FunctionID         LEFT JOIN OrgRolesMaster Roles             ON Roles.ID = NRole.RolesId     GROUP BY P.Functions ) A ORDER BY [Enablers Count] DESC', [SuggestionText] = N'Which function has the highest number of enablers tagged to them? and how many?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 222;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID,  HierId = 1 FROM Nodes n WHERE NodeParentID IS NULL    UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,    HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy(NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM Nodes ROOT   WHERE ROOT.ID in (select ID from GetSelectedFunction g where HierId=2 and Title=''Finance & Accounting'')       UNION ALL        SELECT  CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  )   SELECT PG.Title, OldValue, NewValue  FROM PG_Hierarchy PG  JOIN (SELECT PL.ObjectID, OldValue, NewValue 			FROM OperatingModelActivityLog PL 			WHERE Object = ''Process'' AND Title = ''Updated'' AND PL.Modified = ( 			SELECT  Max(Modified) Modified FROM OperatingModelActivityLog  	op		WHERE ObjectID IN (SELECT ID FROM PG_Hierarchy PG WHERE NodeTypeId=3 )  			AND Object = ''Process'' AND Title = ''Updated'')) A ON A.ObjectID = PG.ID', [SuggestionText] = N'Which process within Finance has been updated most recently and what was the updates?'
WHERE [ID] = 223;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Process Associated with Workplan] FROM     Nodes                       N     LEFT JOIN         NodesToWorkPlansForTask NWP             ON N.ID = NWP.NodeId     LEFT JOIN         WorkPlan                WP             ON NWP.WorkPlanId = WP.ID WHERE     N.NodeTypeId = 3', [SuggestionText] = N'How many processes have been associated with a workplan item?'
WHERE [ID] = 224;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(DISTINCT n.ID) AS [No of Process having 2 owners or Dispositions] FROM Nodes n LEFT JOIN (     SELECT NodeId     FROM NodesToDispositionsForDispositionNew  nn   GROUP BY NodeId     HAVING COUNT(DispositionID) = 2 ) d ON n.ID = d.NodeId LEFT JOIN (     SELECT NodeID     FROM NodesToOwnersForOwnerNew  no   GROUP BY NodeID     HAVING COUNT(OwnerId) = 2 ) o ON n.ID = o.NodeID WHERE n.NodeTypeId = 3 AND (d.NodeId IS NOT NULL OR o.NodeID IS NOT NULL)', [SuggestionText] = N'How many processes have 2 owners or dispositions? ', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 225;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	COUNT(SD.SystemId) [No of Systems are dispositioned rebuild] FROM  Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID WHERE D.Title = ''Rebuild''', [SuggestionText] = N'How many systems are dispositoned Rebuild?'
WHERE [ID] = 226;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT O.Title [Owners], COUNT(N.ID) [No of Processes]  FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID  LEFT JOIN NodesToOwnersForOwnerNew NOS ON NOS.NodeId = N.ID  LEFT JOIN Owners O ON O.ID = NOS.OwnerId  WHERE NT.Title = ''Process''  GROUP BY O.Title', [SuggestionText] = N'Provide a count of all processes by owner.'
WHERE [ID] = 227;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	R.Title Regions 	, COUNT(D.DispositionId) [Count of Disposition]  FROM NodesToDispositionsForDispositionNew D     JOIN Nodes N ON D.NodeId = N.ID 	JOIN TransactionStates S ON S.ID = N.TransactionStateId  	LEFT JOIN NodeTypes NT ON NT.ID = N.NodeTypeId  	LEFT JOIN Regions R ON R.ID = N.CountryRegionID  WHERE NT.Title = ''Process''  	AND S.[Key] = ''DAY_ONE'' GROUP BY R.Title', [SuggestionText] = N'Show me the count of dispositions in Day 1 model by assigned region.'
WHERE [ID] = 228;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Processes with no owner assigned] FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process''    AND N.ID NOT IN (     SELECT DISTINCT NTO.NodeId     FROM Nodes N1     LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	WHERE NTO.NodeId is not null   )', [SuggestionText] = N'List all processes that do not have an owner assigned.'
WHERE [ID] = 229;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title AS [List of Teams with Disposition set as Unidentified] FROM Nodes N     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID 	LEFT JOIN  NodesToProjectTeamsForProjectTeam NP 	    ON N.ID = NP.NodesId  	LEFT JOIN ProjectTeams PT 	    ON PT.ID = NP.ProjectTeamsId      LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND D.Title = ''Unidentified''', [SuggestionText] = N'Which teams have processes that are disposition ''Unidentified''?'
WHERE [ID] = 230;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Processes with total headcount greater than 0] FROM Nodes N     LEFT JOIN vwHeadcount H         ON H.NodeId = N.ID     LEFT JOIN Nodetypes NT         ON NT.ID = N.NodeTypeId GROUP BY N.Title HAVING SUM(ISNULL(H.TotalHeadCount, 0)) > 0', [SuggestionText] = N'List all processes with total headcount greater than 0.'
WHERE [ID] = 231;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title [Facilities in North America that are leased or owned]   FROM Facilities F  LEFT JOIN FacilityOccupancyTypes FT ON FT.ID = F.FacilityOccupancyTypeID  LEFT JOIN Countries C ON C.ID = F.CountryID  LEFT JOIN Regions R ON R.ID = C.CountryRegionID WHERE FT.Title IN (''Leased'', ''Owned'') AND R.Title = ''North America''', [SuggestionText] = N'List all Facilities in North America that are leased or owned.'
WHERE [ID] = 232;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(N.ID) [No of Proccesses to which TPA is assigned] FROM NodesToThirdPartyAgreementsForEnablerTpa NTP  INNER JOIN Nodes N ON N.ID = NTP.NodesId  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process''', [SuggestionText] = N'How many processes have a TPA assigned to them? '
WHERE [ID] = 233;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Enabler [Enabler with linked processes] FROM( SELECT DISTINCT A.Title Enabler 	 FROM Nodes N LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID INNER JOIN [Assets] A ON A.ID = NA.AssetsId  WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT F.Title Enabler FROM Nodes N LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID INNER JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT S.Title Enabler  FROM Nodes N  LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID INNER JOIN [Systems] S ON S.ID = NS.SystemsId WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT T.Title Enabler	 FROM Nodes N  LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID INNER JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId  WHERE NTT.Title = ''Process''   ) A', [SuggestionText] = N'Show me all enablers that have a linked process.'
WHERE [ID] = 234;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes with Disposition set as TSA ] FROM Nodes N     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID     LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND D.Title = ''TSA''', [SuggestionText] = N'List all processes that have the disposition TSA.'
WHERE [ID] = 235;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(N.ID) AS [No of Processes are Live Without]  FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process'' AND N.ID IN (	SELECT NodeId 				FROM NodesToDispositionsForDispositionNew ND  				LEFT JOIN Dispositions D ON D.ID = DispositionID  				WHERE D.Title = ''Live without''			 				) ', [SuggestionText] = N'How many processes are Live without? '
WHERE [ID] = 236;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Systems being used by Project Team and Process Group] FROM     Systems s WHERE  ID IN (                   SELECT DISTINCT                       SystemsId                   FROM                       Nodes N                       LEFT JOIN NodesToSystemsForEnablerSystems NSS                        ON N.ID = NSS.NodesId  					  LEFT JOIN  NodesToProjectTeamsForProjectTeam NP 					  ON N.ID = NP.NodesId  					  LEFT JOIN NodeTypes NT ON NT.ID = N.NodeTypeId                    WHERE  NT.Title IN (''ProcessGroup'')               )	', [SuggestionText] = N'List out the systems being used by Project Team and Process Group.'
WHERE [ID] = 237;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Process groups are not started on Followup Calls for Current State] FROM Nodes N     LEFT JOIN Nodetypes NT         ON NT.ID = N.NodeTypeId     LEFT JOIN NodeTrackers NTC         ON NTC.NodeID = N.ID     LEFT JOIN NodeTrackerStatuses NTS         ON NTS.NodeTrackerID = NTC.ID     LEFT JOIN TransactionStates T         ON T.ID = N.TransactionStateID WHERE N.NodeOnTracker = 1       AND NT.Title = ''Process Group''       AND T.[Key] = ''CURRENT_STATE''       AND N.ID NOT IN (                           SELECT N.ID ProcessGroupID                           FROM Nodes N                               LEFT JOIN Nodetypes NT                                   ON NT.ID = N.NodeTypeId                               LEFT JOIN NodeTrackers NTC                                   ON NTC.NodeID = N.ID                               LEFT JOIN NodeTrackerStatuses NTS                                   ON NTS.NodeTrackerID = NTC.ID                               LEFT JOIN TransactionStates T                                   ON T.ID = N.TransactionStateID                           WHERE N.NodeOnTracker = 1                                 AND NT.Title = ''Process Group''                                 AND T.[Key] = ''CURRENT_STATE''                                 AND NTS.Title = ''FollowUp Call''                       )', [SuggestionText] = N'Which process groups are not started on Followup Calls for Current State?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 238;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes n    WHERE NodeParentID IS NULL      UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ) SELECT O.Title [Client Owner for HR] FROM GetSelectedFunction N 	LEFT JOIN NodesToOwnersForOwnerNew NOS ON NOS.NodeId = N.ID  	LEFT JOIN Owners O ON O.ID = NOS.OwnerId  WHERE N.HierId = 2 AND N.Title = ''HR''', [SuggestionText] = N'Who is the Client owner for HR?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 239;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 240;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Show me the count of TSAs by sub function.'
WHERE [ID] = 241;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', [SuggestionText] = N'Give me the list of TSAs by Provider.'
WHERE [ID] = 242;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', [SuggestionText] = N'Give me the list of TSAs by Receiver.'
WHERE [ID] = 243;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', [SuggestionText] = N'Can you provide me list of TSAs by phases?'
WHERE [ID] = 244;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', [SuggestionText] = N'Show me the breakdown of TSAs by duration.'
WHERE [ID] = 245;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', [SuggestionText] = N'How many TSAs does each team have?'
WHERE [ID] = 246;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    TST.Title as [Phase],    COUNT(TC.ID) AS [# TSAs across different phases] FROM    TSAItems TC    LEFT JOIN TSAPhases TST ON TC.PhaseID = TST.ID  Group BY    TST.Title ', [SuggestionText] = N'List the number of TSAs across different phases.'
WHERE [ID] = 247;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    T.Title PendingTSAItems  FROM    TSAItems T    JOIN TSAStatuses TS ON T.TSAItemTSAStatusId = TS.ID  WHERE    T.AuthorId = ''{Username}''    AND TS.[key] = ''ACTIVE'' ', [SuggestionText] = N'How many pending TSA items do I have?'
WHERE [ID] = 248;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Title as [Billing Period Name],    DeadlineDate as [Contribution Deadlines]  FROM    TSABillingPeriods tb', [SuggestionText] = N'In Cost Tracking, how is my billing periods setup?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 249;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT    Title AS [TSA Phases]  FROM TSAPhases tp', [SuggestionText] = N'What are the different TSA phases in my project?'
WHERE [ID] = 250;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ProviderLegalEntityId = L.ID where  L.ServiceLocation is not null UNION  SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ReceiverLegalEntityId = L.ID   where  L.ServiceLocation is not null ', [SuggestionText] = N'List the TSA service locations in my project.'
WHERE [ID] = 251;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs],     s.Title   AS [TSA Statuses] FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID     LEFT JOIN         Functions   F             ON TSA.FunctionId = F.ID WHERE     F.Title = ''{FunctionName}''', [SuggestionText] = N'List the TSAs for the Finance fucntion with their status.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 252;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'DECLARE @UserProfiles int; SELECT    @UserProfiles = ID  FROM    UserProfiles up  WHERE    EMail = ''{Username}'' ; WITH TEMPCTE AS (   SELECT      FunctionId,      SubFunctionId    FROM      TSAReviewers  tr  WHERE      ProviderApproverId = @UserProfiles      OR RecipientApproverId = @UserProfiles )  SELECT    TSA.Title as [List of TSA to be reviewed] FROM    TSAItems TSA    JOIN TEMPCTE ON TSA.FunctionId = TEMPCTE.FunctionId    AND tsa.SubFunctionId = TEMPCTE.SubFunctionId    JOIN TSAPhases TP ON TSA.PhaseId = TP.ID  WHERE    TP.[Key] IN (''ALIGNMENT'', ''APPROVAL''); ', [SuggestionText] = N'List the TSAs that I need to review.'
WHERE [ID] = 253;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT   Title DefaultCurrency FROM  TSACurrencies tc WHERE CurrencyCode =''{CurrencyCode}''', [SuggestionText] = N'What is the default currency setting?'
WHERE [ID] = 254;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT   CurrencyExchangeRateToUSD  FROM  TSACurrencies t WHERE CurrencyCode ={CurrencyCode}', [SuggestionText] = N'List the exchange rates we setup for the default currency on my project.'
WHERE [ID] = 255;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    DISTINCT F.Title as [Functions To Be Configured] FROM    TSAReviewers TR    LEFT JOIN Functions F on F.ID = TR.FunctionId ', [SuggestionText] = N'In Reviewer Assignments, what functions require to be configured properly?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 256;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    DISTINCT SF.Title as [SubFunctions To Be Configured] FROM    TSAReviewers TR    LEFT JOIN SubFunctions SF on SF.ID = TR.SubFunctionId ', [SuggestionText] = N'In Reviewer Assignments, what sub-functions need to be configured for my project?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 257;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT CASE WHEN SUM(DeadlineReminder) > 0 THEN ''Yes, email reminder before the deadline is setup'' ELSE ''No, email reminder before the deadline is setup'' END AS [Send an email reminder before the deadline?] FROM( SELECT     Title,     CAST( DeadlineReminder AS INT) DeadlineReminder FROM     TSABillingPeriods tb WHERE     DeadlineReminder = 1) A', [SuggestionText] = N'In Billing Periods, have we setup email reminder beofre deadline?'
WHERE [ID] = 258;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title        AS [Billing Period Name],     DeadlineDate AS [Contribution Deadlines] FROM     TSABillingPeriods t', [SuggestionText] = N'List the billing periods with their Contribution deadlines.'
WHERE [ID] = 259;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT CASE WHEN SUM(SendEmailImmediately) > 0 THEN ''Yes, notifying data contributors by email '' ELSE ''No, not notifying data contributors by email '' END AS [Notify data contributors by email ?] FROM( SELECT     Title                AS [Billing Period Name],     CAST(SendEmailImmediately AS INT) SendEmailImmediately FROM     TSABillingPeriods tb WHERE     SendEmailImmediately = 1) A', [SuggestionText] = N'Are we not notifying data contributors by email for any billing periods?'
WHERE [ID] = 260;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     f.title   AS [Functions],     (t.TSAItemFTECostForServiceDurationUSD + t.MarkupOnFTECostUSD + t.ExternalMaterialCostUSD) AS [TSA Costs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND t.Duration IS NOT NULL', [SuggestionText] = N'What my TSA costs by  function?'
WHERE [ID] = 261;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs] FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID WHERE          S.Title<>''{TSAStatus}''', [SuggestionText] = N'How many TSAs left to sign?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 262;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     COUNT(TSA.ID) AS [# TSAs signed by Function],     F.Title       AS Functions FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID     LEFT JOIN         Functions   F             ON TSA.FunctionId = F.ID WHERE     S.Title = ''{TSAStatus}'' GROUP BY     F.Title', [SuggestionText] = N'List number of signed TSAs by function.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 263;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     [year]                               AS [By Year],     ROUND(SUM(fte_cost_per_month), 2)    AS [TSA FTE Cost for Selected Year],     ROUND(SUM(nonfte_cost_per_month), 2) AS [TSA Non-FTE Cost for Selected Year] FROM     vwTSACostWaterfall wf WHERE      [year] = ''{Year}'' GROUP BY     [year]', [SuggestionText] = N'Break down the total TSA cost for this year by FTE and Non-FTE cost.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 264;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [TSA Stages] FROM     TSAPhases t ORDER BY     Ordinal', [SuggestionText] = N'List out stages that are preconfigured on this instance for TSA lifecycle.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 265;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Stg.Title AS [Stage Name],        COUNT(TSA.ID) AS [# TSAs Identified] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] = ''IDENTIFICATION'' GROUP BY Stg.Title', [SuggestionText] = N'How many TSA have been identified?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 266;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [TSAs that have duration for more than 18 months] FROM     TSAItems ts WHERE     Duration > 18', [SuggestionText] = N'List out TSAs that have duration for more than 18 months.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 267;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs that are ready to be approved] FROM     TSAItems      TSA     LEFT JOIN         TSAPhases Stg             ON TSA.PhaseId = Stg.ID WHERE     Stg.[Key] IN ( ''ALIGNMENT'',''APPROVAL'') ', [SuggestionText] = N'List out TSAs are that are ready to be approved.'
WHERE [ID] = 268;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     f.title  AS [Functions],     SUM((t.TSAItemFTECostForServiceDurationUSD + t.MarkupOnFTECostUSD + t.ExternalMaterialCostUSD) )AS [TSA Costs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND t.Duration IS NOT NULL GROUP BY  f.title', [SuggestionText] = N'What is the total of TSA cost by function?'
WHERE [ID] = 269;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Open Risks] FROM TSAItems TSA     LEFT JOIN RisksAndIssues RI         ON TSA.ID = RI.TSAItemId     LEFT JOIN Statuses S         ON RI.ProgressId = S.ID WHERE S.[Key] NOT IN ( ''COMPLETED'', ''CLOSED'' )', [SuggestionText] = N'List out TSA with Open risks.'
WHERE [ID] = 270;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS [Buyer Side Reviewer for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.RecipientApproverID = UP.ID WHERE F.Title =''{FunctionName}''', [SuggestionText] = N'Who is the buy side reviewer for finance TSAs?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 271;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS [Buyer Side Reviewer for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.ProviderApproverId = UP.ID WHERE F.Title =''{FunctionName}''', [SuggestionText] = N'Who is the sell side reviewer for finance TSAs?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 272;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS [Approver for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.RecipientApproverID = UP.ID WHERE F.Title = ''{FunctionName}''  UNION   SELECT UP.Title AS [Approver for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.ProviderApproverId = UP.ID WHERE F.Title =''{FunctionName}''', [SuggestionText] = N'Who is the approver for finance TSAs?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 273;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Behind Schedule Tasks Linked] FROM TSAItems TSA     LEFT JOIN Workplan WP         ON TSA.ID = WP.TSAItemId     LEFT JOIN Statuses S         ON WP.ProgressId = S.ID WHERE WP.WorkPlanTaskType = ''Task''       AND S.[Key] = ''BEHIND_SCHEDULE''', [SuggestionText] = N'List out TSAs with behind schedule tasks linked.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 274;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT f.title AS [Functions],        COUNT(t.ID) AS [TSAs Count],        (SUM(t.TSAItemFTECostForServiceDurationUSD) + SUM(t.MarkupOnFTECostUSD) + SUM(t.ExternalMaterialCostUSD)) AS [TSAs Costs] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE TSADisp.Title = ''rTSA (reverse TSA)''       AND s.title <> ''Canceled''       AND t.Duration IS NOT NULL GROUP BY f.title', [SuggestionText] = N'Show me the count and cost of reverse TSAs by function.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 275;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [TSA Items in Alignment phase for IT] FROM TSAItems TSA LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID WHERE Stg.[Key] = ''ALIGNMENT''       AND F.Title = ''{FunctionName}''', [SuggestionText] = N'How many items are in the allignment phase for IT?'
WHERE [ID] = 276;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [# TSA items in the repository which have been modified in the last 7 days] FROM TSAItems TSA     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND CAST(TSA.Modified AS DATE)       BETWEEN CAST(GETDATE() - 7 AS DATE) AND CAST(GETDATE() AS DATE) ', [SuggestionText] = N'How many items in the repository have been modified in the last 7 days?'
WHERE [ID] = 277;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [# TSA items in the repository which have been created in the last 5 days] FROM TSAItems TSA     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND CAST(TSA.Created AS DATE)       BETWEEN CAST(GETDATE() - 5 AS DATE) AND CAST(GETDATE() AS DATE) ', [SuggestionText] = N'How many new items s in the repository have been created in the last 5 days?'
WHERE [ID] = 278;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AVG(t.Duration) AS [Average Duration for IT TSAs],        (SUM(t.TSAItemFTECostForServiceDurationUSD) + SUM(t.MarkupOnFTECostUSD) + SUM(t.ExternalMaterialCostUSD)) AS [Cost for IT TSAs] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id WHERE s.title <> ''Canceled''       AND t.Duration IS NOT NULL       AND f.Title = ''IT'' GROUP BY f.title', [SuggestionText] = N'What is the average duration and cost for IT TSAs?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 279;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Behind Schedule / At Risk Tasks Linked] FROM TSAItems TSA     LEFT JOIN Workplan WP         ON TSA.ID = WP.TSAItemId     LEFT JOIN Statuses S         ON WP.WorkPlanTaskStatusId = S.ID WHERE WP.WorkPlanTaskType = ''Task''       AND S.[Key] IN (''BEHIND_SCHEDULE'',''AT_RISK'')', [SuggestionText] = N'Show me all TSAs that have a linked task that is At Risk or Behind Schedule.'
WHERE [ID] = 280;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSA Items that need review] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] IN ( ''ALIGNMENT'', ''APPROVAL'' )', [SuggestionText] = N'List all TSAs that need review.'
WHERE [ID] = 281;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title as [TSAs that need to be signed along with Item Owner], t.TSAItemPersonInCharge as [Item Owner] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]=''SIGNED''', [SuggestionText] = N'List all TSAs that need to be signed along with the item owner.'
WHERE [ID] = 282;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [TSAs and rTSAs that have a markup greater than 5%]    ,TSADisp.Title AS [TSA / rTSA] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     	LEFT OUTER JOIN 	    TSADay1Dispositions TSADisp  		    ON t.TSADay1DispositionId=TSADisp.ID WHERE         s.title <> ''Canceled'' 	  AND t.TSAItemMarkup >0.05', [SuggestionText] = N'Show me all TSAs and rTSAs that have a markup greater than 5%.'
WHERE [ID] = 283;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs are in a local currency that is not US dollar] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSACurrencies TSACurr         ON t.TSAItemLocalCurrencyId = TSACurr.ID     LEFT OUTER JOIN Currencies Curr         ON TSACurr.CurrencyID = Curr.ID WHERE Curr.Title <> ''USD ($)''       AND s.title <> ''Canceled''', [SuggestionText] = N'How many TSAs are in a local currency that is not US dollar?'
WHERE [ID] = 284;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title as [Inactive TSAs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''ACTIVE'' ', [SuggestionText] = N'List out all Inactive TSAs.'
WHERE [ID] = 285;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT t.Title as [TSAs that have duration less than 2 months] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''CANCELED'' AND t.Duration<2', [SuggestionText] = N'List All TSAs where the duration is less than 2 months.'
WHERE [ID] = 286;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT t.Title as [TSAs that have duration less than 2 months] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''CANCELED'' AND t.Duration>10', [SuggestionText] = N'List all TSAs where the duration is more than 10 months.'
WHERE [ID] = 287;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs due in next 45days] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id WHERE CAST(t.TSAItemEndDate AS DATE)       BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE() + 45 AS DATE)       AND s.title <> ''Canceled''', [SuggestionText] = N'List All TSAs due in next 45days.'
WHERE [ID] = 288;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [TSAs that have a markup above 1%] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.TSAItemMarkup >0.01', [SuggestionText] = N'List all TSAs where the markup is above 1%.'
WHERE [ID] = 289;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     t.Title AS [TSAs where Provider is not tagged] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE     s.title <> ''Canceled''     AND t.ProviderLegalEntityId IS NULL', [SuggestionText] = N'List all TSAs where provider is not tagged.'
WHERE [ID] = 290;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT    t.Title AS [TSAs where Receiver is not tagged] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.ReceiverLegalEntityId IS NULL', [SuggestionText] = N'List all TSAs where receiver is not tagged.'
WHERE [ID] = 291;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [Mixed Price Type TSAs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id   	LEFT OUTER JOIN 	PriceTypes Pric  	        ON t.TSAItemPriceTypeID=Pric.ID WHERE         s.title <> ''Canceled'' 	  AND Pric.Title=''Mixed price''', [SuggestionText] = N'List all mixed price type TSAs.'
WHERE [ID] = 292;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	  SELECT    t.Title AS [List all TSAs which are not getting settled in USD]    FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     	LEFT OUTER JOIN 	    TSACurrencies TSACurr  		    ON t.TSAItemLocalCurrencyId=TSACurr.ID 	LEFT OUTER JOIN Currencies Curr 	        ON TSACurr.CurrencyID=Curr.ID WHERE         Curr.Title<>''USD ($)''  	  AND s.title <> ''Canceled''', [SuggestionText] = N'List all TSAs which are not getting settled n USD.'
WHERE [ID] = 293;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [TSAs where User has provided comments] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.Comments IS NOT NULL', [SuggestionText] = N'List all TSAs where User has provided comments.'
WHERE [ID] = 294;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     ISNULL(Stg.Title, ''No Phase Assigned'') AS [Phase],     (TSA.Title)                          AS [ TSAs title] FROM     TSAItems      TSA     LEFT JOIN         TSAPhases Stg             ON TSA.PhaseId = Stg.ID', [SuggestionText] = N'List all TSAs per phase.'
WHERE [ID] = 295;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     t.Title AS [TSAs assigned to function due in next 30 days] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND f.Title=''{FunctionName}'' 	AND CAST(t.TSAItemEndDate AS DATE) BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE()+30 AS DATE)', [SuggestionText] = N'List All TSAs assigned to IT due in next 30 days.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 296;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs assigned to IT due in next 30 days] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id WHERE s.title <> ''Canceled''       AND f.Title = ''Finance''       AND CAST(t.TSAItemEndDate AS DATE)       BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE() + 15 AS DATE)       AND t.TSAItemMarkup <= 0.01       AND t.ReceiverLegalEntityId IS NULL', [SuggestionText] = N'List All TSAs assigned to finance due in next 15 days where markup is below 1% and has no receiver tagged.'
WHERE [ID] = 297;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs Items which are tagged as rTSA for Day 1 disposition] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE s.title <> ''Canceled''       AND TSADisp.Title = ''rTSA (reverse TSA)''', [SuggestionText] = N'List all Items which are tagged as rTSA for Day 1 disposition.'
WHERE [ID] = 298;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSA Items where total number of FTEs providing service is greater than 5] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE s.title <> ''Canceled''       AND t.TSAItemNoOfFTEProvidingService > 5', [SuggestionText] = N'List all Items where total number of FTEs providing service is greater than 5.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 299;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSA items which have been in Detailing phase for more than 15 days] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] = ''DETAILING''       AND CAST(TSA.Modified AS DATE) < CAST(GETDATE() - 15 AS DATE)', [SuggestionText] = N'List all items which have been in Detailing phase for more than 15 days.'
WHERE [ID] = 300;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [Finance related TSA items with relevant SLA details],        ISNULL(TSA.TSAItemSLAName, '' '') AS [SLA Details] FROM TSAItems TSA     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND F.Title = ''Finance''', [SuggestionText] = N'List all finance related items with relevant SLA details.'
WHERE [ID] = 301;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSA items where external cost is greater than FTE cost for entire duration] FROM TSAItems TSA     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND (TSA.TSAItemExternalMaterialCost > TSA.TSAItemFTECostForServiceDuration)', [SuggestionText] = N'List all items where external cost is greater than FTE cost for entire duration.'
WHERE [ID] = 302;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] = ''PROJECT_MANAGEMENT'' order by TT.Title', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the project teams that make up the governance structure for this engagement?'
WHERE [ID] = 303;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount  FROM WorkPlan wp  LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId  LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE wp.WorkPlanTaskType = ''Milestone'' AND TT.[Key] = ''PROJECT_MANAGEMENT'' GROUP BY pt.Title', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How many milestones does each team have?'
WHERE [ID] = 304;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How many interdependencies does each team have?'
WHERE [ID] = 305;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(1) AS RiskCount  FROM RisksAndIssues RI  left join ProjectTeams pt on pt.ID = ri.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE IssueRiskCategory = ''Risk'' AND TT.[Key] = ''PROJECT_MANAGEMENT'' GROUP BY pt.Title', [SuggestionText] = N'How many risks does each team have?'
WHERE [ID] = 306;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT WP._TemplateFile FROM WorkPlan WP', [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 307;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 308;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [Source] = N'ey-guidance', [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 309;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 310;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do I add a client user to Capital Edge?'
WHERE [ID] = 311;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 312;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past.'
WHERE [ID] = 313;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 314;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Cost Savings''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 315;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Revenue Growth''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 316;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''one-time''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 317;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Cost Savings'' AND VCI.ProjectTeam = ''IT''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 318;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''one-time'' AND VCI.ProjectTeam = ''Supply Chain''', [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 319;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 320;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past.'
WHERE [ID] = 321;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 322;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N._TemplateFile FROM Nodes N', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 323;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 324;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 325;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 326;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past.'
WHERE [ID] = 327;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title FROM TSAItems TSA', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 328;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title, TSA.ServiceInScopeDescription, TSA.[Function], TSA.SubFunction FROM TSAItems TSA', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 329;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 330;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past.'
WHERE [ID] = 331;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT WP._TemplateFile FROM WorkPlan WP', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 332;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 333;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 334;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 335;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 336;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 337;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 338;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 339;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 340;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 341;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 342;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 343;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 344;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best strategies for improving a company in the {Sector} sector?'
WHERE [ID] = 345;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are recent examples of improvements being made in the {Sector} sector?'
WHERE [ID] = 346;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 347;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 348;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 349;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What is a normative operating model for the {Sector} sector?'
WHERE [ID] = 350;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are key considerations when defining an operating model for a {Sector} sector company?'
WHERE [ID] = 351;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 352;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the corporate functions typically involved in the {Sector} sector?'
WHERE [ID] = 353;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 354;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 355;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Provides templates of TSA.'
WHERE [ID] = 356;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What should be the typical duration for TSA?'
WHERE [ID] = 357;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Things I should keep in mind for longer duration TSAs?'
WHERE [ID] = 358;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 359;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 360;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 361;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 362;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 363;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240619150128_UpdateSuggestionAliasVisibility', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantConfigurations] SET [Value] = N'{"project-data": {"isActive": true,"isQuestionTextBoxEnabled": false},"project-docs": {"isActive": true,"isQuestionTextBoxEnabled": true},"ey-guidance": {"isActive": true,"isQuestionTextBoxEnabled": true},"internet": {"isActive": true,"isQuestionTextBoxEnabled": true}}'
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240619161707_UpdateProjectConfiguration', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DELETE FROM [AssistantSuggestions]
WHERE [ID] = 363;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 311;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past.'
WHERE [ID] = 312;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 313;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Cost Savings''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 314;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Revenue Growth''', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 315;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''one-time''', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 316;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Cost Savings'' AND VCI.ProjectTeam = ''IT''', [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 317;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''one-time'' AND VCI.ProjectTeam = ''Supply Chain''', [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 318;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 319;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past.'
WHERE [ID] = 320;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 321;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N._TemplateFile FROM Nodes N', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 322;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 323;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 324;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 325;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY has supported in the past.'
WHERE [ID] = 326;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title FROM TSAItems TSA', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 327;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title, TSA.ServiceInScopeDescription, TSA.[Function], TSA.SubFunction FROM TSAItems TSA', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 328;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 329;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past.'
WHERE [ID] = 330;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT WP._TemplateFile FROM WorkPlan WP', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 331;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 332;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 333;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 334;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 335;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 336;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 337;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 338;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 339;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 340;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 341;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 342;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 343;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best strategies for improving a company in the {Sector} sector?'
WHERE [ID] = 344;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are recent examples of improvements being made in the {Sector} sector?'
WHERE [ID] = 345;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 346;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 347;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 348;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What is a normative operating model for the {Sector} sector?'
WHERE [ID] = 349;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are key considerations when defining an operating model for a {Sector} sector company?'
WHERE [ID] = 350;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 351;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the corporate functions typically involved in the {Sector} sector?'
WHERE [ID] = 352;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 353;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 354;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provides templates of TSA.'
WHERE [ID] = 355;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What should be the typical duration for TSA?'
WHERE [ID] = 356;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Things I should keep in mind for longer duration TSAs?'
WHERE [ID] = 357;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 358;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 359;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 360;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 361;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 362;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240620130159_RemoveOneSuggestionForEYSat', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Cost Saving'' or  VCI.ValueCaptureType = ''Cost Reduction''What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 314;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''One Time Cost'''
WHERE [ID] = 316;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE (VCI.ValueCaptureType = ''Cost Reduction'' OR  VCI.ValueCaptureType = ''Cost Saving'') AND VCI.ProjectTeam = ''IT'''
WHERE [ID] = 317;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''One Time Cost'' AND VCI.ProjectTeam = ''Supply Chain & Operations'''
WHERE [ID] = 318;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240621065655_UpdateSqlForEYGuidance', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Cost Saving'' or  VCI.ValueCaptureType = ''Cost Reduction'''
WHERE [ID] = 314;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240621093242_UpdateTypoinQuery', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DELETE FROM [AssistantSuggestions]
WHERE [ID] = 362;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title FROM TSAItems TSA', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 326;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title, TSA.ServiceInScopeDescription, TSA.[Function], TSA.SubFunction FROM TSAItems TSA', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 327;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 328;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provide case studies/credentials for similar deals that EY have supported in the past.'
WHERE [ID] = 329;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT WP._TemplateFile FROM WorkPlan WP', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 330;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 331;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 332;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 333;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 334;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 335;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 336;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 337;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 338;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 339;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 340;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 341;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 342;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best strategies for improving a company in the {Sector} sector?'
WHERE [ID] = 343;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are recent examples of improvements being made in the {Sector} sector?'
WHERE [ID] = 344;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 345;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 346;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 347;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What is a normative operating model for the {Sector} sector?'
WHERE [ID] = 348;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are key considerations when defining an operating model for a {Sector} sector company?'
WHERE [ID] = 349;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 350;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the corporate functions typically involved in the {Sector} sector?'
WHERE [ID] = 351;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 352;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 353;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provides templates of TSA.'
WHERE [ID] = 354;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What should be the typical duration for TSA?'
WHERE [ID] = 355;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Things I should keep in mind for longer duration TSAs?'
WHERE [ID] = 356;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 357;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 358;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 359;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 360;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 361;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240621124141_RemoveOneSuggestion', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DELETE FROM [AssistantSuggestions]
WHERE [ID] = 359;
SELECT @@ROWCOUNT;

GO

DELETE FROM [AssistantSuggestions]
WHERE [ID] = 360;
SELECT @@ROWCOUNT;

GO

DELETE FROM [AssistantSuggestions]
WHERE [ID] = 361;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 312;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Cost Saving'' or  VCI.ValueCaptureType = ''Cost Reduction''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 313;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''Revenue Growth''', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 314;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''One Time Cost''', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 315;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE (VCI.ValueCaptureType = ''Cost Reduction'' OR  VCI.ValueCaptureType = ''Cost Saving'') AND VCI.ProjectTeam = ''IT''', [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 316;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCI.Title FROM ValueCaptureInitiatives VCI WHERE VCI.ValueCaptureType = ''One Time Cost'' AND VCI.ProjectTeam = ''Supply Chain & Operations''', [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 317;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 318;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 319;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N._TemplateFile FROM Nodes N', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 320;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 321;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 322;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 323;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title FROM TSAItems TSA', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 324;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title, TSA.ServiceInScopeDescription, TSA.[Function], TSA.SubFunction FROM TSAItems TSA', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 325;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 326;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT WP._TemplateFile FROM WorkPlan WP', [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 327;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 328;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 329;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 330;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 331;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 332;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 333;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [Source] = N'internet', [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 334;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 335;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 336;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 337;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 338;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 339;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best strategies for improving a company in the {Sector} sector?'
WHERE [ID] = 340;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are recent examples of improvements being made in the {Sector} sector?'
WHERE [ID] = 341;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 342;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 343;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 344;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What is a normative operating model for the {Sector} sector?'
WHERE [ID] = 345;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are key considerations when defining an operating model for a {Sector} sector company?'
WHERE [ID] = 346;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 347;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the corporate functions typically involved in the {Sector} sector?'
WHERE [ID] = 348;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 349;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 350;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provides templates of TSA.'
WHERE [ID] = 351;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What should be the typical duration for TSA?'
WHERE [ID] = 352;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Things I should keep in mind for longer duration TSAs?'
WHERE [ID] = 353;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 354;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 355;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 356;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 357;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 358;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240621133332_RemoveThreeSuggestion', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT _TemplateFile FROM WorkPlan'
WHERE [ID] = 307;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE ValueCaptureType = ''Cost Saving'' or  ValueCaptureType = ''Cost Reduction'''
WHERE [ID] = 313;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE ValueCaptureType = ''Revenue Growth'''
WHERE [ID] = 314;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE ValueCaptureType = ''One Time Cost'''
WHERE [ID] = 315;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE (ValueCaptureType = ''Cost Reduction'' OR  ValueCaptureType = ''Cost Saving'') AND ProjectTeam = ''IT'''
WHERE [ID] = 316;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE ValueCaptureType = ''One Time Cost'' AND ProjectTeam = ''Supply Chain & Operations'''
WHERE [ID] = 317;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT _TemplateFile FROM Nodes'
WHERE [ID] = 320;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM TSAItems'
WHERE [ID] = 324;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title, ServiceInScopeDescription, [Function], SubFunction FROM TSAItems'
WHERE [ID] = 325;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT _TemplateFile FROM WorkPlan'
WHERE [ID] = 327;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240627101611_UpdateEYIPQueryAlias', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

ALTER TABLE [AssistantChatHistory] ADD [InstanceId] nvarchar(max) NULL;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240704061744_AddInstanceID', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.RiskImpact, RI.RiskProbability, COUNT(*) AS RiskCount FROM RisksAndIssues RI LEFT JOIN ProjectTeams pt on pt.ID = RI.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE RI.IssueRiskCategory = ''Risk'' AND RI.ItemStatusId NOT IN (SELECT S.ID FROM statuses S WHERE S.[Key] IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD'' )) AND (RI.RiskImpact IS NOT NULL OR RI.RiskProbability IS NOT NULL) GROUP BY RI.RiskImpact, RI.RiskProbability ORDER BY RI.RiskImpact, RI.RiskProbability'
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     RI.UniqueItemIdentifier,     RI.Title,    ''Risks'' as Category  FROM    RisksAndIssues RI   JOIN Statuses S ON RI.ItemStatusId = S.ID  JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD'' )     AND RI.IssueRiskCategory = ''Risk''     AND TT.[Key] = ''PROJECT_MANAGEMENT'' UNION  SELECT     RI.UniqueItemIdentifier,     RI.Title,    ''Issues'' as Category  FROM    RisksAndIssues RI   JOIN Statuses S ON RI.ItemStatusId = S.ID  JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[KEY] NOT IN (   ''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD''   )     AND RI.IssueRiskCategory = ''Issue''     AND TT.[Key] = ''PROJECT_MANAGEMENT'' UNION  SELECT     A.UniqueItemIdentifier,     A.Title,    ''Actions'' as Category  FROM    Actions A    JOIN Statuses S ON A.ItemStatusId = S.ID    JOIN ProjectTeams PT ON A.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[KEY] NOT IN (  ''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD'' )     AND TT.[Key] = ''PROJECT_MANAGEMENT'' UNION  SELECT     D.UniqueItemIdentifier,     D.Title,    ''Decisions'' as Category  FROM    Decisions D    LEFT JOIN Statuses S ON D.ItemStatusId = S.ID      JOIN ProjectTeams PT ON D.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    S.[KEY] NOT IN (   ''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD''  )    AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title as OpenInterdependencies, S.Title as Status FROM Interdependencies I LEFT JOIN InterdependencyStatuses S ON I.InterdependencyStatusId = S.ID  WHERE S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD'')'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Open Risks] FROM TSAItems TSA     LEFT JOIN RisksAndIssues RI         ON TSA.ID = RI.TSAItemId     LEFT JOIN Statuses S         ON RI.ProgressId = S.ID WHERE S.[Key] NOT IN ( ''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD'')'
WHERE [ID] = 270;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240716105801_UpdatingSuggestionQuery', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title, UP.Title as UserName AS WorkPlanItem FROM Workplan W LEFT JOIN UserProfiles UP ON W.TaskOwnerID = UP.ID LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE UP. Title = ( SELECT TOP 1 Title  FROM UserProfiles WHERE FREETEXT(Title, {''Username''}) AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  W.Title,''Workplan'' [Category],UP.Title as UserName FROM Workplan W LEFT JOIN UserProfiles UP ON W.TaskOwnerID = UP.ID WHERE UP.Title = = ( SELECT TOP 1 Title  FROM UserProfiles WHERE FREETEXT(Title, ''{Username}''))  UNION ALL   SELECT RI.Title,IssueRiskCategory [Category],UP.Title as UserName FROM RisksAndIssues RI LEFT JOIN UserProfiles UP ON RI.ItemOwnerId = UP.ID WHERE UP. Title = ( SELECT TOP 1 Title  FROM UserProfiles WHERE FREETEXT(Title, ''{Username}'')) UNION ALL SELECT A.Title,''Action'' [Category] FROM Actions A LEFT JOIN UserProfiles UP ON A.ItemOwnerId = UP.ID WHERE UP. Title = ( SELECT TOP 1 Title   FROM UserProfiles WHERE FREETEXT(Title, ''{Username}'')) UNION ALL  SELECT D.Title,''Decision'' [Category],UP.Title as UserName FROM Decisions D LEFT JOIN UserProfiles UP ON D.ItemOwnerId = UP.ID WHERE UP. Title = ( SELECT TOP 1 Title  FROM UserProfiles WHERE FREETEXT(Title, ''{Username}'')) UNION ALL   SELECT I.Title,''Interdependecy as Provider'' [Category],UP.Title as UserName FROM Interdependencies I LEFT JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID WHERE UP. Title = ( SELECT TOP 1 Title  FROM UserProfiles WHERE FREETEXT(Title, ''{Username}'')) UNION ALL  SELECT I.Title,''Interdependecy as Receiver'' [Category],UP.Title as UserName FROM Interdependencies I LEFT JOIN UserProfiles UP ON I.ReceiverOwnerId = UP.ID WHERE UP. Title = ( SELECT TOP 1 Title   FROM UserProfiles WHERE FREETEXT(Title, ''{Username}''))'
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS RisksAssignedTo, UP.Title FROM RisksAndIssues RAI LEFT JOIN UserProfiles UP ON RAI.ItemOwnerId = UP.ID WHERE UP. Title = ( SELECT TOP 1 Title   FROM UserProfiles WHERE FREETEXT(Title, ''{Username}''))', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How many risks were assigned to User?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title, UP.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId WHERE UP. Title = ( SELECT TOP 1 Title  FROM UserProfiles WHERE FREETEXT(Title, ''{Username}''))', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How  many initiatives are assigned to User?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ''Total Top Down Target'' AS KPI,  FORMAT((SUM(VTE.HeadcountCostReductionEst)+SUM(VTE.NonHeadcountCostReductionEst)+SUM(VTE.RevenueGrowthEstimate))/1000000,''N2'') AS ''Value (Million)''  FROM ValueCaptureTopDownEstimates VTE', [SuggestionText] = N'What are our targets for this engagement?'
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ''{Username}'' GROUP BY S.Title ', [SuggestionText] = N'How are my initiatives doing?'
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = ''{Username}'' ', [SuggestionText] = N'Are there any risks or issues with initiatives that I’m responsible for?'
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ''{Username}'' ', [SuggestionText] = N'How  many initiatives are assigned to me?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ''{Username}'' ', [SuggestionText] = N'Give my cost reduction initiatives.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VT.RevenueGrowthEstimate,0)) [RevenueGrowthTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title = {ProjectTeam}', [SuggestionText] = N'What are the revenue growth targets for Sales & Marketing?'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VT.CostToAchieveEstimate,0)) [CostToAchieveTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title ={ProjectTeam}', [SuggestionText] = N'What are the cost to achieve targets for R&D?'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT S.Title [Value Capture Stage] , COUNT(VI.ID) [No. of Initiatives] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} GROUP BY S.Title', [SuggestionText] = N'How many initiatives are there in IT across different stages?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Approved Initiaves] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} AND S.Title = ''Approved''', [SuggestionText] = N'List IT initiatives that are in approved stage.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves with Workplan] FROM ValueCaptureInitiatives VI JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WV ON VI.ID = WV.ValueCaptureInitiativeId', [SuggestionText] = N'List initiatives that have workplan item linked to them.'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT VI.Title [Initiaves with Risk] FROM ValueCaptureInitiatives VI JOIN RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RV ON VI.ID = RV.ValueCaptureInitiativeId LEFT JOIN RisksAndIssues RI ON RI.ID = RV.RisksAndIssueId WHERE RI.IssueRiskCategory = ''Risk''', [SuggestionText] = N'How many initiatives have Risks linked?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VT.HeadcountCostReductionEst,0)) [HeadCountCostReductionTarget] FROM ValueCaptureTopDownEstimates VT', [SuggestionText] = N'What is the total headcount cost reduction target?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Non Active Initiaves] FROM ValueCaptureInitiatives VI WHERE ISNULL(VI.IsItemActive ,0) = 0', [SuggestionText] = N'List initiatives that are not active.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages  VCS ON VCI.ValueCaptureStageId = VCS.ID WHERE VCS.Title = {ValueCaptureStage} ', [SuggestionText] = N'How many initiatives have been realized?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(VTE.NonHeadcountCostReductionEst) + SUM(VTE.RevenueGrowthEstimate) + SUM(VTE.HeadcountCostReductionEst) ''Total Top Down Target Value'' FROM ValueCaptureTopDownEstimates VTE ', [SuggestionText] = N'What is the Total Top Down Target Value?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(VTE.RevenueGrowthEstimate) RevenueGrowth,SUM(VTE.TotalCostReduction) CostReduction FROM ValueCaptureTopDownEstimates VTE', [SuggestionText] = N'Show my top down target values by cost reduction and revenue growth.'
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) FROM ValueCaptureInitiatives VI WHERE VI.IsItemActive = 1', [SuggestionText] = N'How many active initatives are there in my project?'
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team] ,CAST(SUM(ISNULL(VT.RevenueGrowthEstimate,0))/1000000 AS FLOAT) [Revenue Growth(in Million)] FROM ValueCaptureTopDownEstimates VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId GROUP BY PT.Title', [SuggestionText] = N'What is the total of revenue growth by team?'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VC.Title AS [ValueCaptureInitiatives with no Owners] FROM ValueCaptureInitiatives VC WHERE VC.ItemOwnerId IS NULL', [SuggestionText] = N'List out initiatives with no owners assigned.'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiative with Workplan at Risk] FROM WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WTVI LEFT JOIN Workplan W ON W.ID = WTVI.WorkPlanId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId LEFT JOIN ValueCaptureInitiatives VI on VI.ID = WTVI.ValueCaptureInitiativeId WHERE S.[KEY] = ''AT_RISK''', [SuggestionText] = N'List out initiatives that have at risk workplan task linked.'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VP.Title AS ValueCapturepriority, COUNT(VC.ValueCapturePriorityId) AS ValueCapturePriorityCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId where VC.ValueCapturePriorityId is not null GROUP BY VC.ValueCapturePriorityId, VP.Title', [SuggestionText] = N'Show me initiatives count by priority.'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS UserProfile, COUNT(VC.ID) AS ValueCaptureOwnerwiseCount FROM ValueCaptureInitiatives VC LEFT JOIN UserProfiles UP ON UP.ID = VC.ItemOwnerId WHERE VC.ItemOwnerId IS NOT NULL GROUP BY VC.ItemOwnerId, UP.Title', [SuggestionText] = N'Show me initiatives count by owner.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves] FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Title = ''{Username}''', [SuggestionText] = N'List initiatives where I''m assigned as the Owner.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as IdentifiedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Identified''', [SuggestionText] = N'How many initiatives are identified?'
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as ApprovedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Approved'' ', [SuggestionText] = N'How many initiatives have been approved?'
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as ValidatedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Validated'' ', [SuggestionText] = N'How many initiatives have been validated?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS [Value Capture Stage] ,COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCI.ValueCaptureStageId = VCS.ID GROUP BY VCS.Title', [SuggestionText] = N'Can you provide breakdown of the initiatives across various stages?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}''', [SuggestionText] = N'What initatives have I been assigned to?'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VS.Title ValueCaptureStage FROM ValueCaptureInitiatives VI JOIN ValueCaptureStages VS ON VI.ValueCaptureStageID = VS.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}'' ORDER BY ValueCaptureStage', [SuggestionText] = N'List my initatives by stages.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VT.Title ValueCaptureType FROM ValueCaptureInitiatives VI JOIN ValueCaptureTypes VT ON VI.ValueCaptureStageID = VT.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}'' ORDER BY ValueCaptureType', [SuggestionText] = N'List my initatives by Value Capture Type.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title,SUM(ISNULL(VTE.NonHeadcountCostReductionEst,0)) + SUM(ISNULL(VTE.RevenueGrowthEstimate,0)) + SUM(ISNULL(VTE.HeadcountCostReductionEst,0)) AS TotalTopDownTarget  FROM ValueCaptureTopDownEstimates VTE LEFT JOIN ProjectTeams PT ON PT.ID = VTE.Projectteamid GROUP BY PT.Title', [SuggestionText] = N'What is the top-down target for this project?'
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS ValueCaptureStage, COUNT(VC.ID) AS ValueCaptureStageCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VC.ValueCaptureStageId GROUP BY VC.ValueCaptureStageId, VCS.Title', [SuggestionText] = N'Show me initiatives count by stage.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title as Functions, COUNT(VC.FunctionId) AS ValueCaptureFunction FROM ValueCaptureInitiatives VC LEFT JOIN Functions F ON F.ID = VC.FunctionId WHERE VC.FunctionId IS NOT NULL GROUP BY VC.FunctionId, F.Title ', [SuggestionText] = N'Show me initiatives count by function.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT     CC.Title AS [Cost/Revenue Centers linked to PnL Line Items], CC.Account FROM CostCenters CC     LEFT JOIN ValueCaptureFinancialLineItems Fin         ON CC.FinancialLineItemId = Fin.ID     LEFT JOIN ValueCaptureFinancialLineItemTypes FinType         ON Fin.FinancialLineItemTypeId = FinType.ID WHERE FinType.Title = ''PnL''', [SuggestionText] = N'List all Cost/Revenue Centers linked to PnL Line Items.'
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) AS [Top Down targets #],         SUM(ISNULL(VTE.NonHeadcountCostReductionEst, 0)) AS [Total Non Headcount Cost Reduction Estimate],         SUM(ISNULL(VTE.RevenueGrowthEstimate, 0)) AS [Total Revenue Growth Estimate],         SUM(ISNULL(VTE.CostToAchieveEstimate, 0)) AS [Total Cost To Achieve Estimate],        SUM(ISNULL(VTE.HeadcountCostReductionEst, 0)) AS [Total Headcount Cost Reduction Estimate],         SUM(ISNULL(VTE.HeadcountCostReductionEst, 0)) + SUM(ISNULL(VTE.NonHeadcountCostReductionEst, 0))  + SUM(ISNULL(VTE.RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates VTE', [SuggestionText] = N'Can you provide Top Down Targets KPIs?'
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  VCTT.Title, PT.Title, VCTT.CostToAchieveEstimate, VCTT.NonHeadcountCostReductionEst, VCTT.HeadcountCostReductionEst, VCTT.RevenueGrowthEstimate FROM   ValueCaptureTopDownEstimates VCTT  LEFT JOIN ProjectTeams PT on PT.ID = VCTT.ProjectTeamId', [SuggestionText] = N'How many top down targets do we have for this project?'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VTE.HeadcountCostReductionEst,0)) AS HeadcountCostReduction FROM ValueCaptureTopDownEstimates VTE', [SuggestionText] = N'What is the Total Headcount Cost Reduction Target?'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(VTE.NonHeadcountCostReductionEst,0)) AS NonHeadcountCostReduction FROM  ValueCaptureTopDownEstimates VTE', [SuggestionText] = N'What is the Total Non Headcount Cost Reduction Target?'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(VTE.RevenueGrowthEstimate,0)) AS RevenueGrowth FROM  ValueCaptureTopDownEstimates VTE', [SuggestionText] = N'What is the Total Revenue Growth Target?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(VTE.CostToAchieveEstimate,0)) AS CostToAchive FROM  ValueCaptureTopDownEstimates VTE', [SuggestionText] = N'What is the Total Cost to Achieve Target?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PT.Title ProjectTeams, VBM.Title Benchmark FROM  ValueCaptureCostBenchmarks VBM LEFT JOIN  ProjectTeams PT ON PT.ID = VBM.ProjectTeamId', [SuggestionText] = N'Are there any benchmarks for this project?'
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT A.Amount as [Client Baseline PnL Amount], A.FinancialLineItem as FinancialLineItem FROM( SELECT F.ID, F.Ordinal, F.Title FinancialLineItem , SUM(C.Amount)/1000000 Amount FROM ValueCaptureFinancialLineItems F LEFT JOIN CostCenters C ON C.FinancialLineItemId = F.ID  GROUP BY F.ID, F.Title, F.Ordinal ) A WHERE A.Amount IS NOT NULL', [SuggestionText] = N'What is my program Client Baseline PnL?'
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCRI.Title AS [Recommended Initiatives List] FROM ValueCaptureRecommendedInitiatives VCRI', [SuggestionText] = N'List all recommended initiatives for my program.'
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	SUM(a.[Total Top Down Target Value]) AS [Top Down Targets],      SUM(b.[Bottom Up Initiatives Value]) AS [Bottom Up Initiatives Value], 	( SUM(b.[Bottom Up Initiatives Value])-SUM(a.[Total Top Down Target Value])) AS Variance FROM ( SELECT   SUM(ISNULL(VCTDE.HeadcountCostReductionEst, 0)) + SUM(ISNULL(VCTDE.NonHeadcountCostReductionEst, 0))        + SUM(ISNULL(VCTDE.RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates VCTDE) a, ( select SUM(Amount)*12 as [Bottom Up Initiatives Value]  FROM vwUnpivotEstimates where MYear=''Y3M12'' AND Recurring =1 ) b ', [SuggestionText] = N'Compare Top Down Targets vs Bottom Up Initiatives for my project.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'   SELECT ISNULL(SUM(Act.AMOUNT),0.0) AS [Cumulative One Time Cost Amount] 			   FROM vwUnpivotActuals Act 			   LEFT JOIN ValueCaptureImpactTypes VCIT ON Act.ValueCaptureImpactTypeID=VCIT.ID 			   LEFT JOIN ValueCaptureInitiatives VCI ON Act.ValueCaptureInitiativeID=VCI.ID 			   WHERE VCIT.PositiveOrNegativeValues=''Negative'' 			   AND Act.Recurring<>1 			   AND VCI.Title = ''{ValueCaptureInitiative}''', [SuggestionText] = N'What is cumulative one-time cost for all initiatives?'
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'  SELECT  	   WP.Title AS [Workplan Items Linked to Value Capture Initiatives]  	   FROM WorkPlan WP 	   LEFT JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WPVC  	             ON WP.ID=WPVC.WorkPlanId 	   LEFT JOIN ValueCaptureInitiatives VCI  	             ON VCI.ID=WPVC.ValueCaptureInitiativeId', [SuggestionText] = N'List all workplan items linked to VC initiatives.'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID     WHERE          E.Recurring = 1     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID     WHERE          A.Recurring = 1      GROUP BY          A.ValueCaptureInitiativeId, B.Title )   SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , (A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [SuggestionText] = N'List all initiatives that had an estimate annualized run-rate differed by more than 10% from the Actual annualized run-rate.'
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     CONCAT(''Tracking Period of the Program is from '', CAST(MIN(VTM.StartDt) AS DATE), '' to '', CAST(MAX(VTM.EndDt) AS DATE)) FROM     ValueCaptureTransactionMonths VTM WHERE     VTM.IsItemActive = 1', [SuggestionText] = N'What''s the tracking period for my project?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''{ProjectTeam}'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''{ProjectTeam}''    ) Act         ON 1 = 1', [SuggestionText] = N'What''s the variance for Legal function?'
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT   	    COUNT(VCI.ID) AS [Initiative Count for Selected Evaluator Quad]  		     FROM ValueCaptureInitiatives VCI 		LEFT JOIN VCInitiativeEvaluatorQuadInfo VCQ  		    ON VCI.VCInitiativeEvaluatorQuadInfoId=VCQ.ID 		       WHERE VCQ.Title= {EvaluatorQuad}', [SuggestionText] = N'Based on Evaluator comparison, how many initiatives have ''High Benefit, High Complexity''?'
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''{ProjectTeam}'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''{ProjectTeam}''     ) Act         ON 1 = 1', [SuggestionText] = N'What is my variance for the IT initiatives?'
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ISNULL(SUM(Est.Amount), 0.0) AS Estimates,        ISNULL(SUM(Act.Amount), 0.0) AS Actuals,        ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''Finance''           and VCI.Title = ''Initiative 1''           and Est.MYear = ''Y1M1'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''Finance''               AND VCI.Title = ''Initiative 1''               AND MYear = ''Y1M1''     ) Act         ON 1 = 1', [SuggestionText] = N'What is my Y1M1 Estimates, Actuals and Variance for Finance - [Initiative 1]?'
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID 	LEFT JOIN ValueCaptureTransactionMonths VT ON VT.[Key] = E.MYear      WHERE          E.Recurring = 1 		AND (CAST( DATEADD(MM, 3 , GETDATE()) AS DATE) BETWEEN VT.StartDt AND VT.EndDt)     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID  	LEFT JOIN ValueCaptureTransactionMonths VT ON VT.[Key] = A.MYear      WHERE          A.Recurring = 1  		AND (CAST( DATEADD(MM, 3 , GETDATE()) AS DATE) BETWEEN VT.StartDt AND VT.EndDt)     GROUP BY          A.ValueCaptureInitiativeId, B.Title )  SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , ABS(A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [SuggestionText] = N'List initiatives that had an Estimate ARR that differed by 10% (higher or lower) from the Actual ARR for previous month.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  ISNULL(SUM(UE.Amount)/1000000,0) AS TotalNetSales FROM ValueCaptureEstimates VE LEFT JOIN ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId WHERE FLT.Title = ''PnL'' AND FL.Title in (''Net sales'')', [SuggestionText] = N'In the PnL, what is my net sales?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS TotalOperatingPerformance FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL''  AND FLG.Title in (''Total Operating Performance'') ', [SuggestionText] = N'In the PnL, what is my total operating performance?'
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS GrossProfit FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL''  AND FLG.Title in (''Gross Profit'') ', [SuggestionText] = N'In the PnL, what is my gross profit?'
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [EBITA & Net Income] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL'' AND FLG.Title in (''EBITDA'',''Net Income'') ', [SuggestionText] = N'In the PnL, what is my EBITDA and Net Income?'
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Assets] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Total Current Assets'',''Total Non-Current Assets'') ', [SuggestionText] = N'In the Balance Sheet, what is my Total Assets?'
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Liabilities] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Total Current Liabilities'',''Total Non-Current Liabilities'') ', [SuggestionText] = N'In the Balance Sheet, what is my Total Liabilities?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Equity] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Equity'') ', [SuggestionText] = N'In the Balance Sheet, what is my Total Equity?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(VTE.NonHeadcountCostReductionEst) NonHeadcountCostReduction, SUM(VTE.HeadcountCostReductionEst) HeadcountCostReduction FROM ValueCaptureTopDownEstimates VTE', [SuggestionText] = N'What is the total of headcount and non-headcount related cost reduction?'
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH CTE AS  ( 	SELECT I.ProjectTeamId  	FROM ValueCaptureEstimates E 		LEFT JOIN ValueCaptureInitiatives I ON I.ID = E.ValueCaptureInitiativeId 	EXCEPT 	SELECT VCTDE.ProjectTeamId FROM ValueCaptureTopDownEstimates VCTDE )  SELECT PT.Title [ProjectTeam]  FROM CTE LEFT JOIN ProjectTeams PT ON PT.ID = CTE.ProjectTeamId', [SuggestionText] = N'List out teams that have bottom-up estimates but missing top-down targets.'
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' DECLARE @CurrentYR NVARCHAR(10), @SQL NVARCHAR(MAX)  SELECT  TOP 1 @CurrentYR = [YEAR] FROM vwValueCaptureTransactionMonths WHERE RelativeYear = YEAR(GETDATE())   SELECT @SQL = '' ;WITH TopDownCTE AS ( 	SELECT  		PT.ID  PROJECTTEAMID 		,PT.Title [ProjectTeam] 		,(SUM(ISNULL(VT.RevenueGrowthEstimate,0))  + SUM(ISNULL(VT.NonHeadcountCostReductionEst,0)) + SUM(ISNULL(VT.HeadcountCostReductionEst,0)))/1000000  [Target] 	FROM ValueCaptureTopDownEstimates VT 		LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId 	WHERE PT.ManageValueCapture = 1 	GROUP BY  		PT.ID  		,PT.Title 	UNION ALL 	SELECT  		-1 		,''''Overall'''' 		,(SUM(ISNULL(VT.RevenueGrowthEstimate,0))  + SUM(ISNULL(VT.NonHeadcountCostReductionEst,0)) + SUM(ISNULL(VT.HeadcountCostReductionEst,0)))/1000000  [Target] 	FROM ValueCaptureTopDownEstimates VT 		LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId 	WHERE PT.ManageValueCapture = 1 ) , BottomUPCTE AS ( 	SELECT  		VI.ProjectTeamId 		,PT.Title [ProjectTeam] 		,(SUM(ISNULL(E.''+@CurrentYR+''M12Estimate,0))*12)/1000000 [Estimate] 	FROM ValueCaptureEstimates E 	 JOIN ValueCaptureInitiatives VI ON VI.ID =E.ValueCaptureInitiativeId 	 LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId 	WHERE  		VI.IsItemActive = 1  		AND E.Recurring = 1  		AND PT.ManageValueCapture = 1 	GROUP BY  		VI.PROJECTTEAMID 		,PT.Title 	UNION ALL 	SELECT  		-1 		,''''Overall'''' 		,(SUM(ISNULL(E.''+@CurrentYR+''M12Estimate,0))*12)/1000000 [Estimate] 	FROM ValueCaptureEstimates E 	 JOIN ValueCaptureInitiatives VI ON VI.ID =E.ValueCaptureInitiativeId 	 LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId 	WHERE  		VI.IsItemActive = 1  		AND E.Recurring = 1  		AND PT.ManageValueCapture = 1 )  SELECT  	COALESCE(T.PROJECTTEAMID,B.PROJECTTEAMID) ProjectTeamID 	,COALESCE(T.ProjectTeam,B.ProjectTeam) ProjectTeam 	,ISNULL(T.[Target],0) [TopDown Target(M)] 	,ISNULL(B.Estimate,0) [BottomUP Estimate(M)] 	,ISNULL(T.[Target],0) - ISNULL(B.Estimate,0) [Variance(M)] FROM TopDownCTE T 	FULL OUTER JOIN BottomUPCTE B ON T.ProjectTeamId = B.ProjectTeamId ORDER BY ProjectTeamId''  EXEC sp_executesql  @SQL', [SuggestionText] = N'What is the variance between Top down and bottom up? Provide overall variance and variance by the team.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 143;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID     WHERE          E.Recurring = 1 		AND E.MYear IN (''Y1M12'')     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID     WHERE          A.Recurring = 1          AND A.MYear IN (''Y1M12'')     GROUP BY          A.ValueCaptureInitiativeId, B.Title )   SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , ABS(A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [SuggestionText] = N'List out initiatives that have an Estimate Annualized Run Rate that differed by 10% (higher or lower) from the Actual Annualized Run Rate for Y1M12.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  VC.Title AS ValueCaptureInitiativesReadyForApproval FROM  ValueCaptureInitiatives VC WHERE  VC.ReadyForApproval = 1', [SuggestionText] = N'List out validated initiatives that are ready to be approved.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 145;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      VI.title AS InitiativeImpactOnPnL FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId WHERE      FL.FinancialLineItemTypeId = 1 GROUP BY      VI.Title', [SuggestionText] = N'List out initiatives that are impacting PnL.'
WHERE [ID] = 146;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 5 A.Initiatives, A.Amount FROM( SELECT VI.Title Initiatives ,sum(VE.Amount) Amount FROM vwUnpivotActuals VE LEFT JOIN ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN ValueCaptureImpactTypes VIT ON VIT.ID = VE.ValueCaptureImpactTypeid GROUP BY VI.Title,VE.Amount ) A WHERE A.Amount > 0 ORDER BY A.Amount DESC', [SuggestionText] = N'List out top 5 initiatives that are positively impacting PnL.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 147;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT TOP 5  		VI.Title [top 5 initiatives with best benefit score] 	FROM  		ValueCaptureInitiatives VI 	LEFT JOIN  		ValueCaptureImpacts VIM ON VIM.ID = VI.ValueCaptureImpactid 	WHERE  		VIM.ID in (1) 	ORDER BY  		VI.BenefitScore DESC', [SuggestionText] = N'List out top 5 initiatives with best benefit score that have high financial impact.'
WHERE [ID] = 148;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT TOP 5  		VI.Title [top 5 most complex initiatives] 	FROM  		ValueCaptureInitiatives VI 	LEFT JOIN  		ValueCaptureImpacts VIM ON VIM.ID = VI.ValueCaptureImpactid 	WHERE  		VIM.ID in (3) 	ORDER BY  		VI.ComplexityScore DESC', [SuggestionText] = N'List out top 5 most complex initiatives that have low financial impact.'
WHERE [ID] = 149;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1  PT.Title, SUM(ISNULL(VTE.HeadcountCostReductionEst,0)) AS MostHeadcountCostReduction FROM   ValueCaptureTopDownEstimates VTE LEFT JOIN   ProjectTeams PT ON PT.ID = VTE.Projectteamid GROUP BY   PT.Title ORDER BY   SUM(ISNULL(VTE.HeadcountCostReductionEst,0)) DESC', [SuggestionText] = N'Which team has most amount of headcount related cost reduction?'
WHERE [ID] = 150;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Iniatives that are Cost Reduction and are Easy for Implementation Ease] FROM ValueCaptureInitiatives VI     LEFT JOIN ValueCaptureTypes VT         ON VT.ID = VI.ValueCaptureTypeID     LEFT JOIN ImplementationEase VD         ON VD.ID = VI.ImplementationEaseID WHERE VT.Title = ''Cost Reduction''       AND VD.Title = ''Easy''', [SuggestionText] = N'List all Iniatives that are Cost Reduction and are Easy for Implementation Ease.'
WHERE [ID] = 151;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VS.Title [Value Capture Stage],        VI.Title [Initiatives that have Talent intiative value drivers] FROM ValueCaptureInitiatives VI     LEFT JOIN ValueCaptureStages VS         ON VS.ID = VI.ValueCaptureStageID     LEFT JOIN ValueCaptureInitiativesToValueCaptureValueDriversForValueCaptureValueDrivers VD         ON VD.ValueCaptureInitiativeId = VI.ID     LEFT JOIN ValueCaptureValueDrivers VV         ON VD.ValueCaptureValueDriverId = VV.ID WHERE VV.Title = ''Talent'' ', [SuggestionText] = N'Provide me a list of Iniatives by stage that have Talent iniative value drivers.'
WHERE [ID] = 152;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VC.Title as [Value Capture Initiatives with No Owners] FROM ValueCaptureInitiatives as VC WHERE VC.ItemOwnerId IS NULL', [SuggestionText] = N'Show me all iniatives that do not have an owner.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 153;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      ISNULL(VP.Title, ''No Priority'') AS Category,     COUNT(VC.ID) AS Count,     ''Priority'' AS Type FROM      ValueCaptureInitiatives VC LEFT JOIN      ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId GROUP BY      VC.ValueCapturePriorityId, VP.Title  UNION ALL  SELECT      ISNULL(VS.Title, ''No Stage Assigned'') AS Category,     COUNT(VC.ID) AS Count,     ''Stage'' AS Type FROM      ValueCaptureInitiatives VC LEFT JOIN      ValueCaptureStages VS ON VS.ID = VC.ValueCaptureStageId WHERE      VC.ValueCaptureStageId IS NOT NULL GROUP BY      VC.ValueCaptureStageId, VS.Title;', [SuggestionText] = N'Provide me a count of initiatives by prioirty and stage.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 154;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT FL.Title [Balance sheet line items that do not have a linked account] FROM ValueCaptureFinancialLineItems FL     LEFT JOIN ValueCaptureFinancialLineItemTypes FLT         ON FLT.ID = FL.FinancialLineItemTypeID     LEFT JOIN BalanceSheetAccounts BLA         ON BLA.FinancialLineItemID = FL.ID WHERE FLT.Title = ''Balance Sheet''       AND BLA.ID IS NULL', [SuggestionText] = N'Show me all Balance sheet line items that do not have a linked account.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 155;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(E.Amount, 0) * 12) [Run Rate for iniatives in Approved, Committed and Realized] FROM ValueCaptureInitiatives VI LEFT JOIN vwUnpivotEstimates E ON E.ValueCaptureInitiativeId = VI.ID LEFT JOIN ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageID WHERE VS.Title IN ( ''Approved'', ''Committed'', ''Realized'' ) AND MYear = ( select VCTMK.[Key] from ValueCaptureTransactionMonths VCTMK where CAST(VCTMK.EndDt AS date) = (SELECT MAX(CAST(VCTM.EndDt AS date)) FROM ValueCaptureTransactionMonths VCTM))', [SuggestionText] = N'What is the Run Rate for iniatives in Approved, Committed and Realized?'
WHERE [ID] = 156;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team],        SUM(T.HeadCountCostReductionEst) [Total target Headcount cost redutciton] FROM ValueCaptureTopDownEstimates T     LEFT JOIN ProjectTeams PT         ON PT.ID = T.ProjectTeamId GROUP BY PT.Title', [SuggestionText] = N'Provide the total Headcount cost redutciton target listed out by project team and provide the number of FTEs.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 157;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(T.FTEs) [FTEs part of the top down targets for EMEIA] FROM ValueCaptureTopDownEstimates T     LEFT JOIN Regions R         ON R.ID = T.RegionID WHERE R.Title = ''EMEIA''', [SuggestionText] = N'How many FTEs are part of the top down targets for EMEIA?'
WHERE [ID] = 158;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiatives with Benefit score over 75] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId WHERE CAST(VI.BenefitScore AS INT) > 75 AND PT.Title IN (''HR'')', [SuggestionText] = N'Which HR iniatives have a benefit score over 75?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 159;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	VI.Title [Initiatives that have Risk associated with them] FROM 	ValueCaptureInitiatives VI LEFT JOIN  	ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageId LEFT JOIN  	RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs VIR ON VIR.ValueCaptureInitiativeId = VI.ID LEFT JOIN 	RisksAndIssues RI ON RI.ID = VIR.RisksAndIssueId WHERE  	RI.IssueRiskCategory IN (''Risk'') 	AND VS.Title IN (''Committed'')', [SuggestionText] = N'List out all Committed Iniatives that have a risk associated with them.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 160;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select Top 5 VC.Title, VS.Title, VC.BenefitScore From ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VS on VS.ID = VC.ValueCaptureStageId where VS.Title in (''Identified'') order by BenefitScore desc', [SuggestionText] = N'List all High Benefit iniatives that are in the Identified Stage.'
WHERE [ID] = 161;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	VI.Title [Initiative is Approved with no Owner] FROM 	ValueCaptureInitiatives VI LEFT JOIN  	ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageId WHERE  	VS.Title IN (''Approved'') 	AND 	VI.ItemOwnerId IS NULL', [SuggestionText] = N'Show me all iniatives that are approved and do not have an owner assigned.'
WHERE [ID] = 162;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	COUNT(VI.ID) FROM 	ValueCaptureInitiatives VI LEFT JOIN 	UserProfiles UP ON UP.ID = VI.ItemOwnerId WHERE  	UP.EMail = ''{Username}''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How many iniatives are assigned to me?'
WHERE [ID] = 163;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PT.Title ProjectTeam,SUM(ISNULL(VTE.NonHeadcountCostReductionEst,0)) NonHeadcountCostReductionTarget  FROM   ValueCaptureTopDownEstimates VTE LEFT JOIN   ProjectTeams PT ON PT.ID = VTE.Projectteamid GROUP BY   PT.Title', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Provide the total non-headcount cost reduciton targets listed out by project team.'
WHERE [ID] = 164;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title ', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 165;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' ', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 166;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' ', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 167;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Day 1 processes? '
WHERE [ID] = 168;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Current State processes? '
WHERE [ID] = 169;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ns.Title, a.TotalCount FROM ( SELECT COUNT(Title) AS TotalCount, BusinessEntityId FROM Nodes nds WHERE NodeTypeId = 3 GROUP BY BusinessEntityId ) a INNER JOIN Nodes ns ON a.BusinessEntityId = ns.ID', [SuggestionText] = N'Can you provide me number of processes by op model?'
WHERE [ID] = 170;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ns.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ns ON a.BusinessEntityId = ns.ID ', [SuggestionText] = N'How many processes we have in current state?'
WHERE [ID] = 171;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ns.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ns ON a.BusinessEntityId = ns.ID ', [SuggestionText] = N'How many processes we have in Day1 state?'
WHERE [ID] = 172;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''  AND N.NodeTypeId = 3  AND N.ID NOT IN (   SELECT DISTINCT NTO.NodeId   FROM Nodes N1   LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null  )', [SuggestionText] = N'How many processes don''t have an Owner assigned in Current State?'
WHERE [ID] = 173;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.ID 	,PR.Title FROM Nodes PR JOIN TransactionStates T ON T.ID = PR.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' 	AND PR.NodeTypeId = 3 	AND NOT EXISTS  				(SELECT 1 FROM [NodesToDispositionsForDispositionNew] D WHERE D.NodeId = PR.ID)', [SuggestionText] = N'List processes that don''t have Disposition assigned in Day 1 state.'
WHERE [ID] = 174;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM Dispositions d', [SuggestionText] = N'List the Disposition options available.'
WHERE [ID] = 175;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [ProcessGroup] ,COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) [Enablers Count] FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 2 GROUP BY N.Title ORDER BY [Enablers Count] DESC', [SuggestionText] = N'How many enablers are associated with each Process Group?'
WHERE [ID] = 176;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title [Disposition] 	,COUNT(SD.SystemId) [SystemCount] FROM Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID GROUP BY D.Title', [SuggestionText] = N'List the total number of systems by disposition.'
WHERE [ID] = 177;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT PR.Title [Process] , D.DispositionId FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId  	LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 	AND D.NodeId IS NULL 	AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'Can you please list down all Day 1 processes where no disposition has been tagged?'
WHERE [ID] = 178;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT 	N.Title [Process]	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 3 GROUP BY N.Title HAVING COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) = 0', [SuggestionText] = N'Can you please list all processes with no Enablers?'
WHERE [ID] = 179;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.Title as MissingInDay1 FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''CURRENT_STATE'' EXCEPT SELECT 	PR.Title [Process] FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'Can you please compare the Current state & day 1 operating model and list all processes which are missing in Day1 as compared to current state?'
WHERE [ID] = 180;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title Enabler, ''Asset'' as Category	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID LEFT JOIN [Assets] A ON A.ID = NA.AssetsId WHERE A.Title IS NOT NULL UNION ALL SELECT DISTINCT F.Title Enabler, ''Facility'' as Category FROM Nodes N LEFT JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID LEFT JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE F.Title IS NOT NULL  UNION ALL SELECT DISTINCT S.Title Enabler , ''System'' as Category FROM Nodes N LEFT JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID LEFT JOIN [Systems] S ON S.ID = NS.SystemsId WHERE S.Title IS NOT NULL  UNION ALL SELECT DISTINCT T.Title Enabler	, ''TPA'' as Category FROM Nodes N LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID LEFT JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId WHERE T.Title IS NOT NULL ', [SuggestionText] = N'What Enablers are we tracking for this project?'
WHERE [ID] = 181;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# Systems present in this functional OP model] FROM Systems s', [SuggestionText] = N'How many Systems are there in this functional op model?'
WHERE [ID] = 182;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# TPAs present in this functional OP model] FROM ThirdPartyAgreements tpa', [SuggestionText] = N'How many TPAs are there in this functional op model?'
WHERE [ID] = 183;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ST.Title AS SystemType, COUNT(S.ID) [# Systems by Type] FROM Systems S LEFT JOIN SystemTypes ST ON ST.ID = S.TypeId WHERE S.TypeId IS NOT NULL GROUP BY ST.Title', [SuggestionText] = N'List the number of Systems by Type.'
WHERE [ID] = 184;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT O.Title AS Owners, Count(*) AS [# TPAs by Ownership] FROM ThirdPartyAgreements TP LEFT JOIN Owners O ON O.ID = TP.OwnerID WHERE TP.OwnerID IS NOT NULL GROUP BY O.Title', [SuggestionText] = N'List the number of TPAs by Ownership.'
WHERE [ID] = 185;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [ProcessGroups With No Process] FROM Nodes N WHERE N.nodetypeid = 2 AND ID NOT IN (SELECT ns.NodeParentId FROM Nodes ns)', [SuggestionText] = N'List down all process groups with no process within them.'
WHERE [ID] = 186;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(P.[ID]) AS [Number of Process across Op Model] FROM Nodes P     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = ''Process''', [SuggestionText] = N'List the number of processes across op models.'
WHERE [ID] = 187;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog opma WHERE Modified >= DATEADD(hh, -1, GETDATE())', [SuggestionText] = N'List history of changes to the op model in the past one hour.'
WHERE [ID] = 188;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog opma WHERE FieldImpacted = ''Owner''       AND CAST(Modified AS DATE) = CAST(GETDATE() AS DATE)', [SuggestionText] = N'List the history of changes to Ownership in the op model today.'
WHERE [ID] = 189;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog opma WHERE Title = ''Deleted''       AND DATEPART(wk, CAST(Modified AS DATE)) = DATEPART(wk, CAST(GETDATE() AS DATE))       AND YEAR(Modified) = YEAR(GETDATE())', [SuggestionText] = N'List the history of deletes in the op model this week.'
WHERE [ID] = 190;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title [State], N.Title AS OperatingModel FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId  WHERE N.NodeTypeId = 1', [SuggestionText] = N'List the functional operating models across different states.'
WHERE [ID] = 191;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title Opmodel, L.Title LiveNote, Note FROM OperatingModelLiveNotes L LEFT JOIN Nodes N ON N.Id = L.NodeId', [SuggestionText] = N'Are there any Live Notes in this op model?'
WHERE [ID] = 192;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process FROM OperatingModelActivityLog OL  LEFT JOIN Nodes N ON N.ID = Ol.ObjectID WHERE OL.Title = ''Updated'' AND Object = ''Process'' AND (CAST(OL.Modified AS DATE) BETWEEN DATEADD(DAY, -7, CAST(GETDATE()AS DATE))  AND CAST(GETDATE() AS DATE))', [SuggestionText] = N'List down all processes which were updated since last 1 week.'
WHERE [ID] = 193;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process, OldValue, NewValue  FROM OperatingModelActivityLog PL  LEFT JOIN Nodes N ON N.ID = PL.ObjectID  WHERE Object = ''Process'' AND PL.Title = ''Updated'' AND FieldImpacted = ''Title'' AND N.TransactionStateId = 6', [SuggestionText] = N'List down all processes which have been renamed in Day 1 op model.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 194;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 5     S.Title AS [Systems],     Count(NSS.NodesID) AS [ProcessCount] FROM Nodes N     LEFT JOIN [dbo].[NodesToSystemsForEnablerSystems] NSS         ON N.ID = NSS.NodesId     LEFT JOIN [dbo].[Systems] S         ON NSS.SystemsId = S.ID WHERE N.NodeTypeId = 3 GROUP BY S.Title ORDER BY Count(NSS.NodesID) DESC', [SuggestionText] = N'Please provide top 5 systems that are linked to various processes.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 195;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [List of processes for CurrentState where ownership is not present] FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''   AND N.NodeTypeId = 3   AND N.ID NOT IN (     SELECT DISTINCT NTO.NodeId     FROM Nodes N1     LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null   )', [SuggestionText] = N'For Current State, list all processes that doesn''t have any ownership.'
WHERE [ID] = 196;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT PR.Title [Process] FROM Nodes PR     JOIN TransactionStates  S  ON S.ID = PR.TransactionStateId    LEFT JOIN  NodesToDispositionsForDispositionNew D             ON D.NodeId = PR.ID WHERE     PR.NodeTypeId = 3     AND D.NodeId IS NULL     AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'For Day 1 Operating Models, list all processes that doesn''t have any dispositions.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 197;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes  n   WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,  nds.Title,   nds.NodeParentID, nds.NodeTypeId, HierId = HierId + 1     FROM Nodes nds, GetSelectedFunction  where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  , ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID     FROM     (SELECT * FROM PG_Hierarchy pgh WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT TOP 1     Functions AS [Function with highest number of processes] FROM (     SELECT Functions,            COUNT(ID) as [Process Count]     FROM ProcessCTE  tc   GROUP BY Functions ) A order by [Process Count] desc    ', [SuggestionText] = N'Which function has the highest number of processes?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 198;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Processes with Disposition as TSA] FROM   Nodes   N   LEFT JOIN     NodesToDispositionsForDispositionNew NTD             ON NTD.NodeId = N.ID     LEFT JOIN         Dispositions  D ON NTD.DispositionId = D.ID WHERE     D.Title = ''TSA''     AND N.NodeTypeId = 3', [SuggestionText] = N'List down all Processes which have their disposition set as TSA.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 199;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title as [List of Processes with No Disposition] FROM Nodes N WHERE N.NodeTypeId=3 AND N.ID NOT IN (SELECT NodeId FROM NodesToDispositionsForDispositionNew ndd)', [SuggestionText] = N'List down all processes with no Disposition assigned.'
WHERE [ID] = 200;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1)  [No. of Processes] FROM Nodes PR JOIN NODES P ON PR.NodeParentID = P.ID WHERE PR.NodeTypeId = 3 AND P.Title = ''{FunctionName}''', [SuggestionText] = N'How many processes are there in the IT function?'
WHERE [ID] = 201;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PR.Title [Process] , COUNT(DISTINCT D.DispositionId) [DispostionCount] FROM Nodes PR JOIN NODES P ON PR.NodeParentID = P.ID LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 AND P.Title = ''COMMERCIAL'' GROUP BY PR.Title HAVING COUNT(DISTINCT D.DispositionId) > 1', [SuggestionText] = N'List processes that have more than 1 disposition in IT.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 202;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.NodeTypeId,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ), ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID AS [ProcessID]     FROM     (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT ISNULL(Geo.Title, ''Not Assigned'') AS [Geographic Coverages],        COUNT(P.ProcessID) AS [Total Number of Process in Real Estate] FROM ProcessCTE P     LEFT JOIN ProcessAttributes PA         ON P.ProcessID = PA.NodeId     LEFT JOIN GeographicCoverages Geo         ON PA.GeographicCoverageId = Geo.ID WHERE P.Functions =''{FunctionName}'' GROUP BY Geo.Title', [SuggestionText] = N'What is total number of processes in Real Estate grouped by geographic coverage?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 203;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,            HierId = HierId + 1     FROM Nodes nds,          PG_Hierarchy     WHERE nds.NodeParentID = PG_Hierarchy.id    ) SELECT DISTINCT      F.Title AS [Functions],     SF.[Title] AS  [Subfunctions] FROM (SELECT * FROM PG_Hierarchy pg WHERE HierId = 2) F     LEFT JOIN     (SELECT * FROM PG_Hierarchy pg WHERE HierId = 3) SF         ON F.ID = SF.NodeParentID ORDER BY 1,          2', [SuggestionText] = N'List all functions and sub-functions for functional operating model [Name].'
WHERE [ID] = 204;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     O.Title     AS [Process Owner],     COUNT(N.ID) AS [Process Distribution] FROM     Nodes      N     LEFT JOIN         Owners O             ON N.OwnerId = O.ID WHERE     N.NodeTypeId = 3 GROUP BY     O.Title ', [SuggestionText] = N'Provide process owner distribution for my project.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 205;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes  nd   WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,            HierId = HierId + 1     FROM Nodes nds,          PG_Hierarchy     WHERE nds.NodeParentID = PG_Hierarchy.id    ) SELECT DISTINCT      SF.[Title] AS  [Subfunctions] FROM (SELECT * FROM PG_Hierarchy pg WHERE HierId = 2) F     LEFT JOIN     (SELECT * FROM PG_Hierarchy pg WHERE HierId = 3) SF         ON F.ID = SF.NodeParentID WHERE F.Title=''{FunctionName}'' ORDER BY 1', [SuggestionText] = N'List all sub-functions for Finance.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 206;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.NodeTypeId,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  ,        ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID AS [ProcessID]     FROM     (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT P.Processes,        ISNULL(S.Title, ''Not Assigned'') AS [Systems],        ISNULL(TPA.Title, ''Not Assigned'') AS [Third Party Agreements] FROM ProcessCTE P     LEFT JOIN NodesToThirdPartyAgreementsForEnablerTpa NTPA         ON P.ProcessID = NTPA.NodesId     LEFT JOIN ThirdPartyAgreements TPA         ON NTPA.ThirdPartyAgreementsId = TPA.ID     LEFT JOIN NodesToSystemsForEnablerSystems NSys         ON NSys.NodesId = P.ProcessID     LEFT JOIN Systems S         ON NSys.SystemsId = S.ID', [SuggestionText] = N'List all details for processes and systems, third party agreements linkages.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 207;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT A.Title Assest,        P.Title LinkedProcess FROM Assets A     LEFT JOIN ProcessAssetLinks PA         ON PA.AssetId = A.ID     LEFT JOIN Nodes P         ON P.ID = PA.ProcessId     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = ''Process''', [SuggestionText] = N'List the Assets and their linked processes.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 208;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title OpModel, BP.Title  EndToEndProcess FROM BusinessProcesses BP  LEFT JOIN Nodes N ON N.ID = BP.NodeId  WHERE N.NodeTypeId = 1', [SuggestionText] = N'Are there any end-to-end business processes in this op model?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 209;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL           AND TransactionStateID = 8     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ) SELECT N.Title [Function],        NTSS.Title AS [Field Status],        OPS.Title AS [Op Status] FROM NodeTrackers NT     LEFT JOIN NodeTrackerStatuses NTS         ON NTS.NodeTrackerID = NT.ID     JOIN     (SELECT * FROM GetSelectedFunction gsf WHERE HierId = 2 and Title = ''HR'') N         ON N.ID = NT.NodeId     LEFT JOIN NodeTrackerStatusFields NTSS         ON NTSS.ID = NTS.NodeTrackerStatusFieldId     LEFT JOIN OpStatuses OPS         ON OPS.ID = NTS.NodeTrackerStatusStatusId', [SuggestionText] = N'In the Progress Tracker, what is the current status of HR?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 210;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL           AND TransactionStateID = 6     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM Nodes ROOT     WHERE ROOT.ID in (select ID from GetSelectedFunction gsf where HierId = 2 and Title = ''Finance'' )     UNION ALL     SELECT CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ) SELECT COUNT(*) AS [Process with multiple dispositions for Finance] FROM PG_Hierarchy pg WHERE NodeTypeId = 3       AND ID IN (                     SELECT NodeID                     FROM                     (                         SELECT NodeId,                                Count(DispositionID) As [Disposition Count]                         FROM NodesToDispositionsForDispositionNew   ndf     GROUP BY NodeId                         HAVING Count(DispositionID) > 1                     ) a                 )', [SuggestionText] = N'In Finance, how many processes have multiple dispositions?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 211;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Process which doesn''''t have ownership] FROM     Nodes                 N     JOIN         TransactionStates T             ON T.ID = N.TransactionStateId WHERE     OwnerId IS NULL     AND N.NodeTypeId = 3', [SuggestionText] = N'List down all processes with no Owners assigned.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 212;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes with more than one Disposition] FROM Nodes N WHERE N.NodeTypeId = 3       AND N.ID IN ( SELECT NodeID   FROM   (    SELECT NodeId, COUNT(DispositionID) AS [Disposition Count]                           FROM NodesToDispositionsForDispositionNew    ndf                       GROUP BY NodeId                           HAVING COUNT(DispositionID) > 1                       ) a                   ) ', [SuggestionText] = N'List down all processes with more than one Disposition associated with them.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 213;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT ID,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes  nd   WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.ID,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, TransactionStateID) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.TransactionStateID     FROM Nodes ROOT     WHERE ROOT.ID IN (                          SELECT ID                          FROM GetSelectedFunction         gsf                 WHERE HierId = 2                                AND Title = ''{FunctionName}''                                AND TransactionStateId = 6                      )     UNION ALL     SELECT CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.TransactionStateId     FROM PG_Hierarchy PARENT,          Nodes CHILD     WHERE PARENT.id = CHILD.NodeParentID    ) SELECT Title AS [List of Processes Associated with Legal Function] FROM PG_Hierarchy pgh ORDER BY ID,          title DESC ', [SuggestionText] = N'Can you please list all processes associated with Legal function?'
WHERE [ID] = 214;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of all Processes associated with APAC] FROM     Nodes       N     LEFT JOIN         Regions R             ON N.CountryRegionID = R.ID WHERE     n.NodeTypeId = 3     AND R.Title = ''{Region}''', [SuggestionText] = N'Can you please list all processes associated with APAC?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 215;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nd WHERE NodeParentID IS NULL  UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes FROM (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT P.Functions, A.Processes  FROM (SELECT DISTINCT [Processes]  		FROM ProcessCTE 	pte	GROUP BY Processes  		HAVING COUNT(DISTINCT [Functions] ) > 1) A  	LEFT JOIN ProcessCTE P ON P.Processes = A.Processes ', [SuggestionText] = N'Can you please list all processes with same names across different functions?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 216;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     [List of Processes with same name] FROM     (         SELECT             N.Title  AS [List of Processes with same name],             Count(1) AS [Repeat Count]         FROM             Nodes N         WHERE             N.NodeTypeId = 3         GROUP BY             N.Title         HAVING             COUNT(*) > 1     ) a ORDER BY     1 ', [SuggestionText] = N'Can you please list all processes with same name?'
WHERE [ID] = 217;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes tagged as ParentCo in Current State with Disposition set as TSA ] FROM Nodes N     LEFT JOIN NodesToOwnersForOwnerNew NTO         on N.ID = NTO.NodeId     LEFT JOIN Owners O         ON O.ID = NTO.OwnerId     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID     LEFT JOIN TransactionStates TS         ON N.TransactionStateId = TS.ID     LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND TS.[Key] = ''CURRENT_STATE''       AND O.Title = ''Parent Co''       AND D.Title = ''TSA''', [SuggestionText] = N'Can you please list the processes which are tagged as ''ParentCo'' in Current state having disposition set as ''TSA''?'
WHERE [ID] = 218;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Systems not tagged in any process] FROM     Systems s WHERE     ID NOT IN (                   SELECT DISTINCT                       SystemsId                   FROM                       Nodes                               N                       LEFT JOIN                           NodesToSystemsForEnablerSystems NSS                               ON N.ID = NSS.NodesId  					  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId                    WHERE T.Title= ''Day 1'' AND                        N.NodeTypeId = 3               )', [SuggestionText] = N'can you please list all systems which are not tagged to any process in Day 1 op model?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 219;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     ISNULL(ST.Title, ''System Type Not Assigned'') AS [SystemsType],     S.Title                                      AS [Systems] FROM     Systems         S     LEFT JOIN         SystemTypes ST             ON S.TypeId = ST.ID', [SuggestionText] = N'Can you please provide of all systems based upon their type?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 220;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nd  WHERE NodeParentID IS NULL  UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF LEFT JOIN (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number for Multiple Deposition]  FROM ProcessCTE p WHERE ID IN ( SELECT NodeID FROM ( SELECT NodeId,    Count(DispositionID) As [Disposition Count] FROM NodesToDispositionsForDispositionNew ndn GROUP BY NodeId HAVING Count(DispositionID) > 1 ) a ) GROUP BY [Functions] ORDER BY  COUNT(*) DESC', [SuggestionText] = N'Which function has the highest number of multi disposition processes?'
WHERE [ID] = 221;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes n   WHERE NodeParentID IS NULL   UNION ALL         SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   WHERE nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2    UNION ALL         SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  WHERE  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS (  SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy gg WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number of Live Without]  FROM ProcessCTE pp WHERE ID IN (	SELECT NodeId 				FROM NodesToDispositionsForDispositionNew ND  				LEFT JOIN Dispositions D ON D.ID = DispositionID  				WHERE D.Title = ''Live without''			 				) GROUP BY [Functions] ORDER BY  COUNT(*) DESC', [SuggestionText] = N'which function has the highest number of ''Live without''?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 222;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nd  WHERE NodeParentID IS NULL  UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy pp WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy pp WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number of Processes tagged to them] , COUNT(*)  [No of Processes] 				FROM ProcessCTE 	ppt	GROUP BY [Functions] 				ORDER BY  COUNT(*) DESC    ', [SuggestionText] = N'Which function has the highest number of processes tagged to them? and how many?'
WHERE [ID] = 223;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes   n  WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,             HierId = HierId + 1     FROM Nodes nds,          PG_Hierarchy     WHERE nds.NodeParentID = PG_Hierarchy.id    ),       ProcessCTE AS (SELECT DISTINCT          F.Title AS [Functions],         f.id AS FunctionID     FROM     (SELECT * FROM PG_Hierarchy pp WHERE HierId = 2) F         LEFT JOIN         (SELECT * FROM PG_Hierarchy gg WHERE HierId = 3) SF             ON F.ID = SF.NodeParentID    ) SELECT Top 1     Functions as [Function with Highest Number of Enablers],     [Enablers Count] FROM (     SELECT P.Functions,            COUNT(DISTINCT TPA.ID) + COUNT(DISTINCT S.ID) + COUNT(DISTINCT Asset.ID) + COUNT(DISTINCT Roles.ID) AS [Enablers Count]     FROM ProcessCTE P         LEFT JOIN NodesToThirdPartyAgreementsForEnablerTpa NTPA           ON P.FunctionID = NTPA.NodesId         LEFT JOIN ThirdPartyAgreements TPA             ON NTPA.ThirdPartyAgreementsId = TPA.ID          LEFT JOIN NodesToSystemsForEnablerSystems NSys              ON NSys.NodesId = P.FunctionID         LEFT JOIN Systems S             ON NSys.SystemsId = S.ID         LEFT JOIN NodesToAssetsForEnablerAssets NAsset              ON NAsset.NodesId = P.FunctionID         LEFT JOIN Assets Asset             ON Asset.ID = NAsset.AssetsId          LEFT JOIN NodesToRolesForEnablerRoles NRole --Roles              ON NAsset.NodesId = P.FunctionID         LEFT JOIN OrgRolesMaster Roles             ON Roles.ID = NRole.RolesId     GROUP BY P.Functions ) A ORDER BY [Enablers Count] DESC', [SuggestionText] = N'Which function has the highest number of enablers tagged to them? and how many?'
WHERE [ID] = 224;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID,  HierId = 1 FROM Nodes n WHERE NodeParentID IS NULL    UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,    HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy(NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM Nodes ROOT   WHERE ROOT.ID in (select ID from GetSelectedFunction g where HierId=2 and Title=''Finance & Accounting'')       UNION ALL        SELECT  CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  )   SELECT PG.Title, OldValue, NewValue  FROM PG_Hierarchy PG  JOIN (SELECT PL.ObjectID, OldValue, NewValue 			FROM OperatingModelActivityLog PL 			WHERE Object = ''Process'' AND Title = ''Updated'' AND PL.Modified = ( 			SELECT  Max(Modified) Modified FROM OperatingModelActivityLog  	op		WHERE ObjectID IN (SELECT ID FROM PG_Hierarchy PG WHERE NodeTypeId=3 )  			AND Object = ''Process'' AND Title = ''Updated'')) A ON A.ObjectID = PG.ID', [SuggestionText] = N'Which process within Finance has been updated most recently and what was the updates?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 225;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Process Associated with Workplan] FROM     Nodes                       N     LEFT JOIN         NodesToWorkPlansForTask NWP             ON N.ID = NWP.NodeId     LEFT JOIN         WorkPlan                WP             ON NWP.WorkPlanId = WP.ID WHERE     N.NodeTypeId = 3', [SuggestionText] = N'How many processes have been associated with a workplan item?'
WHERE [ID] = 226;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(DISTINCT n.ID) AS [No of Process having 2 owners or Dispositions] FROM Nodes n LEFT JOIN (     SELECT NodeId     FROM NodesToDispositionsForDispositionNew  nn   GROUP BY NodeId     HAVING COUNT(DispositionID) = 2 ) d ON n.ID = d.NodeId LEFT JOIN (     SELECT NodeID     FROM NodesToOwnersForOwnerNew  no   GROUP BY NodeID     HAVING COUNT(OwnerId) = 2 ) o ON n.ID = o.NodeID WHERE n.NodeTypeId = 3 AND (d.NodeId IS NOT NULL OR o.NodeID IS NOT NULL)', [SuggestionText] = N'How many processes have 2 owners or dispositions? '
WHERE [ID] = 227;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	COUNT(SD.SystemId) [No of Systems are dispositioned rebuild] FROM  Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID WHERE D.Title = ''Rebuild''', [SuggestionText] = N'How many systems are dispositoned Rebuild?'
WHERE [ID] = 228;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT O.Title [Owners], COUNT(N.ID) [No of Processes]  FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID  LEFT JOIN NodesToOwnersForOwnerNew NOS ON NOS.NodeId = N.ID  LEFT JOIN Owners O ON O.ID = NOS.OwnerId  WHERE NT.Title = ''Process''  GROUP BY O.Title', [SuggestionText] = N'Provide a count of all processes by owner.'
WHERE [ID] = 229;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	R.Title Regions 	, COUNT(D.DispositionId) [Count of Disposition]  FROM NodesToDispositionsForDispositionNew D     JOIN Nodes N ON D.NodeId = N.ID 	JOIN TransactionStates S ON S.ID = N.TransactionStateId  	LEFT JOIN NodeTypes NT ON NT.ID = N.NodeTypeId  	LEFT JOIN Regions R ON R.ID = N.CountryRegionID  WHERE NT.Title = ''Process''  	AND S.[Key] = ''DAY_ONE'' GROUP BY R.Title', [SuggestionText] = N'Show me the count of dispositions in Day 1 model by assigned region.'
WHERE [ID] = 230;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Processes with no owner assigned] FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process''    AND N.ID NOT IN (     SELECT DISTINCT NTO.NodeId     FROM Nodes N1     LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	WHERE NTO.NodeId is not null   )', [SuggestionText] = N'List all processes that do not have an owner assigned.'
WHERE [ID] = 231;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title AS [List of Teams with Disposition set as Unidentified] FROM Nodes N     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID 	LEFT JOIN  NodesToProjectTeamsForProjectTeam NP 	    ON N.ID = NP.NodesId  	LEFT JOIN ProjectTeams PT 	    ON PT.ID = NP.ProjectTeamsId      LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND D.Title = ''Unidentified''', [SuggestionText] = N'Which teams have processes that are disposition ''Unidentified''?'
WHERE [ID] = 232;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Processes with total headcount greater than 0] FROM Nodes N     LEFT JOIN vwHeadcount H         ON H.NodeId = N.ID     LEFT JOIN Nodetypes NT         ON NT.ID = N.NodeTypeId GROUP BY N.Title HAVING SUM(ISNULL(H.TotalHeadCount, 0)) > 0', [SuggestionText] = N'List all processes with total headcount greater than 0.'
WHERE [ID] = 233;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title [Facilities in North America that are leased or owned]   FROM Facilities F  LEFT JOIN FacilityOccupancyTypes FT ON FT.ID = F.FacilityOccupancyTypeID  LEFT JOIN Countries C ON C.ID = F.CountryID  LEFT JOIN Regions R ON R.ID = C.CountryRegionID WHERE FT.Title IN (''Leased'', ''Owned'') AND R.Title = ''North America''', [SuggestionText] = N'List all Facilities in North America that are leased or owned.'
WHERE [ID] = 234;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(N.ID) [No of Proccesses to which TPA is assigned] FROM NodesToThirdPartyAgreementsForEnablerTpa NTP  INNER JOIN Nodes N ON N.ID = NTP.NodesId  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process''', [SuggestionText] = N'How many processes have a TPA assigned to them? '
WHERE [ID] = 235;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Enabler [Enabler with linked processes] FROM( SELECT DISTINCT A.Title Enabler 	 FROM Nodes N LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID INNER JOIN [Assets] A ON A.ID = NA.AssetsId  WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT F.Title Enabler FROM Nodes N LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID INNER JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT S.Title Enabler  FROM Nodes N  LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID INNER JOIN [Systems] S ON S.ID = NS.SystemsId WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT T.Title Enabler	 FROM Nodes N  LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID INNER JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId  WHERE NTT.Title = ''Process''   ) A', [SuggestionText] = N'Show me all enablers that have a linked process.'
WHERE [ID] = 236;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes with Disposition set as TSA ] FROM Nodes N     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID     LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND D.Title = ''TSA''', [SuggestionText] = N'List all processes that have the disposition TSA.'
WHERE [ID] = 237;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(N.ID) AS [No of Processes are Live Without]  FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process'' AND N.ID IN (	SELECT NodeId 				FROM NodesToDispositionsForDispositionNew ND  				LEFT JOIN Dispositions D ON D.ID = DispositionID  				WHERE D.Title = ''Live without''			 				) ', [SuggestionText] = N'How many processes are Live without? ', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 238;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Systems being used by Project Team and Process Group] FROM     Systems s WHERE  ID IN (                   SELECT DISTINCT                       SystemsId                   FROM                       Nodes N                       LEFT JOIN NodesToSystemsForEnablerSystems NSS                        ON N.ID = NSS.NodesId  					  LEFT JOIN  NodesToProjectTeamsForProjectTeam NP 					  ON N.ID = NP.NodesId  					  LEFT JOIN NodeTypes NT ON NT.ID = N.NodeTypeId                    WHERE  NT.Title IN (''ProcessGroup'')               )	', [SuggestionText] = N'List out the systems being used by Project Team and Process Group.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 239;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Process groups are not started on Followup Calls for Current State] FROM Nodes N     LEFT JOIN Nodetypes NT         ON NT.ID = N.NodeTypeId     LEFT JOIN NodeTrackers NTC         ON NTC.NodeID = N.ID     LEFT JOIN NodeTrackerStatuses NTS         ON NTS.NodeTrackerID = NTC.ID     LEFT JOIN TransactionStates T         ON T.ID = N.TransactionStateID WHERE N.NodeOnTracker = 1       AND NT.Title = ''Process Group''       AND T.[Key] = ''CURRENT_STATE''       AND N.ID NOT IN (                           SELECT N.ID ProcessGroupID                           FROM Nodes N                               LEFT JOIN Nodetypes NT                                   ON NT.ID = N.NodeTypeId                               LEFT JOIN NodeTrackers NTC                                   ON NTC.NodeID = N.ID                               LEFT JOIN NodeTrackerStatuses NTS                                   ON NTS.NodeTrackerID = NTC.ID                               LEFT JOIN TransactionStates T                                   ON T.ID = N.TransactionStateID                           WHERE N.NodeOnTracker = 1                                 AND NT.Title = ''Process Group''                                 AND T.[Key] = ''CURRENT_STATE''                                 AND NTS.Title = ''FollowUp Call''                       )', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Which process groups are not started on Followup Calls for Current State?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 240;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes n    WHERE NodeParentID IS NULL      UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ) SELECT O.Title [Client Owner for HR] FROM GetSelectedFunction N 	LEFT JOIN NodesToOwnersForOwnerNew NOS ON NOS.NodeId = N.ID  	LEFT JOIN Owners O ON O.ID = NOS.OwnerId  WHERE N.HierId = 2 AND N.Title = ''HR''', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Who is the Client owner for HR?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 241;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 242;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', [SuggestionText] = N'Show me the count of TSAs by sub function.'
WHERE [ID] = 243;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', [SuggestionText] = N'Give me the list of TSAs by Provider.'
WHERE [ID] = 244;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', [SuggestionText] = N'Give me the list of TSAs by Receiver.'
WHERE [ID] = 245;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', [SuggestionText] = N'Can you provide me list of TSAs by phases?'
WHERE [ID] = 246;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', [SuggestionText] = N'Show me the breakdown of TSAs by duration.'
WHERE [ID] = 247;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', [SuggestionText] = N'How many TSAs does each team have?'
WHERE [ID] = 248;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    TST.Title as [Phase],    COUNT(TC.ID) AS [# TSAs across different phases] FROM    TSAItems TC    LEFT JOIN TSAPhases TST ON TC.PhaseID = TST.ID  Group BY    TST.Title ', [SuggestionText] = N'List the number of TSAs across different phases.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 249;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    T.Title PendingTSAItems  FROM    TSAItems T    JOIN TSAStatuses TS ON T.TSAItemTSAStatusId = TS.ID  WHERE    T.AuthorId = ''{Username}''    AND TS.[key] = ''ACTIVE'' ', [SuggestionText] = N'How many pending TSA items do I have?'
WHERE [ID] = 250;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Title as [Billing Period Name],    DeadlineDate as [Contribution Deadlines]  FROM    TSABillingPeriods tb', [SuggestionText] = N'In Cost Tracking, how is my billing periods setup?'
WHERE [ID] = 251;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT    Title AS [TSA Phases]  FROM TSAPhases tp', [SuggestionText] = N'What are the different TSA phases in my project?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 252;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ProviderLegalEntityId = L.ID where  L.ServiceLocation is not null UNION  SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ReceiverLegalEntityId = L.ID   where  L.ServiceLocation is not null ', [SuggestionText] = N'List the TSA service locations in my project.'
WHERE [ID] = 253;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs],     s.Title   AS [TSA Statuses] FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID     LEFT JOIN         Functions   F             ON TSA.FunctionId = F.ID WHERE     F.Title = ''{FunctionName}''', [SuggestionText] = N'List the TSAs for the Finance fucntion with their status.'
WHERE [ID] = 254;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'DECLARE @UserProfiles int; SELECT    @UserProfiles = ID  FROM    UserProfiles up  WHERE    EMail = ''{Username}'' ; WITH TEMPCTE AS (   SELECT      FunctionId,      SubFunctionId    FROM      TSAReviewers  tr  WHERE      ProviderApproverId = @UserProfiles      OR RecipientApproverId = @UserProfiles )  SELECT    TSA.Title as [List of TSA to be reviewed] FROM    TSAItems TSA    JOIN TEMPCTE ON TSA.FunctionId = TEMPCTE.FunctionId    AND tsa.SubFunctionId = TEMPCTE.SubFunctionId    JOIN TSAPhases TP ON TSA.PhaseId = TP.ID  WHERE    TP.[Key] IN (''ALIGNMENT'', ''APPROVAL''); ', [SuggestionText] = N'List the TSAs that I need to review.'
WHERE [ID] = 255;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT   Title DefaultCurrency FROM  TSACurrencies tc WHERE CurrencyCode =''{CurrencyCode}''', [SuggestionText] = N'What is the default currency setting?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 256;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT   CurrencyExchangeRateToUSD  FROM  TSACurrencies t WHERE CurrencyCode ={CurrencyCode}', [SuggestionText] = N'List the exchange rates we setup for the default currency on my project.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 257;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    DISTINCT F.Title as [Functions To Be Configured] FROM    TSAReviewers TR    LEFT JOIN Functions F on F.ID = TR.FunctionId ', [SuggestionText] = N'In Reviewer Assignments, what functions require to be configured properly?'
WHERE [ID] = 258;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    DISTINCT SF.Title as [SubFunctions To Be Configured] FROM    TSAReviewers TR    LEFT JOIN SubFunctions SF on SF.ID = TR.SubFunctionId ', [SuggestionText] = N'In Reviewer Assignments, what sub-functions need to be configured for my project?'
WHERE [ID] = 259;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT CASE WHEN SUM(DeadlineReminder) > 0 THEN ''Yes, email reminder before the deadline is setup'' ELSE ''No, email reminder before the deadline is setup'' END AS [Send an email reminder before the deadline?] FROM( SELECT     Title,     CAST( DeadlineReminder AS INT) DeadlineReminder FROM     TSABillingPeriods tb WHERE     DeadlineReminder = 1) A', [SuggestionText] = N'In Billing Periods, have we setup email reminder beofre deadline?'
WHERE [ID] = 260;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title        AS [Billing Period Name],     DeadlineDate AS [Contribution Deadlines] FROM     TSABillingPeriods t', [SuggestionText] = N'List the billing periods with their Contribution deadlines.'
WHERE [ID] = 261;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT CASE WHEN SUM(SendEmailImmediately) > 0 THEN ''Yes, notifying data contributors by email '' ELSE ''No, not notifying data contributors by email '' END AS [Notify data contributors by email ?] FROM( SELECT     Title                AS [Billing Period Name],     CAST(SendEmailImmediately AS INT) SendEmailImmediately FROM     TSABillingPeriods tb WHERE     SendEmailImmediately = 1) A', [SuggestionText] = N'Are we not notifying data contributors by email for any billing periods?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 262;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     f.title   AS [Functions],     (t.TSAItemFTECostForServiceDurationUSD + t.MarkupOnFTECostUSD + t.ExternalMaterialCostUSD) AS [TSA Costs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND t.Duration IS NOT NULL', [SuggestionText] = N'What my TSA costs by  function?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 263;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs] FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID WHERE          S.Title<>''{TSAStatus}''', [SuggestionText] = N'How many TSAs left to sign?'
WHERE [ID] = 264;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     COUNT(TSA.ID) AS [# TSAs signed by Function],     F.Title       AS Functions FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID     LEFT JOIN         Functions   F             ON TSA.FunctionId = F.ID WHERE     S.Title = ''{TSAStatus}'' GROUP BY     F.Title', [SuggestionText] = N'List number of signed TSAs by function.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 265;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     [year]                               AS [By Year],     ROUND(SUM(fte_cost_per_month), 2)    AS [TSA FTE Cost for Selected Year],     ROUND(SUM(nonfte_cost_per_month), 2) AS [TSA Non-FTE Cost for Selected Year] FROM     vwTSACostWaterfall wf WHERE      [year] = ''{Year}'' GROUP BY     [year]', [SuggestionText] = N'Break down the total TSA cost for this year by FTE and Non-FTE cost.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 266;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [TSA Stages] FROM     TSAPhases t ORDER BY     Ordinal', [SuggestionText] = N'List out stages that are preconfigured on this instance for TSA lifecycle.'
WHERE [ID] = 267;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Stg.Title AS [Stage Name],        COUNT(TSA.ID) AS [# TSAs Identified] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] = ''IDENTIFICATION'' GROUP BY Stg.Title', [SuggestionText] = N'How many TSA have been identified?'
WHERE [ID] = 268;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [TSAs that have duration for more than 18 months] FROM     TSAItems ts WHERE     Duration > 18', [SuggestionText] = N'List out TSAs that have duration for more than 18 months.'
WHERE [ID] = 269;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs that are ready to be approved] FROM     TSAItems      TSA     LEFT JOIN         TSAPhases Stg             ON TSA.PhaseId = Stg.ID WHERE     Stg.[Key] IN ( ''ALIGNMENT'',''APPROVAL'') ', [SuggestionText] = N'List out TSAs are that are ready to be approved.'
WHERE [ID] = 270;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     f.title  AS [Functions],     SUM((t.TSAItemFTECostForServiceDurationUSD + t.MarkupOnFTECostUSD + t.ExternalMaterialCostUSD) )AS [TSA Costs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND t.Duration IS NOT NULL GROUP BY  f.title', [SuggestionText] = N'What is the total of TSA cost by function?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 271;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Open Risks] FROM TSAItems TSA     LEFT JOIN RisksAndIssues RI         ON TSA.ID = RI.TSAItemId     LEFT JOIN Statuses S         ON RI.ProgressId = S.ID WHERE S.[Key] NOT IN ( ''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD'')', [SuggestionText] = N'List out TSA with Open risks.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 272;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS [Buyer Side Reviewer for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.RecipientApproverID = UP.ID WHERE F.Title =''{FunctionName}''', [SuggestionText] = N'Who is the buy side reviewer for finance TSAs?'
WHERE [ID] = 273;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS [Buyer Side Reviewer for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.ProviderApproverId = UP.ID WHERE F.Title =''{FunctionName}''', [SuggestionText] = N'Who is the sell side reviewer for finance TSAs?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 274;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS [Approver for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.RecipientApproverID = UP.ID WHERE F.Title = ''{FunctionName}''  UNION   SELECT UP.Title AS [Approver for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.ProviderApproverId = UP.ID WHERE F.Title =''{FunctionName}''', [SuggestionText] = N'Who is the approver for finance TSAs?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 275;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Behind Schedule Tasks Linked] FROM TSAItems TSA     LEFT JOIN Workplan WP         ON TSA.ID = WP.TSAItemId     LEFT JOIN Statuses S         ON WP.ProgressId = S.ID WHERE WP.WorkPlanTaskType = ''Task''       AND S.[Key] = ''BEHIND_SCHEDULE''', [SuggestionText] = N'List out TSAs with behind schedule tasks linked.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 276;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT f.title AS [Functions],        COUNT(t.ID) AS [TSAs Count],        (SUM(t.TSAItemFTECostForServiceDurationUSD) + SUM(t.MarkupOnFTECostUSD) + SUM(t.ExternalMaterialCostUSD)) AS [TSAs Costs] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE TSADisp.Title = ''rTSA (reverse TSA)''       AND s.title <> ''Canceled''       AND t.Duration IS NOT NULL GROUP BY f.title', [SuggestionText] = N'Show me the count and cost of reverse TSAs by function.'
WHERE [ID] = 277;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [TSA Items in Alignment phase for IT] FROM TSAItems TSA LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID WHERE Stg.[Key] = ''ALIGNMENT''       AND F.Title = ''{FunctionName}''', [SuggestionText] = N'How many items are in the allignment phase for IT?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 278;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [# TSA items in the repository which have been modified in the last 7 days] FROM TSAItems TSA     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND CAST(TSA.Modified AS DATE)       BETWEEN CAST(GETDATE() - 7 AS DATE) AND CAST(GETDATE() AS DATE) ', [SuggestionText] = N'How many items in the repository have been modified in the last 7 days?'
WHERE [ID] = 279;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [# TSA items in the repository which have been created in the last 5 days] FROM TSAItems TSA     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND CAST(TSA.Created AS DATE)       BETWEEN CAST(GETDATE() - 5 AS DATE) AND CAST(GETDATE() AS DATE) ', [SuggestionText] = N'How many new items s in the repository have been created in the last 5 days?'
WHERE [ID] = 280;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AVG(t.Duration) AS [Average Duration for IT TSAs],        (SUM(t.TSAItemFTECostForServiceDurationUSD) + SUM(t.MarkupOnFTECostUSD) + SUM(t.ExternalMaterialCostUSD)) AS [Cost for IT TSAs] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id WHERE s.title <> ''Canceled''       AND t.Duration IS NOT NULL       AND f.Title = ''IT'' GROUP BY f.title', [SuggestionText] = N'What is the average duration and cost for IT TSAs?'
WHERE [ID] = 281;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Behind Schedule / At Risk Tasks Linked] FROM TSAItems TSA     LEFT JOIN Workplan WP         ON TSA.ID = WP.TSAItemId     LEFT JOIN Statuses S         ON WP.WorkPlanTaskStatusId = S.ID WHERE WP.WorkPlanTaskType = ''Task''       AND S.[Key] IN (''BEHIND_SCHEDULE'',''AT_RISK'')', [SuggestionText] = N'Show me all TSAs that have a linked task that is At Risk or Behind Schedule.'
WHERE [ID] = 282;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSA Items that need review] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] IN ( ''ALIGNMENT'', ''APPROVAL'' )', [SuggestionText] = N'List all TSAs that need review.'
WHERE [ID] = 283;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title as [TSAs that need to be signed along with Item Owner], t.TSAItemPersonInCharge as [Item Owner] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]=''SIGNED''', [SuggestionText] = N'List all TSAs that need to be signed along with the item owner.'
WHERE [ID] = 284;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [TSAs and rTSAs that have a markup greater than 5%]    ,TSADisp.Title AS [TSA / rTSA] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     	LEFT OUTER JOIN 	    TSADay1Dispositions TSADisp  		    ON t.TSADay1DispositionId=TSADisp.ID WHERE         s.title <> ''Canceled'' 	  AND t.TSAItemMarkup >0.05', [SuggestionText] = N'Show me all TSAs and rTSAs that have a markup greater than 5%.'
WHERE [ID] = 285;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs are in a local currency that is not US dollar] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSACurrencies TSACurr         ON t.TSAItemLocalCurrencyId = TSACurr.ID     LEFT OUTER JOIN Currencies Curr         ON TSACurr.CurrencyID = Curr.ID WHERE Curr.Title <> ''USD ($)''       AND s.title <> ''Canceled''', [SuggestionText] = N'How many TSAs are in a local currency that is not US dollar?'
WHERE [ID] = 286;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title as [Inactive TSAs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''ACTIVE'' ', [SuggestionText] = N'List out all Inactive TSAs.'
WHERE [ID] = 287;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT t.Title as [TSAs that have duration less than 2 months] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''CANCELED'' AND t.Duration<2', [SuggestionText] = N'List All TSAs where the duration is less than 2 months.'
WHERE [ID] = 288;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT t.Title as [TSAs that have duration less than 2 months] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''CANCELED'' AND t.Duration>10', [SuggestionText] = N'List all TSAs where the duration is more than 10 months.'
WHERE [ID] = 289;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs due in next 45days] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id WHERE CAST(t.TSAItemEndDate AS DATE)       BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE() + 45 AS DATE)       AND s.title <> ''Canceled''', [SuggestionText] = N'List All TSAs due in next 45days.'
WHERE [ID] = 290;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [TSAs that have a markup above 1%] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.TSAItemMarkup >0.01', [SuggestionText] = N'List all TSAs where the markup is above 1%.'
WHERE [ID] = 291;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     t.Title AS [TSAs where Provider is not tagged] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE     s.title <> ''Canceled''     AND t.ProviderLegalEntityId IS NULL', [SuggestionText] = N'List all TSAs where provider is not tagged.'
WHERE [ID] = 292;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT    t.Title AS [TSAs where Receiver is not tagged] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.ReceiverLegalEntityId IS NULL', [SuggestionText] = N'List all TSAs where receiver is not tagged.'
WHERE [ID] = 293;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [Mixed Price Type TSAs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id   	LEFT OUTER JOIN 	PriceTypes Pric  	        ON t.TSAItemPriceTypeID=Pric.ID WHERE         s.title <> ''Canceled'' 	  AND Pric.Title=''Mixed price''', [SuggestionText] = N'List all mixed price type TSAs.'
WHERE [ID] = 294;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	  SELECT    t.Title AS [List all TSAs which are not getting settled in USD]    FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     	LEFT OUTER JOIN 	    TSACurrencies TSACurr  		    ON t.TSAItemLocalCurrencyId=TSACurr.ID 	LEFT OUTER JOIN Currencies Curr 	        ON TSACurr.CurrencyID=Curr.ID WHERE         Curr.Title<>''USD ($)''  	  AND s.title <> ''Canceled''', [SuggestionText] = N'List all TSAs which are not getting settled n USD.'
WHERE [ID] = 295;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [TSAs where User has provided comments] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.Comments IS NOT NULL', [SuggestionText] = N'List all TSAs where User has provided comments.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 296;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     ISNULL(Stg.Title, ''No Phase Assigned'') AS [Phase],     (TSA.Title)                          AS [ TSAs title] FROM     TSAItems      TSA     LEFT JOIN         TSAPhases Stg             ON TSA.PhaseId = Stg.ID', [SuggestionText] = N'List all TSAs per phase.'
WHERE [ID] = 297;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     t.Title AS [TSAs assigned to function due in next 30 days] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND f.Title=''{FunctionName}'' 	AND CAST(t.TSAItemEndDate AS DATE) BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE()+30 AS DATE)', [SuggestionText] = N'List All TSAs assigned to IT due in next 30 days.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 298;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs assigned to IT due in next 30 days] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id WHERE s.title <> ''Canceled''       AND f.Title = ''Finance''       AND CAST(t.TSAItemEndDate AS DATE)       BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE() + 15 AS DATE)       AND t.TSAItemMarkup <= 0.01       AND t.ReceiverLegalEntityId IS NULL', [SuggestionText] = N'List All TSAs assigned to finance due in next 15 days where markup is below 1% and has no receiver tagged.'
WHERE [ID] = 299;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs Items which are tagged as rTSA for Day 1 disposition] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE s.title <> ''Canceled''       AND TSADisp.Title = ''rTSA (reverse TSA)''', [SuggestionText] = N'List all Items which are tagged as rTSA for Day 1 disposition.'
WHERE [ID] = 300;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSA Items where total number of FTEs providing service is greater than 5] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE s.title <> ''Canceled''       AND t.TSAItemNoOfFTEProvidingService > 5', [SuggestionText] = N'List all Items where total number of FTEs providing service is greater than 5.'
WHERE [ID] = 301;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSA items which have been in Detailing phase for more than 15 days] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] = ''DETAILING''       AND CAST(TSA.Modified AS DATE) < CAST(GETDATE() - 15 AS DATE)', [SuggestionText] = N'List all items which have been in Detailing phase for more than 15 days.'
WHERE [ID] = 302;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [Finance related TSA items with relevant SLA details],        ISNULL(TSA.TSAItemSLAName, '' '') AS [SLA Details] FROM TSAItems TSA     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND F.Title = ''Finance''', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'List all finance related items with relevant SLA details.'
WHERE [ID] = 303;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSA items where external cost is greater than FTE cost for entire duration] FROM TSAItems TSA     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND (TSA.TSAItemExternalMaterialCost > TSA.TSAItemFTECostForServiceDuration)', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'List all items where external cost is greater than FTE cost for entire duration.'
WHERE [ID] = 304;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] = ''PROJECT_MANAGEMENT'' order by TT.Title', [SuggestionText] = N'What are the project teams that make up the governance structure for this engagement?'
WHERE [ID] = 305;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount  FROM WorkPlan wp  LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId  LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE wp.WorkPlanTaskType = ''Milestone'' AND TT.[Key] = ''PROJECT_MANAGEMENT'' GROUP BY pt.Title', [SuggestionText] = N'How many milestones does each team have?'
WHERE [ID] = 306;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many interdependencies does each team have?'
WHERE [ID] = 307;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(1) AS RiskCount  FROM RisksAndIssues RI  left join ProjectTeams pt on pt.ID = ri.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE IssueRiskCategory = ''Risk'' AND TT.[Key] = ''PROJECT_MANAGEMENT'' GROUP BY pt.Title', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many risks does each team have?'
WHERE [ID] = 308;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT _TemplateFile FROM WorkPlan', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 309;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 310;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 311;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 312;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 313;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 314;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE ValueCaptureType = ''Cost Saving'' or  ValueCaptureType = ''Cost Reduction''', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 315;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE ValueCaptureType = ''Revenue Growth''', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 316;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE ValueCaptureType = ''One Time Cost''', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 317;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE (ValueCaptureType = ''Cost Reduction'' OR  ValueCaptureType = ''Cost Saving'') AND ProjectTeam = ''IT''', [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 318;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE ValueCaptureType = ''One Time Cost'' AND ProjectTeam = ''Supply Chain & Operations''', [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 319;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 320;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 321;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT _TemplateFile FROM Nodes', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 322;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 323;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 324;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 325;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM TSAItems', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 326;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title, ServiceInScopeDescription, [Function], SubFunction FROM TSAItems', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 327;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 328;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT _TemplateFile FROM WorkPlan', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 329;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 330;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 331;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 332;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 333;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 334;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 335;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 336;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 337;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 338;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 339;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 340;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 341;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best strategies for improving a company in the {Sector} sector?'
WHERE [ID] = 342;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are recent examples of improvements being made in the {Sector} sector?'
WHERE [ID] = 343;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 344;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 345;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 346;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What is a normative operating model for the {Sector} sector?'
WHERE [ID] = 347;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are key considerations when defining an operating model for a {Sector} sector company?'
WHERE [ID] = 348;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 349;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the corporate functions typically involved in the {Sector} sector?'
WHERE [ID] = 350;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 351;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 352;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Provides templates of TSA.'
WHERE [ID] = 353;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What should be the typical duration for TSA?'
WHERE [ID] = 354;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Things I should keep in mind for longer duration TSAs?'
WHERE [ID] = 355;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 356;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 357;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 358;
SELECT @@ROWCOUNT;

GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] ON;
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (359, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the best practices to run weekly status meetings?', NULL, N'System', CAST(1 AS bit)),
(360, NULL, N'PROJECT_LEVEL', NULL, N'System', N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System', CAST(1 AS bit));
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240716120355_AddSuggestionQuery', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title, UP.Title as UserName AS WorkPlanItem FROM Workplan W LEFT JOIN UserProfiles UP ON W.TaskOwnerID = UP.ID LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE UP. Title = ( SELECT TOP 1 Title  FROM UserProfiles WHERE FREETEXT(Title, ''{Username}'') AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240801140650_ReplaceUsernameTag', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

ALTER TABLE [AssistantMessageFeedbacks] ADD [InstanceId] nvarchar(max) NULL;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240805104944_AddInstanceIDToFeedbackTable', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

ALTER TABLE [AssistantSuggestions] ADD [IsIncluded] bit NULL;
GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 18;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 22;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 23;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 24;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 25;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 29;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 30;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 31;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 33;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 34;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 35;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 37;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 44;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 45;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 51;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 52;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 64;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 70;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 72;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 75;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 76;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 77;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 78;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 79;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 80;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 143;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 145;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 146;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 147;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 148;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 149;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 150;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 151;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 152;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 153;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 154;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 155;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 156;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 157;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 158;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 159;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 160;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 161;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 162;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 163;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 164;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 165;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 166;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 167;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 168;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 169;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 170;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 171;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 172;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 173;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 174;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 175;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 176;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 177;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 178;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 179;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 180;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 181;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 182;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 183;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 184;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 185;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 186;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 187;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 188;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 189;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 190;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 191;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 192;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 193;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 194;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 195;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 196;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 197;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 198;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 199;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 200;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 201;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 202;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 203;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 204;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 205;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 206;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 207;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 208;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 209;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 210;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 211;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 212;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 213;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 214;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 215;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 216;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 217;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 218;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 219;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 220;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 221;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 222;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 223;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 224;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 225;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 226;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 227;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 228;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 229;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 230;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 231;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 232;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 233;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 234;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 235;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 236;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 237;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 238;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 239;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 240;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 241;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 242;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 243;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 244;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 245;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 246;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 247;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 248;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 249;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 250;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 251;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 252;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 253;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 254;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 255;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 256;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 257;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 258;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 259;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 260;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 261;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 262;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 263;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 264;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 265;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 266;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 267;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 268;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 269;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 270;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 271;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 272;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 273;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 274;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 275;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 276;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 277;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 278;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 279;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 280;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 281;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 282;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 283;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 284;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 285;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 286;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 287;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 288;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 289;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 290;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 291;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 292;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 293;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 294;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 295;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 296;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 297;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(0 AS bit)
WHERE [ID] = 298;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 299;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 300;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 301;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 302;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 303;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 304;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 305;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 306;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 307;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 308;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 309;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 310;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 311;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 312;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 313;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 314;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 315;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 316;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 317;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 318;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 319;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 320;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 321;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 322;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 323;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 324;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 325;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 326;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 327;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 328;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 329;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 330;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 331;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 332;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 333;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 334;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 335;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 336;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 337;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 338;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 339;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 340;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 341;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 342;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 343;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 344;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 345;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 346;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 347;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 348;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 349;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 350;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 351;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 352;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 353;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 354;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 355;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 356;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 357;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 358;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 359;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [IsIncluded] = CAST(1 AS bit)
WHERE [ID] = 360;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240807112313_AddIsIncludedInSuggestion', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT wp.Title Workplan, pt.Title ProjectTeam, s.Title [Status] ,Wp.TaskDueDate, wp.StartDate, wp.IsCritical, UP.Title TaskOwner from WorkPlan wp   LEFT JOIN Statuses s on wp.WorkPlanTaskStatusId = s.ID  left join ProjectTeams pt on pt.ID = wp.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId LEFT JOIN UserProfiles UP ON wp.TaskOwnerId = UP.ID where s.[Key] = ''BEHIND_SCHEDULE''  AND wp.WorkPlanTaskType = ''Milestone'' and TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title, RI.ItemDescription, RI.ItemDueDate, RI.RiskImpact, RI.RiskMitigation, RI.RiskProbability, PT.Title ProjectTeam, UP.Title ItemOwner  from RisksAndIssues RI    LEFT JOIN Statuses s on RI.ItemStatusId = s.ID    LEFT JOIN ProjectTeams pt on pt.ID = RI.ProjectTeamId  LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId  LEFT JOIN UserProfiles UP ON RI.ItemOwnerId = UP.ID where s.[Key] = ''BEHIND_SCHEDULE''  AND RI.IssueRiskCategory = ''Risk'' and TT.[Key] = ''PROJECT_MANAGEMENT'' '
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.Title,  R.Title ReceiverTeam, P.Title ProviderTeam, UR.Title ReceiverOwner, UP.Title ProviderOwner, I.ItemDueDate  from Interdependencies I   LEFT JOIN InterdependencyStatuses s on I.InterdependencyStatusId = s.ID   LEFT JOIN ProjectTeams R ON I.ReceiverProjectTeamID = R.ID LEFT JOIN ProjectTeams P ON I.ProviderProjectTeamId = P.ID LEFT JOIN UserProfiles UR ON I.ReceiverOwnerId = UR.ID LEFT JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID where s.[Key] = ''BEHIND_SCHEDULE'''
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT wp.Title Workplan, pt.Title ProjectTeam, s.Title [Status] ,Wp.TaskDueDate, wp.StartDate, wp.IsCritical, UP.Title TaskOwner  from WorkPlan wp    LEFT JOIN Statuses s on wp.WorkPlanTaskStatusId = s.ID   left join ProjectTeams pt on pt.ID = wp.ProjectTeamId  LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId  LEFT JOIN UserProfiles UP ON wp.TaskOwnerId = UP.ID WHERE UP. Title = ( SELECT TOP 1 Title  FROM UserProfiles WHERE FREETEXT(Title, {''Username''}) AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1      CAST(RP.PeriodEndDate AS DATE) AS WeeklyStatusDueDate,     RP.Title AS PeriodTitle,     RP.PeriodStartDate AS StartDate,     RP.PeriodEndDate AS End Date,     RP.Created AS CreatedDate,     RP.Modified AS LastModifiedDate FROM      ReportingPeriods RP  WHERE      CAST(GETDATE() AS DATE) BETWEEN CAST(RP.PeriodStartDate AS DATE) AND CAST(RP.PeriodEndDate AS DATE)  ORDER BY      RP.Modified DESC'
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title as ProjectTeam, UP.Title AS FunctionalOwner FROM ProjectTeams PT JOIN Userprofiles UP ON PT.ItemOwnerID = UP.ID WHERE PT.Title = {ProjectTeam}'
WHERE [ID] = 18;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      WP.Title,  WP.TaskDueDate,  WP.ActualStartDate,  WP.WorkPlanTaskType,  WP.TaskDescription,  WP.[Priority],  WP.IsCritical,  UP.Title TaskOwner,  PT.Title AS ProjectTeam,  S.Title AS [Status] FROM     Workplan WP JOIN      ProjectTeams PT ON WP.ProjectTeamId = PT.ID JOIN      Statuses S ON WP.WorkPlanTaskStatusId = S.ID JOIN      TeamTypes TT ON PT.TeamTypeID = TT.ID LEFT JOIN   UserProfiles UP ON wp.TaskOwnerId = UP.ID  WHERE      S.[Key] = ''BEHIND_SCHEDULE''     AND TT.[Key] = ''PROJECT_MANAGEMENT''     AND PT.Title = {ProjectTeam}'
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      W.Title AS WorkPlanItem,  W.TaskDueDate,  W.ActualStartDate,  W.WorkPlanTaskType,  W.TaskDescription,  W.[Priority],  W.IsCritical,  UP.Title TaskOwner,  PT.Title AS ProjectTeam,  S.Title AS [Status] FROM      Workplan W LEFT JOIN      ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN      TeamTypes TT ON PT.TeamTypeId = TT.ID LEFT JOIN   UserProfiles UP ON W.TaskOwnerId = UP.ID LEFT JOIN      Statuses S ON W.WorkPlanTaskStatusId = S.ID WHERE      TT.[Key] = ''PROJECT_MANAGEMENT''     AND DATEPART(ww, W.TaskDueDate) = DATEPART(ww, GETDATE()) + 1'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SF.Title , F.Title AS [Function], SF.[Key] FROM  Subfunctions SF  JOIN  Functions F ON SF.FunctionID = F.ID  WHERE  F.Title = {ProjectTeam}'
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      WS.Title, PT.Title AS ProjectTeams, RP.PeriodStartDate, RP.PeriodEndDate, RP.Title ReportingPeriod, PSE.ID AS ProjectStatusEntriesID FROM      ProjectStatusEntries PSE JOIN      ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN      WeeklyStatusStatuses WS ON PSE.WeeklyStatusStatusId = WS.ID JOIN      ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE      PT.Title = {ProjectTeam}     AND  RP.ID = (         SELECT RPID.ID - 1         FROM ReportingPeriods RPID         WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate     )'
WHERE [ID] = 22;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      AN.Title,      AN.AccomplishmentNextstepCategory, WS.Title, PT.Title AS ProjectTeams, RP.PeriodStartDate, RP.PeriodEndDate, RP.Title ReportingPeriod, PSE.ID AS ProjectStatusEntriesID FROM      ProjectStatusEntries PSE JOIN      ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN      AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN      ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID JOIN      WeeklyStatusStatuses WS ON PSE.WeeklyStatusStatusId = WS.ID   WHERE      PT.Title = {ProjectTeam}     AND RP.ID = (         SELECT RPID.ID - 1         FROM ReportingPeriods RPID         WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate     ) ORDER BY      AN.AccomplishmentNextstepCategory'
WHERE [ID] = 23;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.Title, R.Title ReceiverTeam, P.Title ProviderTeam, UR.Title ReceiverOwner, UP.Title ProviderOwner, I.ItemDueDate FROM Interdependencies I  LEFT JOIN InterdependencyStatuses S on I.InterdependencyStatusId = S.ID   LEFT JOIN ProjectTeams R ON I.ReceiverProjectTeamID = R.ID LEFT JOIN ProjectTeams P ON I.ProviderProjectTeamId = P.ID LEFT JOIN UserProfiles UR ON I.ReceiverOwnerId = UR.ID LEFT JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID WHERE CAST(I.ItemDueDate AS DATE) < CAST(GETDATE() AS DATE)'
WHERE [ID] = 24;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      RI.Title AS RisksWithNoMitigation,  RI.IsCritical,  RI.IssueRiskCategory,  RI.ItemDescription,  RI.ItemDueDate,  RI.ItemPriority,  RI.RiskImpact,  RI.RiskProbability,  TT.TITLE AS TeamType,  UP.Title TaskOwner,  PT.Title AS ProjectTeam,  S.Title AS [Status]  FROM      RisksandIssues RI LEFT JOIN      ProjectTeams PT ON RI.ProjectTeamId = PT.ID LEFT JOIN      TeamTypes TT ON PT.TeamTypeId = TT.ID LEFT JOIN  Statuses S ON S.ID = RI.ItemStatusId LEFT JOIN  UserProfiles UP ON UP.ID = RI.ItemOwnerId WHERE      RI.RiskMitigation IS NULL     AND RI.IssueRiskCategory = ''Risk''     AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 26;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      RI.Title AS RisksWithNoOwner, RI.IsCritical, RI.IssueRiskCategory, RI.ItemDescription, RI.ItemDueDate, RI.ItemPriority, RI.RiskImpact, RI.RiskProbability, TT.TITLE AS TeamType, UP.Title TaskOwner, PT.Title AS ProjectTeam, S.Title AS [Status], RI.RiskMitigation FROM      RisksandIssues RI LEFT JOIN      ProjectTeams PT     ON RI.ProjectTeamId = PT.ID LEFT JOIN      TeamTypes TT     ON PT.TeamTypeId = TT.ID LEFT JOIN Statuses S ON S.ID = RI.ItemStatusId LEFT JOIN UserProfiles UP ON UP.ID = RI.ItemOwnerId WHERE      RI.ItemOwnerID IS NULL     AND RI.IssueRiskCategory = ''Risk''     AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      W.Title AS Milestones, W.TaskDueDate, W.ActualStartDate, W.WorkPlanTaskType, W.TaskDescription, W.[Priority], W.IsCritical, UP.Title TaskOwner, PT.Title AS ProjectTeam, S.Title AS [Status] FROM      Workplan W LEFT JOIN      ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN      TeamTypes TT ON PT.TeamTypeId = TT.ID LEFT JOIN  UserProfiles UP ON W.TaskOwnerId = UP.ID LEFT JOIN      Statuses S ON W.WorkPlanTaskStatusId = S.ID WHERE      W.WorkplanTaskType = ''Milestone''     AND CAST(W.StartDate AS DATE) > CAST(GETDATE() AS DATE)     AND TT.[Key] = ''PROJECT_MANAGEMENT''     AND EXISTS (         SELECT 1          FROM WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues WRIARI          WHERE WRIARI.WorkPlanId = W.ID     )'
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PT.Title AS Team , UP.Title AS [Owner], TT.Title AS TeamType, PT.[Key] FROM  ProjectTeams PT  JOIN  TeamTypes TT ON PT.TeamTypeID = TT.ID  LEFT JOIN  UserProfiles UP ON PT.ItemOwnerId = UP.ID WHERE  TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 29;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  Child.Title AS Teams, UP.Title AS [Owner], TT.Title AS TeamType, Child.[Key] FROM  ProjectTeams Parent  JOIN  ProjectTeams Child ON Child.ParentProjectTeamId = Parent.ID  JOIN  TeamTypes TT ON Child.TeamTypeID = TT.ID  LEFT JOIN  UserProfiles UP ON Child.ItemOwnerId = UP.ID WHERE  Parent.Title = {ProjectTeam}'
WHERE [ID] = 30;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  Parent.Title AS ParentTeam, UP.Title AS [Owner], TT.Title AS TeamType, Parent.[Key] FROM  ProjectTeams Parent  JOIN  ProjectTeams Child ON Child.ParentProjectTeamId = Parent.ID  JOIN  TeamTypes TT ON Parent.TeamTypeId = TT.ID  LEFT JOIN  UserProfiles UP ON Parent.ItemOwnerId = UP.ID WHERE  TT.[Key] = ''PROJECT_MANAGEMENT''  AND Child.Title = {ProjectTeam}'
WHERE [ID] = 31;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      AN.Title AS Accomplishment, AN.AccomplishmentNextstepCategory, WS.Title, PT.Title AS ProjectTeams, RP.PeriodStartDate, RP.PeriodEndDate, RP.Title ReportingPeriod, PSE.ID AS ProjectStatusEntriesID FROM      ProjectStatusEntries PSE JOIN      ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN      UserProfiles UP ON PT.ItemOwnerID = UP.ID JOIN      AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN      ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID JOIN      WeeklyStatusStatuses WS ON PSE.WeeklyStatusStatusId = WS.ID WHERE      UP.EMail = ''{Username}''     AND RP.ID = (         SELECT RPID.ID - 1         FROM ReportingPeriods RPID         WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate     )     AND AN.AccomplishmentNextstepCategory = ''Accomplishment'''
WHERE [ID] = 32;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      AN.Title AS NextSteps,     AN.AccomplishmentNextstepCategory, WS.Title, PT.Title AS ProjectTeams, RP.PeriodStartDate, RP.PeriodEndDate, RP.Title ReportingPeriod, PSE.ID AS ProjectStatusEntriesID FROM      ProjectStatusEntries PSE JOIN      ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN      AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN      ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID JOIN      WeeklyStatusStatuses WS ON PSE.WeeklyStatusStatusId = WS.ID WHERE      PT.Title = {ProjectTeam}     AND RP.ID = (         SELECT RPID.ID         FROM ReportingPeriods RPID         WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate     )     AND AN.AccomplishmentNextstepCategory = ''Next Step'''
WHERE [ID] = 33;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.Title, R.Title ReceiverTeam, P.Title ProviderTeam, UR.Title ReceiverOwner, UP.Title ProviderOwner, I.ItemDueDate FROM Interdependencies I LEFT JOIN InterdependencyStatuses S on I.InterdependencyStatusId = S.ID   LEFT JOIN ProjectTeams R ON I.ReceiverProjectTeamID = R.ID LEFT JOIN ProjectTeams P ON I.ProviderProjectTeamId = P.ID LEFT JOIN UserProfiles UR ON I.ReceiverOwnerId = UR.ID LEFT JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID WHERE UP.EMail = ''{Username}'''
WHERE [ID] = 34;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      WP.UniqueItemIdentifier,     WP.Title, WP.TaskDueDate, WP.ActualStartDate, WP.WorkPlanTaskType, WP.TaskDescription, WP.[Priority], WP.IsCritical, UP.Title TaskOwner, PT.Title AS ProjectTeam, S.Title AS [Status] FROM      WORKPLAN WP JOIN      ProjectTeams PT ON WP.ProjectTeamId = PT.ID JOIN      Statuses S ON WP.WorkPlanTaskStatusId = S.ID JOIN      TeamTypes TT ON PT.TeamTypeID = TT.ID LEFT JOIN  UserProfiles UP ON WP.TaskOwnerId = UP.ID  WHERE      TaskOwnerId IS NULL     AND WorkPlanTaskType = ''Task''     AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 36;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      W.Title,     ''Workplan'' AS [Category],     UP.Title AS UserName, PT.Title AS ProjectTeam, S.Title AS [Status] FROM      Workplan W LEFT JOIN      UserProfiles UP ON W.TaskOwnerID = UP.ID JOIN      ProjectTeams PT ON W.ProjectTeamId = PT.ID JOIN      Statuses S ON W.WorkPlanTaskStatusId = S.ID  WHERE      UP.Title = (SELECT TOP 1 Title FROM UserProfiles WHERE FREETEXT(Title, ''{Username}''))  UNION ALL  SELECT      RI.Title,     IssueRiskCategory AS [Category],     UP.Title AS UserName, PT.Title AS ProjectTeam, S.Title AS [Status] FROM      RisksAndIssues RI LEFT JOIN      UserProfiles UP ON RI.ItemOwnerId = UP.ID JOIN      ProjectTeams PT ON RI.ProjectTeamId = PT.ID JOIN      Statuses S ON RI.ItemStatusId = S.ID WHERE      UP.Title = (SELECT TOP 1 Title FROM UserProfiles WHERE FREETEXT(Title, ''{Username}''))  UNION ALL  SELECT      A.Title,     ''Action'' AS [Category],     UP.Title AS UserName, PT.Title AS ProjectTeam, S.Title AS [Status] FROM      Actions A LEFT JOIN      UserProfiles UP ON A.ItemOwnerId = UP.ID JOIN      ProjectTeams PT ON A.ProjectTeamId = PT.ID JOIN      Statuses S ON A.ItemStatusId = S.ID WHERE      UP.Title = (SELECT TOP 1 Title FROM UserProfiles WHERE FREETEXT(Title, ''{Username}''))  UNION ALL  SELECT      D.Title,     ''Decision'' AS [Category],     UP.Title AS UserName, PT.Title AS ProjectTeam, S.Title AS [Status] FROM      Decisions D LEFT JOIN      UserProfiles UP ON D.ItemOwnerId = UP.ID JOIN      ProjectTeams PT ON D.ProjectTeamId = PT.ID JOIN      Statuses S ON D.ItemStatusId = S.ID WHERE      UP.Title = (SELECT TOP 1 Title FROM UserProfiles WHERE FREETEXT(Title, ''{Username}''))  UNION ALL  SELECT      I.Title,     ''Interdependecy as Provider'' AS [Category],     UP.Title AS UserName, PT.Title AS ProjectTeam, S.Title AS [Status] FROM      Interdependencies I LEFT JOIN      UserProfiles UP ON I.ProviderOwnerId = UP.ID JOIN      ProjectTeams PT ON I.ProviderProjectTeamId = PT.ID JOIN      Statuses S ON I.InterdependencyStatusId = S.ID WHERE      UP.Title = (SELECT TOP 1 Title FROM UserProfiles WHERE FREETEXT(Title, ''{Username}''))  UNION ALL  SELECT      I.Title,     ''Interdependecy as Receiver'' AS [Category],     UP.Title AS UserName, PT.Title AS ProjectTeam, S.Title AS [Status] FROM      Interdependencies I LEFT JOIN      UserProfiles UP ON I.ReceiverOwnerId = UP.ID JOIN      ProjectTeams PT ON I.ReceiverProjectTeamId = PT.ID JOIN      Statuses S ON I.InterdependencyStatusId = S.ID WHERE      UP.Title = (SELECT TOP 1 Title FROM UserProfiles WHERE FREETEXT(Title, ''{Username}''))'
WHERE [ID] = 38;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team] , WS.Title WeeklyStatus,  PSE.ExecutiveSummary FROM ProjectStatusEntries PSE   LEFT JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID   LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId  LEFT JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID   LEFT JOIN WeeklyStatusStatuses WS ON WS.ID = PSE.WeeklyStatusStatusId   WHERE  RP.ID = (SELECT RPID.ID       FROM ReportingPeriods RPID      WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate)      AND WS.[KEY] IN (''AT_RISK'',''BEHIND_SCHEDULE'')      AND TT.[Key]=''PROJECT_MANAGEMENT'''
WHERE [ID] = 39;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.UniqueItemIdentifier, RI.Title,    ''Risks'' as Category , PT.Title ProjectTeam, U.Title ItemOwner FROM    RisksAndIssues RI    LEFT JOIN Statuses S ON RI.ItemStatusId = S.ID   LEFT JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID  LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  LEFT JOIN UserProfiles U ON RI.ItemOwnerId = U.ID WHERE    S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD'' )      AND RI.IssueRiskCategory = ''Risk''     AND TT.[Key] = ''PROJECT_MANAGEMENT''   UNION   SELECT     RI.UniqueItemIdentifier,     RI.Title,    ''Issues'' as Category  , PT.Title ProjectTeam, U.Title ItemOwner FROM    RisksAndIssues RI   LEFT JOIN Statuses S ON RI.ItemStatusId = S.ID  LEFT JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  LEFT JOIN UserProfiles U ON RI.ItemOwnerId = U.ID WHERE    S.[KEY] NOT IN (   ''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD''   )     AND RI.IssueRiskCategory = ''Issue''     AND TT.[Key] = ''PROJECT_MANAGEMENT''  UNION   SELECT     A.UniqueItemIdentifier,     A.Title,    ''Actions'' as Category , PT.Title ProjectTeam, U.Title ItemOwner FROM    Actions A    JOIN Statuses S ON A.ItemStatusId = S.ID    JOIN ProjectTeams PT ON A.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  LEFT JOIN UserProfiles U ON A.ItemOwnerId = U.ID WHERE    S.[KEY] NOT IN (  ''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD'' )     AND TT.[Key] = ''PROJECT_MANAGEMENT''  UNION   SELECT     D.UniqueItemIdentifier,     D.Title,    ''Decisions'' as Category  ,PT.Title ProjectTeam, U.Title ItemOwner FROM    Decisions D    LEFT JOIN Statuses S ON D.ItemStatusId = S.ID      JOIN ProjectTeams PT ON D.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  LEFT JOIN UserProfiles U ON D.ItemOwnerId = U.ID WHERE    S.[KEY] NOT IN (   ''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD''  )    AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 46;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title as OpenInterdependencies, S.Title [Status], R.Title ReceiverTeam, P.Title ProviderTeam, UR.Title ReceiverOwner, UP.Title ProviderOwner, I.ItemDueDate FROM Interdependencies I  LEFT JOIN InterdependencyStatuses S on I.InterdependencyStatusId = S.ID LEFT JOIN ProjectTeams R ON I.ReceiverProjectTeamID = R.ID LEFT JOIN ProjectTeams P ON I.ProviderProjectTeamId = P.ID LEFT JOIN UserProfiles UR ON I.ReceiverOwnerId = UR.ID LEFT JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID  WHERE S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD'')'
WHERE [ID] = 47;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.UniqueItemIdentifier, W.Title CriticalTasks, PT.Title WorkStream, S.Title [Status] , W.TaskDueDate, W.StartDate, W.IsCritical, UP.Title TaskOwner  FROM WorkPlan W   LEFT JOIN Statuses S on wp.WorkPlanTaskStatusId = S.ID   LEFT JOIN ProjectTeams PT on PT.ID = W.WorkstreamId LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId  LEFT JOIN UserProfiles UP ON W.TaskOwnerId = UP.ID WHERE W.IsCritical = 1  AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title as ITIntProvider, S.Title [Status], RT.Title ReceiverTeam, PT.Title ProviderTeam, UR.Title ReceiverOwner, UP.Title ProviderOwner, I.ItemDueDate FROM Interdependencies I  LEFT JOIN InterdependencyStatuses S on I.InterdependencyStatusId = S.ID LEFT JOIN ProjectTeams RT ON I.ReceiverProjectTeamID = RT.ID LEFT JOIN ProjectTeams PT ON I.ProviderProjectTeamId = PT.ID LEFT JOIN UserProfiles UR ON I.ReceiverOwnerId = UR.ID LEFT JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID  WHERE PT.Title = {ProjectTeam}'
WHERE [ID] = 49;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title as as ITIntReceiver, S.Title [Status], RT.Title ReceiverTeam, PT.Title ProviderTeam, UR.Title ReceiverOwner, UP.Title ProviderOwner, I.ItemDueDate FROM Interdependencies I  LEFT JOIN InterdependencyStatuses S on I.InterdependencyStatusId = S.ID LEFT JOIN ProjectTeams RT ON I.ReceiverProjectTeamID = RT.ID LEFT JOIN ProjectTeams PT ON I.ProviderProjectTeamId = PT.ID LEFT JOIN UserProfiles UR ON I.ReceiverOwnerId = UR.ID LEFT JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID  WHERE RT.Title = {ProjectTeam}'
WHERE [ID] = 50;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.UniqueItemIdentifier, W.Title TasksWithoutOwner, PT.Title WorkStream, S.Title [Status] , W.TaskDueDate, W.StartDate, W.IsCritical FROM WorkPlan W   LEFT JOIN Statuses S on wp.WorkPlanTaskStatusId = S.ID   LEFT JOIN ProjectTeams PT on PT.ID = W.WorkstreamId LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId  WHERE W.TaskOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  RI.UniqueItemIdentifier,RI.Title ItemsWithoutOwner, IssueRiskCategory AS Category , PT.Title ProjectTeam, ItemPriority FROM  RisksAndIssues RI  LEFT JOIN ProjectTeams PT ON RI.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  WHERE  RI.ItemOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT''   UNION    SELECT  A.UniqueItemIdentifier,A.Title  ItemsWithoutOwner, ''Actions'' AS Category , PT.Title ProjectTeam, ItemPriority FROM  Actions A LEFT JOIN ProjectTeams PT ON A.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  A.ItemOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT''    UNION    SELECT  D.UniqueItemIdentifier,D.Title  ItemsWithoutOwner, ''Decisions'' AS Category , PT.Title ProjectTeam, ItemPriority FROM  Decisions D LEFT JOIN ProjectTeams PT ON D.ProjectTeamId = PT.ID LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  D.ItemOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 54;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT I.UniqueItemIdentifier, I.Title AS InterdependencyWithoutTasks , P.Title ProviderTeam, R.Title ReceiverTeam FROM Interdependencies I  LEFT JOIN WorkPlansToInterdependenciesForProviderTasks WTP ON WTP.InterdependencyId = I.ID LEFT JOIN ProjectTeams P ON I.ProviderProjectTeamID = P.ID LEFT JOIN ProjectTeams R ON I.ReceiverProjectTeamId = R.ID WHERE WTP.ID IS NULL    UNION    SELECT I.UniqueItemIdentifier, I.Title AS InterdependencyWithoutTasks , P.Title ProviderTeam, R.Title ReceiverTeam FROM Interdependencies I  LEFT JOIN WorkPlansToInterdependenciesForReceiverTasks WTR ON WTR.InterdependencyId = I.ID  LEFT JOIN ProjectTeams P ON I.ProviderProjectTeamID = P.ID LEFT JOIN ProjectTeams R ON I.ReceiverProjectTeamId = R.ID WHERE WTR.ID IS NULL;'
WHERE [ID] = 55;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT UP.Title AS UserName, UP.Email   FROM WorkPlan W  JOIN UserProfiles UP ON UP.ID = W.TaskOwnerId  JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId  JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  WHERE S.[Key] IN (''AT_RISK'', ''BEHIND_SCHEDULE'')      AND UP.Title IS NOT NULL AND TT.[Key] =  ''PROJECT_MANAGEMENT'''
WHERE [ID] = 56;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title RisksAndIssues, IssueRiskCategory , PT.Title ProjectTeam, IsCritical, ItemPriority, ItemDescription, RiskMitigation, RiskImpact   FROM RisksAndIssues RI  LEFT JOIN Statuses S ON S.ID = RI.ItemStatusId   LEFT JOIN ProjectTeams PT ON RI.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId  WHERE IsCritical IN (1) AND S.[Key] NOT IN (''CLOSED'') AND TT.[Key]=''PROJECT_MANAGEMENT'''
WHERE [ID] = 57;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      W.Title AS [List of Critical Milestones due in next 15 days with no owners Assigned yet],      PT.Title ProjectTeam,      W.TaskDueDate DueDate,      W.StartDate StartDate,      UP.Title AS TaskOwner,      W.IsCritical IsCritical FROM      WorkPlan W JOIN      ProjectTeams PT ON PT.ID = W.ProjectTeamId JOIN      TeamTypes TT ON PT.TeamTypeId = TT.ID LEFT JOIN      UserProfiles UP ON W.TaskOwnerId = UP.ID WHERE      W.WorkPlanTaskType = ''Milestone''     AND CAST(W.TaskDueDate AS DATE) BETWEEN CAST(GETDATE() AS DATE) AND DATEADD(day, 15, CAST(GETDATE() AS DATE))     AND W.IsCritical = 1     AND W.TaskOwnerId IS NULL     AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 59;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title as [List down all tasks associated with interdependencies] , W.StartDate, W.TaskDueDate, PT.Title ProjectTeam, S.Title TaskStatus, W.IsCritical from Workplan W  LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID where W.ID in  ( SELECT WTIR.WorkPlanId  FROM WorkPlansToInterdependenciesForReceiverTasks WTIR  UNION  select WTIP.WorkPlanId  FROM WorkPlansToInterdependenciesForProviderTasks WTIP) AND W.WorkPlanTaskType=''Task'''
WHERE [ID] = 60;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title as WorkplanAssociatedWithInterdependencies , W.StartDate, W.TaskDueDate, PT.Title ProjectTeam, S.Title TaskStatus, W.IsCritical from Workplan W  INNER JOIN WorkPlansToInterdependenciesForReceiverTasks WPRT ON W.id = WPRT.WorkPlanId  LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID LEFT JOIN Interdependencies IR ON WPRT.InterdependencyId = IR.ID  WHERE CAST(W.TaskDueDate AS DATE) < CAST(IR.ItemDueDate AS DATE) AND W.WorkPlanTaskType=''Task''   UNION   SELECT W.Title  , W.StartDate, W.TaskDueDate, PT.Title ProjectTeam, S.Title TaskStatus, W.IsCritical FROM WorkPlan W  INNER JOIN WorkPlansToInterdependenciesForProviderTasks WPPT ON W.id = WPPT.WorkPlanId  LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID LEFT JOIN Interdependencies IR ON WPPT.InterdependencyId = IR.ID  WHERE CAST(W.TaskDueDate AS DATE) < CAST(IR.ItemDueDate AS DATE) AND W.WorkPlanTaskType=''Task'''
WHERE [ID] = 61;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  W.UniqueItemIdentifier,     W.Title WorkPlanItem, W.TaskDueDate, W.ActualStartDate, W.WorkPlanTaskType, W.TaskDescription, W.[Priority], W.IsCritical, UP.Title TaskOwner, PT.Title AS ProjectTeam, S.Title AS [Status] FROM  Workplan W  LEFT JOIN  ProjectTeams PT ON W.ProjectTeamId = PT.ID  LEFT JOIN  TeamTypes TT ON PT.TeamTypeId = TT.ID  JOIN      Statuses S ON W.WorkPlanTaskStatusId = S.ID LEFT JOIN  UserProfiles UP ON W.TaskOwnerId = UP.ID  WHERE  TT.[Key] = ''PROJECT_MANAGEMENT''  AND DATEPART(ww,W.TaskDueDate) = DATEPART(ww,GETDATE())'
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  W.Title,  W.WorkPlanTaskType,  W.StartDate,  W.TaskDueDate,  W.UniqueItemIdentifier, W.ActualStartDate, W.TaskDescription, W.[Priority], W.IsCritical, PT.Title ProjectTeam,  S.Title [Status],  UP.Title TaskOwner , TT.Title AS TeamType FROM  Workplan W  LEFT JOIN  Statuses S ON W.WorkPlanTaskStatusId = S.ID  LEFT JOIN  ProjectTeams PT ON W.ProjectTeamId = PT.ID  LEFT JOIN  UserProfiles UP ON W.TaskOwnerId = UP.ID  LEFT JOIN  TeamTypes TT ON PT.TeamTypeId = TT.ID  WHERE  W.UniqueItemIdentifier = ''HR.2.2.6'''
WHERE [ID] = 63;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  RI.UniqueItemIdentifier, RI.Title, RI.IssueRiskCategory, PT.Title ProjectTeam, RI.ItemDueDate ,S.Title ItemStatus   FROM RisksAndIssues RI  LEFT JOIN ProjectTeams PT ON RI.ProjectTeamID = PT.ID   LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId  LEFT JOIN Statuses S ON RI.ItemStatusId  = S.ID WHERE   RI.ItemOwnerId IS NULL     UNION ALL    SELECT   D.UniqueItemIdentifier, D.Title  ,''Decision''  , PT.Title ProjectTeam, D.ItemDueDate ,S.Title ItemStatus   FROM Decisions D LEFT JOIN ProjectTeams PT ON D.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId  LEFT JOIN Statuses S ON D.ItemStatusId  = S.ID WHERE   D.ItemOwnerId IS NULL     UNION ALL     SELECT A.UniqueItemIdentifier, A.Title ,''Action'',  PT.Title ProjectTeam, A.ItemDueDate ,S.Title ItemStatus   FROM Actions A LEFT JOIN ProjectTeams PT ON A.ProjectTeamID = PT.ID  LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId LEFT JOIN Statuses S ON A.ItemStatusId  = S.ID WHERE  A.ItemOwnerId IS NULL'
WHERE [ID] = 65;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    W.UniqueItemIdentifier,    W.TITLE as WorkplansWithDueDatePassed  , W.TaskDueDate, W.StartDate, PT.Title ProjectTeam, W.IsCritical, S.Title TaskStatus FROM    Workplan W     LEFT JOIN Statuses S On S.ID = W.WorkPlanTaskStatusId    LEFT JOIN ProjectTeams PT on PT.ID = W.ProjectTeamId    LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId  WHERE S.[KEY] NOT IN ( ''COMPLETED'' , ''CANCELLED'')    AND CAST(W.TaskDueDate as DATE)< CAST(GETDATE() AS DATE)     AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 66;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    W.UniqueItemIdentifier,    W.TITLE as WorkplansWithDueDatePassed  , W.TaskDueDate, W.StartDate, PT.Title ProjectTeam, W.IsCritical, S.Title TaskStatus FROM    Workplan W    LEFT JOIN Statuses S On S.ID = W.WorkPlanTaskStatusId    LEFT JOIN ProjectTeams PT on PT.ID = W.ProjectTeamId   LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId WHERE    S.[KEY] NOT IN ( ''COMPLETED'' , ''CANCELLED'')   AND CAST(W.TaskDueDate as DATE)< CAST(GETDATE() AS DATE)    AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 67;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT PT.Title as ProjectTeams_With_Items_At_Risk, U.Title TeamOwner FROM ProjectTeams PT     JOIN Workplan W ON W.ProjectTeamID = PT.ID     JOIN Statuses S ON S.ID = W.WorkplanTaskStatusID     JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  LEFT JOIN UserProfiles U ON PT.ItemOwnerId = U.ID WHERE S.[Key] = ''AT_RISK''   AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 68;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title Workplan , W.TaskDueDate, W.StartDate, S.Title TaskStatus, PT.Title ProjectTeam , U.Title TaskOwner FROM Workplan W  JOIN ( SELECT   DISTINCT W.Title, WorkPlanLinksTargetId AS TaskID         FROM WorkPlanLinks WL           LEFT JOIN WorkPlan W ON W.ID = WL.WorkPlanLinksTargetId    LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID     LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId where TT.[Key]=''PROJECT_MANAGEMENT''        UNION            SELECT    DISTINCT W.Title, WorkPlanLinksSourceId AS TaskID        FROM WorkPlanLinks WL            LEFT JOIN WorkPlan W ON W.ID = WL.WorkPlanLinksSourceId    LEFT JOIN ProjectTeams PT ON W.ProjectTeamID = PT.ID     LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId where TT.[Key]=''PROJECT_MANAGEMENT'' )  SUB  ON W.ID = TaskID LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN UserProfiles U ON W.TaskOwnerId = U.ID ORDER BY TaskID'
WHERE [ID] = 71;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.Title AS [List of Milestones due in next 7 days and Not Updated Since Last 2 weeks] , W.TaskDueDate, W.StartDate, S.Title TaskStatus, PT.Title ProjectTeam , U.Title TaskOwner FROM      WorkPlan W  JOIN Statuses S on s.ID = W.WorkPlanTaskStatusId  JOIN ProjectTeams PT  ON PT.ID = W.ProjectTeamId  JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  JOIN Userprofiles U ON W.TaskOwnerId = U.ID WHERE      W.WorkPlanTaskType IN (''Milestone'')     AND W.IsCritical IN (1)      AND CAST(W.Modified AS DATE) < DATEADD(day, -14, CAST(GETDATE() AS DATE))  AND S.[Key] not in (''COMPLETED'', ''CANCELLED'') AND TT.[Key] =  ''PROJECT_MANAGEMENT'''
WHERE [ID] = 73;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.TITLE AS [Risk items that does not have Risk Mitigation plan], , RI.ItemDescription, RI.ItemDueDate, RI.RiskImpact, RI.RiskMitigation, RI.RiskProbability, PT.Title ProjectTeam, UP.Title ItemOwner  FROM RisksAndIssues RI  LEFT JOIN ProjectTeams PT ON RI.ProjectTeamID = PT.ID   LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId  LEFT JOIN UserProfiles UP ON RI.ItemOwnerId = UP.ID WHERE RI.IssueRiskCategory = ''Risk'' AND RI.RiskMitigation IS NULL AND TT.[Key]=''PROJECT_MANAGEMENT'''
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240808130554_UpdateSQLQueryWithNewColumn', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT wp.Title Workplan, pt.Title ProjectTeam, s.Title [Status] ,Wp.TaskDueDate, wp.StartDate, wp.IsCritical, UP.Title TaskOwner  from WorkPlan wp    LEFT JOIN Statuses s on wp.WorkPlanTaskStatusId = s.ID   left join ProjectTeams pt on pt.ID = wp.ProjectTeamId  LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId  LEFT JOIN UserProfiles UP ON wp.TaskOwnerId = UP.ID WHERE UP. Title = ( SELECT TOP 1 Title  FROM UserProfiles WHERE FREETEXT(Title, ''{Username}'') AND TT.[Key] = ''PROJECT_MANAGEMENT'')'
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1      CAST(RP.PeriodEndDate AS DATE) AS WeeklyStatusDueDate,     RP.Title AS PeriodTitle,     RP.PeriodStartDate AS StartDate,     RP.PeriodEndDate AS "End Date",     RP.Created AS CreatedDate,     RP.Modified AS LastModifiedDate FROM      ReportingPeriods RP  WHERE      CAST(GETDATE() AS DATE) BETWEEN CAST(RP.PeriodStartDate AS DATE) AND CAST(RP.PeriodEndDate AS DATE)  ORDER BY      RP.Modified DESC'
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.UniqueItemIdentifier, W.Title CriticalTasks, PT.Title WorkStream, S.Title [Status] , W.TaskDueDate, W.StartDate, W.IsCritical, UP.Title TaskOwner  FROM WorkPlan W   LEFT JOIN Statuses S on W.WorkPlanTaskStatusId = S.ID   LEFT JOIN ProjectTeams PT on PT.ID = W.WorkstreamId LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId  LEFT JOIN UserProfiles UP ON W.TaskOwnerId = UP.ID WHERE W.IsCritical = 1  AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 48;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT W.UniqueItemIdentifier, W.Title TasksWithoutOwner, PT.Title WorkStream, S.Title [Status] , W.TaskDueDate, W.StartDate, W.IsCritical FROM WorkPlan W   LEFT JOIN Statuses S on W.WorkPlanTaskStatusId = S.ID   LEFT JOIN ProjectTeams PT on PT.ID = W.WorkstreamId LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId  WHERE W.TaskOwnerId IS NULL AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 53;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.TITLE AS [Risk items that does not have Risk Mitigation plan], RI.ItemDescription, RI.ItemDueDate, RI.RiskImpact, RI.RiskMitigation, RI.RiskProbability, PT.Title ProjectTeam, UP.Title ItemOwner  FROM RisksAndIssues RI  LEFT JOIN ProjectTeams PT ON RI.ProjectTeamID = PT.ID   LEFT JOIN TeamTypes TT on TT.ID  = PT.TeamTypeId  LEFT JOIN UserProfiles UP ON RI.ItemOwnerId = UP.ID WHERE RI.IssueRiskCategory = ''Risk'' AND RI.RiskMitigation IS NULL AND TT.[Key]=''PROJECT_MANAGEMENT'''
WHERE [ID] = 74;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240822104257_ModifyIncorrectSqlQueries', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AN.Title, AN.AccomplishmentNextstepCategory FROM ProjectStatusEntries PSE  JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID  JOIN AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId  JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = ''Finance'' AND RP.ID = (SELECT RPID.ID -1 FROM ReportingPeriods RPID WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate) ORDER BY AN.AccomplishmentNextstepCategory', [AppAffinity] = N'CE4-PMO', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'What are the accomplishment and next steps of Finance team last week?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 81;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select PSE.ExecutiveSummary from ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID  JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = ''Finance'' AND RP.ID = (SELECT RPID.ID -1 FROM ReportingPeriods RPID WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate)', [AppAffinity] = N'CE4-PMO', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'What is the executive summary for Finance from the last reporting period?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 82;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select PSE.ExecutiveSummary from ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID  JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = ''Finance'' AND RP.ID = (SELECT RPID.ID  FROM ReportingPeriods RPID WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate)', [AppAffinity] = N'CE4-PMO', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'What is the executive summary for Finance from the current reporting period?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 83;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select PSE.ExecutiveSummary from ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID  JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = ''Finance'' AND RP.ID = (SELECT RPID.ID  FROM ReportingPeriods RPID WHERE GETDATE() BETWEEN RPID.PeriodStartDate AND RPID.PeriodEndDate)', [AppAffinity] = N'CE4-PMO', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'What is the executive summary of Finance team this week?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select COUNT(UP.ID) from UserProfiles UP LEFT JOIN AccountStatuses ACCS on ACCS.ID = UP.AccountStatusId where ACCS.[Key] = ''PROJECT_ENABLED''', [AppAffinity] = N'CE4-PMO', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'How many users have access to the PMO app?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 85;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select COUNT(UP.ID) from UserProfiles UP LEFT JOIN AccountStatuses ACCS on ACCS.ID = UP.AccountStatusId where ACCS.[Key] = ''PROJECT_ENABLED''', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How many users have access to this project?'
WHERE [ID] = 86;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT WP.Title AS [WorkPlan Title],  WP.TaskDescription AS [Task Description],      WP.TaskDueDate AS [Task Due Date],  RAI.Title AS [Risk Title],     RAI.ItemDescription AS [Risk Description],      RAI.ItemDueDate AS [Risk Due Date],     TT.Title AS [Team Type],     PT.Title AS [Project Team] FROM      WorkPlan WP  JOIN      WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues WPTRAIFARAI ON WP.ID = WPTRAIFARAI.WorkPlanId  JOIN      RisksAndIssues RAI ON RAI.ID = WPTRAIFARAI.RisksAndIssueId  JOIN      ProjectTeams PT ON WP.ProjectTeamId = PT.ID  JOIN      TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE      TT.ID = 1       AND PT.Title = ''Finance''', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the Finance workplan items that have linkages to a risk?'
WHERE [ID] = 87;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    WP.UniqueItemIdentifier,  WP.Title AS TaskTitle,     S18.Title AS TaskStatus,     PT6.Title AS ProjectTeam,     WP.TaskDueDate,      WP.StartDate,     WP.IsCritical,     UP13.Title AS TaskOwner FROM      WorkPlan WP  LEFT JOIN      ProjectTeams PT6 ON WP.ProjectTeamId = PT6.ID  LEFT JOIN      Statuses S18 ON WP.WorkPlanTaskStatusId = S18.ID  LEFT JOIN      TeamTypes TT ON PT6.TeamTypeId = TT.ID  LEFT JOIN      UserProfiles UP13 ON WP.TaskOwnerId = UP13.ID  WHERE      PT6.Title = ''IT''     AND TT.ID = 1     AND WP.WorkPlanTaskType = ''Task''  GROUP BY    WP.UniqueItemIdentifier,  WP.Title, S18.Title, PT6.Title, WP.TaskDueDate, WP.StartDate, WP.IsCritical, UP13.Title', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Can I have a breakdown of IT tasks by status?'
WHERE [ID] = 88;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ''Total Top Down Target'' AS KPI,  FORMAT((SUM(VTE.HeadcountCostReductionEst)+SUM(VTE.NonHeadcountCostReductionEst)+SUM(VTE.RevenueGrowthEstimate))/1000000,''N2'') AS ''Value (Million)''  FROM ValueCaptureTopDownEstimates VTE', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'What are our targets for this engagement?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 89;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = ''{Username}'' GROUP BY S.Title ', [SuggestionText] = N'How are my initiatives doing?'
WHERE [ID] = 90;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = ''{Username}'' ', [SuggestionText] = N'Are there any risks or issues with initiatives that I’m responsible for?'
WHERE [ID] = 91;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = ''{Username}'' ', [SuggestionText] = N'How  many initiatives are assigned to me?'
WHERE [ID] = 92;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = ''{Username}'' ', [SuggestionText] = N'Give my cost reduction initiatives.'
WHERE [ID] = 93;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VT.RevenueGrowthEstimate,0)) [RevenueGrowthTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title = {ProjectTeam}', [SuggestionText] = N'What are the revenue growth targets for Sales & Marketing?'
WHERE [ID] = 94;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VT.CostToAchieveEstimate,0)) [CostToAchieveTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title ={ProjectTeam}', [SuggestionText] = N'What are the cost to achieve targets for R&D?'
WHERE [ID] = 95;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT S.Title [Value Capture Stage] , COUNT(VI.ID) [No. of Initiatives] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} GROUP BY S.Title', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'How many initiatives are there in IT across different stages?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 96;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Approved Initiaves] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} AND S.Title = ''Approved''', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'List IT initiatives that are in approved stage.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 97;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves with Workplan] FROM ValueCaptureInitiatives VI JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WV ON VI.ID = WV.ValueCaptureInitiativeId', [SuggestionText] = N'List initiatives that have workplan item linked to them.'
WHERE [ID] = 98;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT VI.Title [Initiaves with Risk] FROM ValueCaptureInitiatives VI JOIN RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RV ON VI.ID = RV.ValueCaptureInitiativeId LEFT JOIN RisksAndIssues RI ON RI.ID = RV.RisksAndIssueId WHERE RI.IssueRiskCategory = ''Risk''', [SuggestionText] = N'How many initiatives have Risks linked?'
WHERE [ID] = 99;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VT.HeadcountCostReductionEst,0)) [HeadCountCostReductionTarget] FROM ValueCaptureTopDownEstimates VT', [SuggestionText] = N'What is the total headcount cost reduction target?'
WHERE [ID] = 100;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Non Active Initiaves] FROM ValueCaptureInitiatives VI WHERE ISNULL(VI.IsItemActive ,0) = 0', [SuggestionText] = N'List initiatives that are not active.'
WHERE [ID] = 101;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages  VCS ON VCI.ValueCaptureStageId = VCS.ID WHERE VCS.Title = {ValueCaptureStage} ', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'How many initiatives have been realized?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 102;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(VTE.NonHeadcountCostReductionEst) + SUM(VTE.RevenueGrowthEstimate) + SUM(VTE.HeadcountCostReductionEst) ''Total Top Down Target Value'' FROM ValueCaptureTopDownEstimates VTE ', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'What is the Total Top Down Target Value?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 103;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(VTE.RevenueGrowthEstimate) RevenueGrowth,SUM(VTE.TotalCostReduction) CostReduction FROM ValueCaptureTopDownEstimates VTE', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'Show my top down target values by cost reduction and revenue growth.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 104;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) FROM ValueCaptureInitiatives VI WHERE VI.IsItemActive = 1', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'How many active initatives are there in my project?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 105;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team] ,CAST(SUM(ISNULL(VT.RevenueGrowthEstimate,0))/1000000 AS FLOAT) [Revenue Growth(in Million)] FROM ValueCaptureTopDownEstimates VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId GROUP BY PT.Title', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'What is the total of revenue growth by team?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 106;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VC.Title AS [ValueCaptureInitiatives with no Owners] FROM ValueCaptureInitiatives VC WHERE VC.ItemOwnerId IS NULL', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List out initiatives with no owners assigned.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 107;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiative with Workplan at Risk] FROM WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WTVI LEFT JOIN Workplan W ON W.ID = WTVI.WorkPlanId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId LEFT JOIN ValueCaptureInitiatives VI on VI.ID = WTVI.ValueCaptureInitiativeId WHERE S.[KEY] = ''AT_RISK''', [SuggestionText] = N'List out initiatives that have at risk workplan task linked.'
WHERE [ID] = 108;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VP.Title AS ValueCapturepriority, COUNT(VC.ValueCapturePriorityId) AS ValueCapturePriorityCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId where VC.ValueCapturePriorityId is not null GROUP BY VC.ValueCapturePriorityId, VP.Title', [SuggestionText] = N'Show me initiatives count by priority.'
WHERE [ID] = 109;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS UserProfile, COUNT(VC.ID) AS ValueCaptureOwnerwiseCount FROM ValueCaptureInitiatives VC LEFT JOIN UserProfiles UP ON UP.ID = VC.ItemOwnerId WHERE VC.ItemOwnerId IS NOT NULL GROUP BY VC.ItemOwnerId, UP.Title', [SuggestionText] = N'Show me initiatives count by owner.'
WHERE [ID] = 110;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiaves] FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Title = ''{Username}''', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List initiatives where I''m assigned as the Owner.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 111;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as IdentifiedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Identified''', [SuggestionText] = N'How many initiatives are identified?'
WHERE [ID] = 112;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as ApprovedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Approved'' ', [SuggestionText] = N'How many initiatives have been approved?'
WHERE [ID] = 113;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(VCI.ID) as ValidatedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = ''Validated'' ', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'How many initiatives have been validated?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 114;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS [Value Capture Stage] ,COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCI.ValueCaptureStageId = VCS.ID GROUP BY VCS.Title', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Can you provide breakdown of the initiatives across various stages?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 115;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}''', [SuggestionText] = N'What initatives have I been assigned to?'
WHERE [ID] = 116;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VS.Title ValueCaptureStage FROM ValueCaptureInitiatives VI JOIN ValueCaptureStages VS ON VI.ValueCaptureStageID = VS.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}'' ORDER BY ValueCaptureStage', [SuggestionText] = N'List my initatives by stages.'
WHERE [ID] = 117;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title AS Initiatives, VT.Title ValueCaptureType FROM ValueCaptureInitiatives VI JOIN ValueCaptureTypes VT ON VI.ValueCaptureStageID = VT.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = ''{Username}'' ORDER BY ValueCaptureType', [SuggestionText] = N'List my initatives by Value Capture Type.'
WHERE [ID] = 118;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title,SUM(ISNULL(VTE.NonHeadcountCostReductionEst,0)) + SUM(ISNULL(VTE.RevenueGrowthEstimate,0)) + SUM(ISNULL(VTE.HeadcountCostReductionEst,0)) AS TotalTopDownTarget  FROM ValueCaptureTopDownEstimates VTE LEFT JOIN ProjectTeams PT ON PT.ID = VTE.Projectteamid GROUP BY PT.Title', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'What is the top-down target for this project?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 119;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCS.Title AS ValueCaptureStage, COUNT(VC.ID) AS ValueCaptureStageCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VC.ValueCaptureStageId GROUP BY VC.ValueCaptureStageId, VCS.Title', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Show me initiatives count by stage.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 120;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title as Functions, COUNT(VC.FunctionId) AS ValueCaptureFunction FROM ValueCaptureInitiatives VC LEFT JOIN Functions F ON F.ID = VC.FunctionId WHERE VC.FunctionId IS NOT NULL GROUP BY VC.FunctionId, F.Title ', [SuggestionText] = N'Show me initiatives count by function.'
WHERE [ID] = 121;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT     CC.Title AS [Cost/Revenue Centers linked to PnL Line Items], CC.Account FROM CostCenters CC     LEFT JOIN ValueCaptureFinancialLineItems Fin         ON CC.FinancialLineItemId = Fin.ID     LEFT JOIN ValueCaptureFinancialLineItemTypes FinType         ON Fin.FinancialLineItemTypeId = FinType.ID WHERE FinType.Title = ''PnL''', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List all Cost/Revenue Centers linked to PnL Line Items.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 122;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) AS [Top Down targets #],         SUM(ISNULL(VTE.NonHeadcountCostReductionEst, 0)) AS [Total Non Headcount Cost Reduction Estimate],         SUM(ISNULL(VTE.RevenueGrowthEstimate, 0)) AS [Total Revenue Growth Estimate],         SUM(ISNULL(VTE.CostToAchieveEstimate, 0)) AS [Total Cost To Achieve Estimate],        SUM(ISNULL(VTE.HeadcountCostReductionEst, 0)) AS [Total Headcount Cost Reduction Estimate],         SUM(ISNULL(VTE.HeadcountCostReductionEst, 0)) + SUM(ISNULL(VTE.NonHeadcountCostReductionEst, 0))  + SUM(ISNULL(VTE.RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates VTE', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'Can you provide Top Down Targets KPIs?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 123;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  VCTT.Title, PT.Title, VCTT.CostToAchieveEstimate, VCTT.NonHeadcountCostReductionEst, VCTT.HeadcountCostReductionEst, VCTT.RevenueGrowthEstimate FROM   ValueCaptureTopDownEstimates VCTT  LEFT JOIN ProjectTeams PT on PT.ID = VCTT.ProjectTeamId', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'How many top down targets do we have for this project?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 124;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(VTE.HeadcountCostReductionEst,0)) AS HeadcountCostReduction FROM ValueCaptureTopDownEstimates VTE', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'What is the Total Headcount Cost Reduction Target?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 125;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(VTE.NonHeadcountCostReductionEst,0)) AS NonHeadcountCostReduction FROM  ValueCaptureTopDownEstimates VTE', [SuggestionText] = N'What is the Total Non Headcount Cost Reduction Target?'
WHERE [ID] = 126;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(VTE.RevenueGrowthEstimate,0)) AS RevenueGrowth FROM  ValueCaptureTopDownEstimates VTE', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'What is the Total Revenue Growth Target?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 127;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(ISNULL(VTE.CostToAchieveEstimate,0)) AS CostToAchive FROM  ValueCaptureTopDownEstimates VTE', [SuggestionText] = N'What is the Total Cost to Achieve Target?'
WHERE [ID] = 128;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PT.Title ProjectTeams, VBM.Title Benchmark FROM  ValueCaptureCostBenchmarks VBM LEFT JOIN  ProjectTeams PT ON PT.ID = VBM.ProjectTeamId', [SuggestionText] = N'Are there any benchmarks for this project?'
WHERE [ID] = 129;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT A.Amount as [Client Baseline PnL Amount], A.FinancialLineItem as FinancialLineItem FROM( SELECT F.ID, F.Ordinal, F.Title FinancialLineItem , SUM(C.Amount)/1000000 Amount FROM ValueCaptureFinancialLineItems F LEFT JOIN CostCenters C ON C.FinancialLineItemId = F.ID  GROUP BY F.ID, F.Title, F.Ordinal ) A WHERE A.Amount IS NOT NULL', [SuggestionText] = N'What is my program Client Baseline PnL?'
WHERE [ID] = 130;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VCRI.Title AS [Recommended Initiatives List] FROM ValueCaptureRecommendedInitiatives VCRI', [SuggestionText] = N'List all recommended initiatives for my program.'
WHERE [ID] = 131;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	SUM(a.[Total Top Down Target Value]) AS [Top Down Targets],      SUM(b.[Bottom Up Initiatives Value]) AS [Bottom Up Initiatives Value], 	( SUM(b.[Bottom Up Initiatives Value])-SUM(a.[Total Top Down Target Value])) AS Variance FROM ( SELECT   SUM(ISNULL(VCTDE.HeadcountCostReductionEst, 0)) + SUM(ISNULL(VCTDE.NonHeadcountCostReductionEst, 0))        + SUM(ISNULL(VCTDE.RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates VCTDE) a, ( select SUM(Amount)*12 as [Bottom Up Initiatives Value]  FROM vwUnpivotEstimates where MYear=''Y3M12'' AND Recurring =1 ) b ', [SuggestionText] = N'Compare Top Down Targets vs Bottom Up Initiatives for my project.'
WHERE [ID] = 132;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'   SELECT ISNULL(SUM(Act.AMOUNT),0.0) AS [Cumulative One Time Cost Amount] 			   FROM vwUnpivotActuals Act 			   LEFT JOIN ValueCaptureImpactTypes VCIT ON Act.ValueCaptureImpactTypeID=VCIT.ID 			   LEFT JOIN ValueCaptureInitiatives VCI ON Act.ValueCaptureInitiativeID=VCI.ID 			   WHERE VCIT.PositiveOrNegativeValues=''Negative'' 			   AND Act.Recurring<>1 			   AND VCI.Title = ''{ValueCaptureInitiative}''', [SuggestionText] = N'What is cumulative one-time cost for all initiatives?'
WHERE [ID] = 133;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'  SELECT  	   WP.Title AS [Workplan Items Linked to Value Capture Initiatives]  	   FROM WorkPlan WP 	   LEFT JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WPVC  	             ON WP.ID=WPVC.WorkPlanId 	   LEFT JOIN ValueCaptureInitiatives VCI  	             ON VCI.ID=WPVC.ValueCaptureInitiativeId', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List all workplan items linked to VC initiatives.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 134;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID     WHERE          E.Recurring = 1     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID     WHERE          A.Recurring = 1      GROUP BY          A.ValueCaptureInitiativeId, B.Title )   SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , (A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'List all initiatives that had an estimate annualized run-rate differed by more than 10% from the Actual annualized run-rate.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 135;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     CONCAT(''Tracking Period of the Program is from '', CAST(MIN(VTM.StartDt) AS DATE), '' to '', CAST(MAX(VTM.EndDt) AS DATE)) FROM     ValueCaptureTransactionMonths VTM WHERE     VTM.IsItemActive = 1', [SuggestionText] = N'What''s the tracking period for my project?'
WHERE [ID] = 136;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''{ProjectTeam}'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''{ProjectTeam}''    ) Act         ON 1 = 1', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'What''s the variance for Legal function?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 137;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT   	    COUNT(VCI.ID) AS [Initiative Count for Selected Evaluator Quad]  		     FROM ValueCaptureInitiatives VCI 		LEFT JOIN VCInitiativeEvaluatorQuadInfo VCQ  		    ON VCI.VCInitiativeEvaluatorQuadInfoId=VCQ.ID 		       WHERE VCQ.Title= {EvaluatorQuad}', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Based on Evaluator comparison, how many initiatives have ''High Benefit, High Complexity''?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 138;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''{ProjectTeam}'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''{ProjectTeam}''     ) Act         ON 1 = 1', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'What is my variance for the IT initiatives?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 139;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ISNULL(SUM(Est.Amount), 0.0) AS Estimates,        ISNULL(SUM(Act.Amount), 0.0) AS Actuals,        ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ''Finance''           and VCI.Title = ''Initiative 1''           and Est.MYear = ''Y1M1'' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ''Finance''               AND VCI.Title = ''Initiative 1''               AND MYear = ''Y1M1''     ) Act         ON 1 = 1', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'What is my Y1M1 Estimates, Actuals and Variance for Finance - [Initiative 1]?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 140;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID 	LEFT JOIN ValueCaptureTransactionMonths VT ON VT.[Key] = E.MYear      WHERE          E.Recurring = 1 		AND (CAST( DATEADD(MM, 3 , GETDATE()) AS DATE) BETWEEN VT.StartDt AND VT.EndDt)     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID  	LEFT JOIN ValueCaptureTransactionMonths VT ON VT.[Key] = A.MYear      WHERE          A.Recurring = 1  		AND (CAST( DATEADD(MM, 3 , GETDATE()) AS DATE) BETWEEN VT.StartDt AND VT.EndDt)     GROUP BY          A.ValueCaptureInitiativeId, B.Title )  SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , ABS(A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [SuggestionText] = N'List initiatives that had an Estimate ARR that differed by 10% (higher or lower) from the Actual ARR for previous month.'
WHERE [ID] = 141;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  ISNULL(SUM(UE.Amount)/1000000,0) AS TotalNetSales FROM ValueCaptureEstimates VE LEFT JOIN ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId WHERE FLT.Title = ''PnL'' AND FL.Title in (''Net sales'')', [SuggestionText] = N'In the PnL, what is my net sales?'
WHERE [ID] = 142;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS TotalOperatingPerformance FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL''  AND FLG.Title in (''Total Operating Performance'') ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'In the PnL, what is my total operating performance?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 143;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS GrossProfit FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL''  AND FLG.Title in (''Gross Profit'') ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'In the PnL, what is my gross profit?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 144;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [EBITA & Net Income] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''PnL'' AND FLG.Title in (''EBITDA'',''Net Income'') ', [SuggestionText] = N'In the PnL, what is my EBITDA and Net Income?'
WHERE [ID] = 145;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Assets] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Total Current Assets'',''Total Non-Current Assets'') ', [SuggestionText] = N'In the Balance Sheet, what is my Total Assets?'
WHERE [ID] = 146;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Liabilities] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Total Current Liabilities'',''Total Non-Current Liabilities'') ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'In the Balance Sheet, what is my Total Liabilities?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 147;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	ISNULL(SUM(UE.Amount)/1000000,0) AS [Total Equity] FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN  	vwUnpivotEstimates UE ON UE.ID = VE.ID LEFT JOIN 	ValueCaptureFinancialLineItemTypes FLT ON FLT.ID = FL.FinancialLineItemTypeId LEFT JOIN 	ValueCaptureFinancialLineItemGroups FLG ON FLG.ID = FL.FinancialLineItemGroupId WHERE      FLT.Title = ''Balance Sheet''  AND FLG.Title in (''Equity'') ', [SuggestionText] = N'In the Balance Sheet, what is my Total Equity?'
WHERE [ID] = 148;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  SUM(VTE.NonHeadcountCostReductionEst) NonHeadcountCostReduction, SUM(VTE.HeadcountCostReductionEst) HeadcountCostReduction FROM ValueCaptureTopDownEstimates VTE', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'What is the total of headcount and non-headcount related cost reduction?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 149;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH CTE AS  ( 	SELECT I.ProjectTeamId  	FROM ValueCaptureEstimates E 		LEFT JOIN ValueCaptureInitiatives I ON I.ID = E.ValueCaptureInitiativeId 	EXCEPT 	SELECT VCTDE.ProjectTeamId FROM ValueCaptureTopDownEstimates VCTDE )  SELECT PT.Title [ProjectTeam]  FROM CTE LEFT JOIN ProjectTeams PT ON PT.ID = CTE.ProjectTeamId', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'List out teams that have bottom-up estimates but missing top-down targets.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 150;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' DECLARE @CurrentYR NVARCHAR(10), @SQL NVARCHAR(MAX)  SELECT  TOP 1 @CurrentYR = [YEAR] FROM vwValueCaptureTransactionMonths WHERE RelativeYear = YEAR(GETDATE())   SELECT @SQL = '' ;WITH TopDownCTE AS ( 	SELECT  		PT.ID  PROJECTTEAMID 		,PT.Title [ProjectTeam] 		,(SUM(ISNULL(VT.RevenueGrowthEstimate,0))  + SUM(ISNULL(VT.NonHeadcountCostReductionEst,0)) + SUM(ISNULL(VT.HeadcountCostReductionEst,0)))/1000000  [Target] 	FROM ValueCaptureTopDownEstimates VT 		LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId 	WHERE PT.ManageValueCapture = 1 	GROUP BY  		PT.ID  		,PT.Title 	UNION ALL 	SELECT  		-1 		,''''Overall'''' 		,(SUM(ISNULL(VT.RevenueGrowthEstimate,0))  + SUM(ISNULL(VT.NonHeadcountCostReductionEst,0)) + SUM(ISNULL(VT.HeadcountCostReductionEst,0)))/1000000  [Target] 	FROM ValueCaptureTopDownEstimates VT 		LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId 	WHERE PT.ManageValueCapture = 1 ) , BottomUPCTE AS ( 	SELECT  		VI.ProjectTeamId 		,PT.Title [ProjectTeam] 		,(SUM(ISNULL(E.''+@CurrentYR+''M12Estimate,0))*12)/1000000 [Estimate] 	FROM ValueCaptureEstimates E 	 JOIN ValueCaptureInitiatives VI ON VI.ID =E.ValueCaptureInitiativeId 	 LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId 	WHERE  		VI.IsItemActive = 1  		AND E.Recurring = 1  		AND PT.ManageValueCapture = 1 	GROUP BY  		VI.PROJECTTEAMID 		,PT.Title 	UNION ALL 	SELECT  		-1 		,''''Overall'''' 		,(SUM(ISNULL(E.''+@CurrentYR+''M12Estimate,0))*12)/1000000 [Estimate] 	FROM ValueCaptureEstimates E 	 JOIN ValueCaptureInitiatives VI ON VI.ID =E.ValueCaptureInitiativeId 	 LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId 	WHERE  		VI.IsItemActive = 1  		AND E.Recurring = 1  		AND PT.ManageValueCapture = 1 )  SELECT  	COALESCE(T.PROJECTTEAMID,B.PROJECTTEAMID) ProjectTeamID 	,COALESCE(T.ProjectTeam,B.ProjectTeam) ProjectTeam 	,ISNULL(T.[Target],0) [TopDown Target(M)] 	,ISNULL(B.Estimate,0) [BottomUP Estimate(M)] 	,ISNULL(T.[Target],0) - ISNULL(B.Estimate,0) [Variance(M)] FROM TopDownCTE T 	FULL OUTER JOIN BottomUPCTE B ON T.ProjectTeamId = B.ProjectTeamId ORDER BY ProjectTeamId''  EXEC sp_executesql  @SQL', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'What is the variance between Top down and bottom up? Provide overall variance and variance by the team.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 151;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID     WHERE          E.Recurring = 1 		AND E.MYear IN (''Y1M12'')     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID     WHERE          A.Recurring = 1          AND A.MYear IN (''Y1M12'')     GROUP BY          A.ValueCaptureInitiativeId, B.Title )   SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , ABS(A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'List out initiatives that have an Estimate Annualized Run Rate that differed by 10% (higher or lower) from the Actual Annualized Run Rate for Y1M12.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 152;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  VC.Title AS ValueCaptureInitiativesReadyForApproval FROM  ValueCaptureInitiatives VC WHERE  VC.ReadyForApproval = 1', [SuggestionText] = N'List out validated initiatives that are ready to be approved.'
WHERE [ID] = 153;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      VI.title AS InitiativeImpactOnPnL FROM      ValueCaptureEstimates VE LEFT JOIN      ValueCaptureFinancialLineItems FL ON FL.ID = VE.FinancialLineItemId LEFT JOIN      ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId WHERE      FL.FinancialLineItemTypeId = 1 GROUP BY      VI.Title', [SuggestionText] = N'List out initiatives that are impacting PnL.'
WHERE [ID] = 154;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 5 A.Initiatives, A.Amount FROM( SELECT VI.Title Initiatives ,sum(VE.Amount) Amount FROM vwUnpivotActuals VE LEFT JOIN ValueCaptureInitiatives VI ON VI.id = VE.ValueCaptureInitiativeId LEFT JOIN ValueCaptureImpactTypes VIT ON VIT.ID = VE.ValueCaptureImpactTypeid GROUP BY VI.Title,VE.Amount ) A WHERE A.Amount > 0 ORDER BY A.Amount DESC', [SuggestionText] = N'List out top 5 initiatives that are positively impacting PnL.'
WHERE [ID] = 155;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT TOP 5  		VI.Title [top 5 initiatives with best benefit score] 	FROM  		ValueCaptureInitiatives VI 	LEFT JOIN  		ValueCaptureImpacts VIM ON VIM.ID = VI.ValueCaptureImpactid 	WHERE  		VIM.ID in (1) 	ORDER BY  		VI.BenefitScore DESC', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List out top 5 initiatives with best benefit score that have high financial impact.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 156;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	SELECT TOP 5  		VI.Title [top 5 most complex initiatives] 	FROM  		ValueCaptureInitiatives VI 	LEFT JOIN  		ValueCaptureImpacts VIM ON VIM.ID = VI.ValueCaptureImpactid 	WHERE  		VIM.ID in (3) 	ORDER BY  		VI.ComplexityScore DESC', [SuggestionText] = N'List out top 5 most complex initiatives that have low financial impact.'
WHERE [ID] = 157;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 1  PT.Title, SUM(ISNULL(VTE.HeadcountCostReductionEst,0)) AS MostHeadcountCostReduction FROM   ValueCaptureTopDownEstimates VTE LEFT JOIN   ProjectTeams PT ON PT.ID = VTE.Projectteamid GROUP BY   PT.Title ORDER BY   SUM(ISNULL(VTE.HeadcountCostReductionEst,0)) DESC', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'Which team has most amount of headcount related cost reduction?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 158;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Iniatives that are Cost Reduction and are Easy for Implementation Ease] FROM ValueCaptureInitiatives VI     LEFT JOIN ValueCaptureTypes VT         ON VT.ID = VI.ValueCaptureTypeID     LEFT JOIN ImplementationEase VD         ON VD.ID = VI.ImplementationEaseID WHERE VT.Title = ''Cost Reduction''       AND VD.Title = ''Easy''', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List all Iniatives that are Cost Reduction and are Easy for Implementation Ease.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 159;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VS.Title [Value Capture Stage],        VI.Title [Initiatives that have Talent intiative value drivers] FROM ValueCaptureInitiatives VI     LEFT JOIN ValueCaptureStages VS         ON VS.ID = VI.ValueCaptureStageID     LEFT JOIN ValueCaptureInitiativesToValueCaptureValueDriversForValueCaptureValueDrivers VD         ON VD.ValueCaptureInitiativeId = VI.ID     LEFT JOIN ValueCaptureValueDrivers VV         ON VD.ValueCaptureValueDriverId = VV.ID WHERE VV.Title = ''Talent'' ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'Provide me a list of Iniatives by stage that have Talent iniative value drivers.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 160;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VC.Title as [Value Capture Initiatives with No Owners] FROM ValueCaptureInitiatives as VC WHERE VC.ItemOwnerId IS NULL', [SuggestionText] = N'Show me all iniatives that do not have an owner.'
WHERE [ID] = 161;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      ISNULL(VP.Title, ''No Priority'') AS Category,     COUNT(VC.ID) AS Count,     ''Priority'' AS Type FROM      ValueCaptureInitiatives VC LEFT JOIN      ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId GROUP BY      VC.ValueCapturePriorityId, VP.Title  UNION ALL  SELECT      ISNULL(VS.Title, ''No Stage Assigned'') AS Category,     COUNT(VC.ID) AS Count,     ''Stage'' AS Type FROM      ValueCaptureInitiatives VC LEFT JOIN      ValueCaptureStages VS ON VS.ID = VC.ValueCaptureStageId WHERE      VC.ValueCaptureStageId IS NOT NULL GROUP BY      VC.ValueCaptureStageId, VS.Title;', [SuggestionText] = N'Provide me a count of initiatives by prioirty and stage.'
WHERE [ID] = 162;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT FL.Title [Balance sheet line items that do not have a linked account] FROM ValueCaptureFinancialLineItems FL     LEFT JOIN ValueCaptureFinancialLineItemTypes FLT         ON FLT.ID = FL.FinancialLineItemTypeID     LEFT JOIN BalanceSheetAccounts BLA         ON BLA.FinancialLineItemID = FL.ID WHERE FLT.Title = ''Balance Sheet''       AND BLA.ID IS NULL', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Show me all Balance sheet line items that do not have a linked account.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 163;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(ISNULL(E.Amount, 0) * 12) [Run Rate for iniatives in Approved, Committed and Realized] FROM ValueCaptureInitiatives VI LEFT JOIN vwUnpivotEstimates E ON E.ValueCaptureInitiativeId = VI.ID LEFT JOIN ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageID WHERE VS.Title IN ( ''Approved'', ''Committed'', ''Realized'' ) AND MYear = ( select VCTMK.[Key] from ValueCaptureTransactionMonths VCTMK where CAST(VCTMK.EndDt AS date) = (SELECT MAX(CAST(VCTM.EndDt AS date)) FROM ValueCaptureTransactionMonths VCTM))', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'What is the Run Rate for iniatives in Approved, Committed and Realized?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 164;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title [Project Team],        SUM(T.HeadCountCostReductionEst) [Total target Headcount cost redutciton] FROM ValueCaptureTopDownEstimates T     LEFT JOIN ProjectTeams PT         ON PT.ID = T.ProjectTeamId GROUP BY PT.Title', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Provide the total Headcount cost redutciton target listed out by project team and provide the number of FTEs.'
WHERE [ID] = 165;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SUM(T.FTEs) [FTEs part of the top down targets for EMEIA] FROM ValueCaptureTopDownEstimates T     LEFT JOIN Regions R         ON R.ID = T.RegionID WHERE R.Title = ''EMEIA''', [AppAffinity] = N'CE4-VC', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'How many FTEs are part of the top down targets for EMEIA?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 166;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT VI.Title [Initiatives with Benefit score over 75] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId WHERE CAST(VI.BenefitScore AS INT) > 75 AND PT.Title IN (''HR'')', [AppAffinity] = N'CE4-VC', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Which HR iniatives have a benefit score over 75?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 167;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	VI.Title [Initiatives that have Risk associated with them] FROM 	ValueCaptureInitiatives VI LEFT JOIN  	ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageId LEFT JOIN  	RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs VIR ON VIR.ValueCaptureInitiativeId = VI.ID LEFT JOIN 	RisksAndIssues RI ON RI.ID = VIR.RisksAndIssueId WHERE  	RI.IssueRiskCategory IN (''Risk'') 	AND VS.Title IN (''Committed'')', [AppAffinity] = N'CE4-VC', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'List out all Committed Iniatives that have a risk associated with them.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 168;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select Top 5 VC.Title, VS.Title, VC.BenefitScore From ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VS on VS.ID = VC.ValueCaptureStageId where VS.Title in (''Identified'') order by BenefitScore desc', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'List all High Benefit iniatives that are in the Identified Stage.'
WHERE [ID] = 169;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	VI.Title [Initiative is Approved with no Owner] FROM 	ValueCaptureInitiatives VI LEFT JOIN  	ValueCaptureStages VS ON VS.ID = VI.ValueCaptureStageId WHERE  	VS.Title IN (''Approved'') 	AND 	VI.ItemOwnerId IS NULL', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Show me all iniatives that are approved and do not have an owner assigned.'
WHERE [ID] = 170;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT 	COUNT(VI.ID) FROM 	ValueCaptureInitiatives VI LEFT JOIN 	UserProfiles UP ON UP.ID = VI.ItemOwnerId WHERE  	UP.EMail = ''{Username}''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How many iniatives are assigned to me?'
WHERE [ID] = 171;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PT.Title ProjectTeam,SUM(ISNULL(VTE.NonHeadcountCostReductionEst,0)) NonHeadcountCostReductionTarget  FROM   ValueCaptureTopDownEstimates VTE LEFT JOIN   ProjectTeams PT ON PT.ID = VTE.Projectteamid GROUP BY   PT.Title', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Provide the total non-headcount cost reduciton targets listed out by project team.'
WHERE [ID] = 172;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title, STRING_AGG(N.Title, '', '') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = ''DAY_ONE'' GROUP BY D.Title ', [SuggestionText] = N'Provide a summary of Day 1 process dispositions.'
WHERE [ID] = 173;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' ', [SuggestionText] = N'How many systems are tagged to Current State processes?'
WHERE [ID] = 174;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' ', [SuggestionText] = N'How many systems are tagged to Day 1 processes?'
WHERE [ID] = 175;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Day 1 processes? '
WHERE [ID] = 176;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE'' AND A.Title IS NOT NULL ', [SuggestionText] = N'How many assets are tagged to Current State processes? '
WHERE [ID] = 177;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ns.Title, a.TotalCount FROM ( SELECT COUNT(Title) AS TotalCount, BusinessEntityId FROM Nodes nds WHERE NodeTypeId = 3 GROUP BY BusinessEntityId ) a INNER JOIN Nodes ns ON a.BusinessEntityId = ns.ID', [SuggestionText] = N'Can you provide me number of processes by op model?'
WHERE [ID] = 178;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ns.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''CURRENT_STATE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ns ON a.BusinessEntityId = ns.ID ', [SuggestionText] = N'How many processes we have in current state?'
WHERE [ID] = 179;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ns.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = ''DAY_ONE'' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ns ON a.BusinessEntityId = ns.ID ', [SuggestionText] = N'How many processes we have in Day1 state?'
WHERE [ID] = 180;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1) FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''  AND N.NodeTypeId = 3  AND N.ID NOT IN (   SELECT DISTINCT NTO.NodeId   FROM Nodes N1   LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null  )', [SuggestionText] = N'How many processes don''t have an Owner assigned in Current State?'
WHERE [ID] = 181;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.ID 	,PR.Title FROM Nodes PR JOIN TransactionStates T ON T.ID = PR.TransactionStateId WHERE T.[Key] = ''DAY_ONE'' 	AND PR.NodeTypeId = 3 	AND NOT EXISTS  				(SELECT 1 FROM [NodesToDispositionsForDispositionNew] D WHERE D.NodeId = PR.ID)', [SuggestionText] = N'List processes that don''t have Disposition assigned in Day 1 state.'
WHERE [ID] = 182;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM Dispositions d', [SuggestionText] = N'List the Disposition options available.'
WHERE [ID] = 183;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [ProcessGroup] ,COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) [Enablers Count] FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 2 GROUP BY N.Title ORDER BY [Enablers Count] DESC', [SuggestionText] = N'How many enablers are associated with each Process Group?'
WHERE [ID] = 184;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT D.Title [Disposition] 	,COUNT(SD.SystemId) [SystemCount] FROM Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID GROUP BY D.Title', [SuggestionText] = N'List the total number of systems by disposition.'
WHERE [ID] = 185;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT PR.Title [Process] , D.DispositionId FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId  	LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 	AND D.NodeId IS NULL 	AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'Can you please list down all Day 1 processes where no disposition has been tagged?'
WHERE [ID] = 186;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT 	N.Title [Process]	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 3 GROUP BY N.Title HAVING COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) = 0', [SuggestionText] = N'Can you please list all processes with no Enablers?'
WHERE [ID] = 187;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PR.Title as MissingInDay1 FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''CURRENT_STATE'' EXCEPT SELECT 	PR.Title [Process] FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = ''DAY_ONE''', [SuggestionText] = N'Can you please compare the Current state & day 1 operating model and list all processes which are missing in Day1 as compared to current state?'
WHERE [ID] = 188;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT A.Title Enabler, ''Asset'' as Category	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID LEFT JOIN [Assets] A ON A.ID = NA.AssetsId WHERE A.Title IS NOT NULL UNION ALL SELECT DISTINCT F.Title Enabler, ''Facility'' as Category FROM Nodes N LEFT JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID LEFT JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE F.Title IS NOT NULL  UNION ALL SELECT DISTINCT S.Title Enabler , ''System'' as Category FROM Nodes N LEFT JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID LEFT JOIN [Systems] S ON S.ID = NS.SystemsId WHERE S.Title IS NOT NULL  UNION ALL SELECT DISTINCT T.Title Enabler	, ''TPA'' as Category FROM Nodes N LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID LEFT JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId WHERE T.Title IS NOT NULL ', [SuggestionText] = N'What Enablers are we tracking for this project?'
WHERE [ID] = 189;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# Systems present in this functional OP model] FROM Systems s', [SuggestionText] = N'How many Systems are there in this functional op model?'
WHERE [ID] = 190;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Count(ID) AS [# TPAs present in this functional OP model] FROM ThirdPartyAgreements tpa', [SuggestionText] = N'How many TPAs are there in this functional op model?'
WHERE [ID] = 191;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ST.Title AS SystemType, COUNT(S.ID) [# Systems by Type] FROM Systems S LEFT JOIN SystemTypes ST ON ST.ID = S.TypeId WHERE S.TypeId IS NOT NULL GROUP BY ST.Title', [SuggestionText] = N'List the number of Systems by Type.'
WHERE [ID] = 192;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT O.Title AS Owners, Count(*) AS [# TPAs by Ownership] FROM ThirdPartyAgreements TP LEFT JOIN Owners O ON O.ID = TP.OwnerID WHERE TP.OwnerID IS NOT NULL GROUP BY O.Title', [SuggestionText] = N'List the number of TPAs by Ownership.'
WHERE [ID] = 193;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [ProcessGroups With No Process] FROM Nodes N WHERE N.nodetypeid = 2 AND ID NOT IN (SELECT ns.NodeParentId FROM Nodes ns)', [SuggestionText] = N'List down all process groups with no process within them.'
WHERE [ID] = 194;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(P.[ID]) AS [Number of Process across Op Model] FROM Nodes P     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = ''Process''', [SuggestionText] = N'List the number of processes across op models.'
WHERE [ID] = 195;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog opma WHERE Modified >= DATEADD(hh, -1, GETDATE())', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List history of changes to the op model in the past one hour.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 196;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog opma WHERE FieldImpacted = ''Owner''       AND CAST(Modified AS DATE) = CAST(GETDATE() AS DATE)', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List the history of changes to Ownership in the op model today.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 197;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog opma WHERE Title = ''Deleted''       AND DATEPART(wk, CAST(Modified AS DATE)) = DATEPART(wk, CAST(GETDATE() AS DATE))       AND YEAR(Modified) = YEAR(GETDATE())', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List the history of deletes in the op model this week.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 198;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title [State], N.Title AS OperatingModel FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId  WHERE N.NodeTypeId = 1', [SuggestionText] = N'List the functional operating models across different states.'
WHERE [ID] = 199;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title Opmodel, L.Title LiveNote, Note FROM OperatingModelLiveNotes L LEFT JOIN Nodes N ON N.Id = L.NodeId', [SuggestionText] = N'Are there any Live Notes in this op model?'
WHERE [ID] = 200;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process FROM OperatingModelActivityLog OL  LEFT JOIN Nodes N ON N.ID = Ol.ObjectID WHERE OL.Title = ''Updated'' AND Object = ''Process'' AND (CAST(OL.Modified AS DATE) BETWEEN DATEADD(DAY, -7, CAST(GETDATE()AS DATE))  AND CAST(GETDATE() AS DATE))', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List down all processes which were updated since last 1 week.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 201;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT N.Title Process, OldValue, NewValue  FROM OperatingModelActivityLog PL  LEFT JOIN Nodes N ON N.ID = PL.ObjectID  WHERE Object = ''Process'' AND PL.Title = ''Updated'' AND FieldImpacted = ''Title'' AND N.TransactionStateId = 6', [SuggestionText] = N'List down all processes which have been renamed in Day 1 op model.'
WHERE [ID] = 202;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TOP 5     S.Title AS [Systems],     Count(NSS.NodesID) AS [ProcessCount] FROM Nodes N     LEFT JOIN [dbo].[NodesToSystemsForEnablerSystems] NSS         ON N.ID = NSS.NodesId     LEFT JOIN [dbo].[Systems] S         ON NSS.SystemsId = S.ID WHERE N.NodeTypeId = 3 GROUP BY S.Title ORDER BY Count(NSS.NodesID) DESC', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'Please provide top 5 systems that are linked to various processes.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 203;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [List of processes for CurrentState where ownership is not present] FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = ''CURRENT_STATE''   AND N.NodeTypeId = 3   AND N.ID NOT IN (     SELECT DISTINCT NTO.NodeId     FROM Nodes N1     LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null   )', [SuggestionText] = N'For Current State, list all processes that doesn''t have any ownership.'
WHERE [ID] = 204;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT PR.Title [Process] FROM Nodes PR     JOIN TransactionStates  S  ON S.ID = PR.TransactionStateId    LEFT JOIN  NodesToDispositionsForDispositionNew D             ON D.NodeId = PR.ID WHERE     PR.NodeTypeId = 3     AND D.NodeId IS NULL     AND S.[Key] = ''DAY_ONE''', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'For Day 1 Operating Models, list all processes that doesn''t have any dispositions.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 205;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes  n   WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,  nds.Title,   nds.NodeParentID, nds.NodeTypeId, HierId = HierId + 1     FROM Nodes nds, GetSelectedFunction  where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  , ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID     FROM     (SELECT * FROM PG_Hierarchy pgh WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT TOP 1     Functions AS [Function with highest number of processes] FROM (     SELECT Functions,            COUNT(ID) as [Process Count]     FROM ProcessCTE  tc   GROUP BY Functions ) A order by [Process Count] desc    ', [SuggestionText] = N'Which function has the highest number of processes?'
WHERE [ID] = 206;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Processes with Disposition as TSA] FROM   Nodes   N   LEFT JOIN     NodesToDispositionsForDispositionNew NTD             ON NTD.NodeId = N.ID     LEFT JOIN         Dispositions  D ON NTD.DispositionId = D.ID WHERE     D.Title = ''TSA''     AND N.NodeTypeId = 3', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List down all Processes which have their disposition set as TSA.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 207;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title as [List of Processes with No Disposition] FROM Nodes N WHERE N.NodeTypeId=3 AND N.ID NOT IN (SELECT NodeId FROM NodesToDispositionsForDispositionNew ndd)', [SuggestionText] = N'List down all processes with no Disposition assigned.'
WHERE [ID] = 208;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(1)  [No. of Processes] FROM Nodes PR JOIN NODES P ON PR.NodeParentID = P.ID WHERE PR.NodeTypeId = 3 AND P.Title = ''{FunctionName}''', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'How many processes are there in the IT function?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 209;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  PR.Title [Process] , COUNT(DISTINCT D.DispositionId) [DispostionCount] FROM Nodes PR JOIN NODES P ON PR.NodeParentID = P.ID LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 AND P.Title = ''COMMERCIAL'' GROUP BY PR.Title HAVING COUNT(DISTINCT D.DispositionId) > 1', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List processes that have more than 1 disposition in IT.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 210;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.NodeTypeId,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ), ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID AS [ProcessID]     FROM     (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT ISNULL(Geo.Title, ''Not Assigned'') AS [Geographic Coverages],        COUNT(P.ProcessID) AS [Total Number of Process in Real Estate] FROM ProcessCTE P     LEFT JOIN ProcessAttributes PA         ON P.ProcessID = PA.NodeId     LEFT JOIN GeographicCoverages Geo         ON PA.GeographicCoverageId = Geo.ID WHERE P.Functions =''{FunctionName}'' GROUP BY Geo.Title', [SuggestionText] = N'What is total number of processes in Real Estate grouped by geographic coverage?'
WHERE [ID] = 211;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,            HierId = HierId + 1     FROM Nodes nds,          PG_Hierarchy     WHERE nds.NodeParentID = PG_Hierarchy.id    ) SELECT DISTINCT      F.Title AS [Functions],     SF.[Title] AS  [Subfunctions] FROM (SELECT * FROM PG_Hierarchy pg WHERE HierId = 2) F     LEFT JOIN     (SELECT * FROM PG_Hierarchy pg WHERE HierId = 3) SF         ON F.ID = SF.NodeParentID ORDER BY 1,          2', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'List all functions and sub-functions for functional operating model [Name].', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 212;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     O.Title     AS [Process Owner],     COUNT(N.ID) AS [Process Distribution] FROM     Nodes      N     LEFT JOIN         Owners O             ON N.OwnerId = O.ID WHERE     N.NodeTypeId = 3 GROUP BY     O.Title ', [SuggestionText] = N'Provide process owner distribution for my project.'
WHERE [ID] = 213;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes  nd   WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,            HierId = HierId + 1     FROM Nodes nds,          PG_Hierarchy     WHERE nds.NodeParentID = PG_Hierarchy.id    ) SELECT DISTINCT      SF.[Title] AS  [Subfunctions] FROM (SELECT * FROM PG_Hierarchy pg WHERE HierId = 2) F     LEFT JOIN     (SELECT * FROM PG_Hierarchy pg WHERE HierId = 3) SF         ON F.ID = SF.NodeParentID WHERE F.Title=''{FunctionName}'' ORDER BY 1', [SuggestionText] = N'List all sub-functions for Finance.'
WHERE [ID] = 214;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.NodeTypeId,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  ,        ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID AS [ProcessID]     FROM     (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT P.Processes,        ISNULL(S.Title, ''Not Assigned'') AS [Systems],        ISNULL(TPA.Title, ''Not Assigned'') AS [Third Party Agreements] FROM ProcessCTE P     LEFT JOIN NodesToThirdPartyAgreementsForEnablerTpa NTPA         ON P.ProcessID = NTPA.NodesId     LEFT JOIN ThirdPartyAgreements TPA         ON NTPA.ThirdPartyAgreementsId = TPA.ID     LEFT JOIN NodesToSystemsForEnablerSystems NSys         ON NSys.NodesId = P.ProcessID     LEFT JOIN Systems S         ON NSys.SystemsId = S.ID', [SuggestionText] = N'List all details for processes and systems, third party agreements linkages.'
WHERE [ID] = 215;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT A.Title Assest,        P.Title LinkedProcess FROM Assets A     LEFT JOIN ProcessAssetLinks PA         ON PA.AssetId = A.ID     LEFT JOIN Nodes P         ON P.ID = PA.ProcessId     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = ''Process''', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List the Assets and their linked processes.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 216;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title OpModel, BP.Title  EndToEndProcess FROM BusinessProcesses BP  LEFT JOIN Nodes N ON N.ID = BP.NodeId  WHERE N.NodeTypeId = 1', [SuggestionText] = N'Are there any end-to-end business processes in this op model?'
WHERE [ID] = 217;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL           AND TransactionStateID = 8     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ) SELECT N.Title [Function],        NTSS.Title AS [Field Status],        OPS.Title AS [Op Status] FROM NodeTrackers NT     LEFT JOIN NodeTrackerStatuses NTS         ON NTS.NodeTrackerID = NT.ID     JOIN     (SELECT * FROM GetSelectedFunction gsf WHERE HierId = 2 and Title = ''HR'') N         ON N.ID = NT.NodeId     LEFT JOIN NodeTrackerStatusFields NTSS         ON NTSS.ID = NTS.NodeTrackerStatusFieldId     LEFT JOIN OpStatuses OPS         ON OPS.ID = NTS.NodeTrackerStatusStatusId', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'In the Progress Tracker, what is the current status of HR?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 218;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes nd    WHERE NodeParentID IS NULL           AND TransactionStateID = 6     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM Nodes ROOT     WHERE ROOT.ID in (select ID from GetSelectedFunction gsf where HierId = 2 and Title = ''Finance'' )     UNION ALL     SELECT CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    ) SELECT COUNT(*) AS [Process with multiple dispositions for Finance] FROM PG_Hierarchy pg WHERE NodeTypeId = 3       AND ID IN (                     SELECT NodeID                     FROM                     (                         SELECT NodeId,                                Count(DispositionID) As [Disposition Count]                         FROM NodesToDispositionsForDispositionNew   ndf     GROUP BY NodeId                         HAVING Count(DispositionID) > 1                     ) a                 )', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'In Finance, how many processes have multiple dispositions?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 219;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Process which doesn''''t have ownership] FROM     Nodes                 N     JOIN         TransactionStates T             ON T.ID = N.TransactionStateId WHERE     OwnerId IS NULL     AND N.NodeTypeId = 3', [SuggestionText] = N'List down all processes with no Owners assigned.'
WHERE [ID] = 220;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes with more than one Disposition] FROM Nodes N WHERE N.NodeTypeId = 3       AND N.ID IN ( SELECT NodeID   FROM   (    SELECT NodeId, COUNT(DispositionID) AS [Disposition Count]                           FROM NodesToDispositionsForDispositionNew    ndf                       GROUP BY NodeId                           HAVING COUNT(DispositionID) > 1                       ) a                   ) ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List down all processes with more than one Disposition associated with them.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 221;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT ID,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes  nd   WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.ID,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy (NodeParentID, ID, Title, Parent, ParentID, TransactionStateID) AS (SELECT ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.TransactionStateID     FROM Nodes ROOT     WHERE ROOT.ID IN (                          SELECT ID                          FROM GetSelectedFunction         gsf                 WHERE HierId = 2                                AND Title = ''{FunctionName}''                                AND TransactionStateId = 6                      )     UNION ALL     SELECT CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.TransactionStateId     FROM PG_Hierarchy PARENT,          Nodes CHILD     WHERE PARENT.id = CHILD.NodeParentID    ) SELECT Title AS [List of Processes Associated with Legal Function] FROM PG_Hierarchy pgh ORDER BY ID,          title DESC ', [SuggestionText] = N'Can you please list all processes associated with Legal function?'
WHERE [ID] = 222;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of all Processes associated with APAC] FROM     Nodes       N     LEFT JOIN         Regions R             ON N.CountryRegionID = R.ID WHERE     n.NodeTypeId = 3     AND R.Title = ''{Region}''', [SuggestionText] = N'Can you please list all processes associated with APAC?'
WHERE [ID] = 223;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nd WHERE NodeParentID IS NULL  UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes FROM (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT P.Functions, A.Processes  FROM (SELECT DISTINCT [Processes]  		FROM ProcessCTE 	pte	GROUP BY Processes  		HAVING COUNT(DISTINCT [Functions] ) > 1) A  	LEFT JOIN ProcessCTE P ON P.Processes = A.Processes ', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Can you please list all processes with same names across different functions?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 224;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     [List of Processes with same name] FROM     (         SELECT             N.Title  AS [List of Processes with same name],             Count(1) AS [Repeat Count]         FROM             Nodes N         WHERE             N.NodeTypeId = 3         GROUP BY             N.Title         HAVING             COUNT(*) > 1     ) a ORDER BY     1 ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'Can you please list all processes with same name?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 225;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes tagged as ParentCo in Current State with Disposition set as TSA ] FROM Nodes N     LEFT JOIN NodesToOwnersForOwnerNew NTO         on N.ID = NTO.NodeId     LEFT JOIN Owners O         ON O.ID = NTO.OwnerId     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID     LEFT JOIN TransactionStates TS         ON N.TransactionStateId = TS.ID     LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND TS.[Key] = ''CURRENT_STATE''       AND O.Title = ''Parent Co''       AND D.Title = ''TSA''', [SuggestionText] = N'Can you please list the processes which are tagged as ''ParentCo'' in Current state having disposition set as ''TSA''?'
WHERE [ID] = 226;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Systems not tagged in any process] FROM     Systems s WHERE     ID NOT IN (                   SELECT DISTINCT                       SystemsId                   FROM                       Nodes                               N                       LEFT JOIN                           NodesToSystemsForEnablerSystems NSS                               ON N.ID = NSS.NodesId  					  LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId                    WHERE T.Title= ''Day 1'' AND                        N.NodeTypeId = 3               )', [SuggestionText] = N'can you please list all systems which are not tagged to any process in Day 1 op model?'
WHERE [ID] = 227;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     ISNULL(ST.Title, ''System Type Not Assigned'') AS [SystemsType],     S.Title                                      AS [Systems] FROM     Systems         S     LEFT JOIN         SystemTypes ST             ON S.TypeId = ST.ID', [SuggestionText] = N'Can you please provide of all systems based upon their type?'
WHERE [ID] = 228;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nd  WHERE NodeParentID IS NULL  UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF LEFT JOIN (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number for Multiple Deposition]  FROM ProcessCTE p WHERE ID IN ( SELECT NodeID FROM ( SELECT NodeId,    Count(DispositionID) As [Disposition Count] FROM NodesToDispositionsForDispositionNew ndn GROUP BY NodeId HAVING Count(DispositionID) > 1 ) a ) GROUP BY [Functions] ORDER BY  COUNT(*) DESC', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Which function has the highest number of multi disposition processes?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 229;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes n   WHERE NodeParentID IS NULL   UNION ALL         SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   WHERE nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2    UNION ALL         SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  WHERE  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS (  SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy pg WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy gg WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number of Live Without]  FROM ProcessCTE pp WHERE ID IN (	SELECT NodeId 				FROM NodesToDispositionsForDispositionNew ND  				LEFT JOIN Dispositions D ON D.ID = DispositionID  				WHERE D.Title = ''Live without''			 				) GROUP BY [Functions] ORDER BY  COUNT(*) DESC', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'which function has the highest number of ''Live without''?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 230;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID, NodeTypeId, HierId = 1 FROM Nodes nd  WHERE NodeParentID IS NULL  UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,  nds.NodeTypeId,  HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy([Functions],NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.Title [Functions],ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM GetSelectedFunction ROOT WHERE HierId = 2       UNION ALL        SELECT  PARENT.[Functions],CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  ), ProcessCTE AS ( SELECT DISTINCT P.Functions, P.Title Processes, P.ID  FROM (SELECT * FROM PG_Hierarchy pp WHERE NodeTypeId = 2) SF 	LEFT JOIN (SELECT * FROM PG_Hierarchy pp WHERE NodeTypeId = 3) P ON P.NodeParentID = SF.ID WHERE P.Title IS NOT NULL  )   SELECT Top 1 [Functions] AS [Function with Highest Number of Processes tagged to them] , COUNT(*)  [No of Processes] 				FROM ProcessCTE 	ppt	GROUP BY [Functions] 				ORDER BY  COUNT(*) DESC    ', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Which function has the highest number of processes tagged to them? and how many?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 231;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH PG_Hierarchy AS (SELECT id,            Title,            NodeParentID,            TransactionStateID,            HierId = 1     FROM Nodes   n  WHERE NodeParentID IS NULL     UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            nds.TransactionStateId,             HierId = HierId + 1     FROM Nodes nds,          PG_Hierarchy     WHERE nds.NodeParentID = PG_Hierarchy.id    ),       ProcessCTE AS (SELECT DISTINCT          F.Title AS [Functions],         f.id AS FunctionID     FROM     (SELECT * FROM PG_Hierarchy pp WHERE HierId = 2) F         LEFT JOIN         (SELECT * FROM PG_Hierarchy gg WHERE HierId = 3) SF             ON F.ID = SF.NodeParentID    ) SELECT Top 1     Functions as [Function with Highest Number of Enablers],     [Enablers Count] FROM (     SELECT P.Functions,            COUNT(DISTINCT TPA.ID) + COUNT(DISTINCT S.ID) + COUNT(DISTINCT Asset.ID) + COUNT(DISTINCT Roles.ID) AS [Enablers Count]     FROM ProcessCTE P         LEFT JOIN NodesToThirdPartyAgreementsForEnablerTpa NTPA           ON P.FunctionID = NTPA.NodesId         LEFT JOIN ThirdPartyAgreements TPA             ON NTPA.ThirdPartyAgreementsId = TPA.ID          LEFT JOIN NodesToSystemsForEnablerSystems NSys              ON NSys.NodesId = P.FunctionID         LEFT JOIN Systems S             ON NSys.SystemsId = S.ID         LEFT JOIN NodesToAssetsForEnablerAssets NAsset              ON NAsset.NodesId = P.FunctionID         LEFT JOIN Assets Asset             ON Asset.ID = NAsset.AssetsId          LEFT JOIN NodesToRolesForEnablerRoles NRole --Roles              ON NAsset.NodesId = P.FunctionID         LEFT JOIN OrgRolesMaster Roles             ON Roles.ID = NRole.RolesId     GROUP BY P.Functions ) A ORDER BY [Enablers Count] DESC', [SuggestionText] = N'Which function has the highest number of enablers tagged to them? and how many?'
WHERE [ID] = 232;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH  GetSelectedFunction AS  (  SELECT id,Title,NodeParentID,  HierId = 1 FROM Nodes n WHERE NodeParentID IS NULL    UNION ALL        SELECT    nds.id,nds.Title,nds.NodeParentID,    HierId = HierId+1 FROM Nodes nds, GetSelectedFunction   where nds.NodeParentID = GetSelectedFunction.id )  ,PG_Hierarchy(NodeParentID, ID,Title,Parent,ParentID,NodeTypeId) AS  (  SELECT ROOT.NodeParentID,ROOT.id,ROOT.Title,ROOT.Title,ROOT.ID AS ParentID, ROOT.NodeTypeId FROM Nodes ROOT   WHERE ROOT.ID in (select ID from GetSelectedFunction g where HierId=2 and Title=''Finance & Accounting'')       UNION ALL        SELECT  CHILD.NodeParentID,CHILD.ID,CHILD.Title,PARENT.TITLE,PARENT.ID,CHILD.NodeTypeId  FROM PG_Hierarchy PARENT ,Nodes   CHILD  where  PARENT.id=CHILD.NodeParentID  )   SELECT PG.Title, OldValue, NewValue  FROM PG_Hierarchy PG  JOIN (SELECT PL.ObjectID, OldValue, NewValue 			FROM OperatingModelActivityLog PL 			WHERE Object = ''Process'' AND Title = ''Updated'' AND PL.Modified = ( 			SELECT  Max(Modified) Modified FROM OperatingModelActivityLog  	op		WHERE ObjectID IN (SELECT ID FROM PG_Hierarchy PG WHERE NodeTypeId=3 )  			AND Object = ''Process'' AND Title = ''Updated'')) A ON A.ObjectID = PG.ID', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Which process within Finance has been updated most recently and what was the updates?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 233;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     N.Title AS [List of Process Associated with Workplan] FROM     Nodes                       N     LEFT JOIN         NodesToWorkPlansForTask NWP             ON N.ID = NWP.NodeId     LEFT JOIN         WorkPlan                WP             ON NWP.WorkPlanId = WP.ID WHERE     N.NodeTypeId = 3', [SuggestionText] = N'How many processes have been associated with a workplan item?'
WHERE [ID] = 234;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(DISTINCT n.ID) AS [No of Process having 2 owners or Dispositions] FROM Nodes n LEFT JOIN (     SELECT NodeId     FROM NodesToDispositionsForDispositionNew  nn   GROUP BY NodeId     HAVING COUNT(DispositionID) = 2 ) d ON n.ID = d.NodeId LEFT JOIN (     SELECT NodeID     FROM NodesToOwnersForOwnerNew  no   GROUP BY NodeID     HAVING COUNT(OwnerId) = 2 ) o ON n.ID = o.NodeID WHERE n.NodeTypeId = 3 AND (d.NodeId IS NOT NULL OR o.NodeID IS NOT NULL)', [SuggestionText] = N'How many processes have 2 owners or dispositions? '
WHERE [ID] = 235;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	COUNT(SD.SystemId) [No of Systems are dispositioned rebuild] FROM  Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID WHERE D.Title = ''Rebuild''', [SuggestionText] = N'How many systems are dispositoned Rebuild?'
WHERE [ID] = 236;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT O.Title [Owners], COUNT(N.ID) [No of Processes]  FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID  LEFT JOIN NodesToOwnersForOwnerNew NOS ON NOS.NodeId = N.ID  LEFT JOIN Owners O ON O.ID = NOS.OwnerId  WHERE NT.Title = ''Process''  GROUP BY O.Title', [SuggestionText] = N'Provide a count of all processes by owner.'
WHERE [ID] = 237;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  	R.Title Regions 	, COUNT(D.DispositionId) [Count of Disposition]  FROM NodesToDispositionsForDispositionNew D     JOIN Nodes N ON D.NodeId = N.ID 	JOIN TransactionStates S ON S.ID = N.TransactionStateId  	LEFT JOIN NodeTypes NT ON NT.ID = N.NodeTypeId  	LEFT JOIN Regions R ON R.ID = N.CountryRegionID  WHERE NT.Title = ''Process''  	AND S.[Key] = ''DAY_ONE'' GROUP BY R.Title', [SuggestionText] = N'Show me the count of dispositions in Day 1 model by assigned region.'
WHERE [ID] = 238;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Processes with no owner assigned] FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process''    AND N.ID NOT IN (     SELECT DISTINCT NTO.NodeId     FROM Nodes N1     LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	WHERE NTO.NodeId is not null   )', [SuggestionText] = N'List all processes that do not have an owner assigned.'
WHERE [ID] = 239;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title AS [List of Teams with Disposition set as Unidentified] FROM Nodes N     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID 	LEFT JOIN  NodesToProjectTeamsForProjectTeam NP 	    ON N.ID = NP.NodesId  	LEFT JOIN ProjectTeams PT 	    ON PT.ID = NP.ProjectTeamsId      LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND D.Title = ''Unidentified''', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'Which teams have processes that are disposition ''Unidentified''?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 240;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Processes with total headcount greater than 0] FROM Nodes N     LEFT JOIN vwHeadcount H         ON H.NodeId = N.ID     LEFT JOIN Nodetypes NT         ON NT.ID = N.NodeTypeId GROUP BY N.Title HAVING SUM(ISNULL(H.TotalHeadCount, 0)) > 0', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List all processes with total headcount greater than 0.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 241;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title [Facilities in North America that are leased or owned]   FROM Facilities F  LEFT JOIN FacilityOccupancyTypes FT ON FT.ID = F.FacilityOccupancyTypeID  LEFT JOIN Countries C ON C.ID = F.CountryID  LEFT JOIN Regions R ON R.ID = C.CountryRegionID WHERE FT.Title IN (''Leased'', ''Owned'') AND R.Title = ''North America''', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List all Facilities in North America that are leased or owned.'
WHERE [ID] = 242;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(N.ID) [No of Proccesses to which TPA is assigned] FROM NodesToThirdPartyAgreementsForEnablerTpa NTP  INNER JOIN Nodes N ON N.ID = NTP.NodesId  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process''', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many processes have a TPA assigned to them? '
WHERE [ID] = 243;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Enabler [Enabler with linked processes] FROM( SELECT DISTINCT A.Title Enabler 	 FROM Nodes N LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID INNER JOIN [Assets] A ON A.ID = NA.AssetsId  WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT F.Title Enabler FROM Nodes N LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID INNER JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT S.Title Enabler  FROM Nodes N  LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID INNER JOIN [Systems] S ON S.ID = NS.SystemsId WHERE NTT.Title = ''Process''    UNION ALL  SELECT DISTINCT T.Title Enabler	 FROM Nodes N  LEFT JOIN NodeTypes NTT ON NTT.ID = N.NodeTypeId  INNER JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID INNER JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId  WHERE NTT.Title = ''Process''   ) A', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'Show me all enablers that have a linked process.'
WHERE [ID] = 244;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title AS [List of Processes with Disposition set as TSA ] FROM Nodes N     LEFT JOIN NodeTypes NT         ON N.NodeTypeId = NT.ID     LEFT JOIN NodesToDispositionsForDispositionNew NTD         ON N.ID = NTD.NodeId     LEFT JOIN Dispositions D         on NTD.DispositionId = D.ID WHERE NT.Title = ''Process''       AND D.Title = ''TSA''', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List all processes that have the disposition TSA.'
WHERE [ID] = 245;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(N.ID) AS [No of Processes are Live Without]  FROM Nodes N  LEFT JOIN NodeTypes NT ON N.NodeTypeId = NT.ID WHERE NT.Title = ''Process'' AND N.ID IN (	SELECT NodeId 				FROM NodesToDispositionsForDispositionNew ND  				LEFT JOIN Dispositions D ON D.ID = DispositionID  				WHERE D.Title = ''Live without''			 				) ', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How many processes are Live without? '
WHERE [ID] = 246;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [Systems being used by Project Team and Process Group] FROM     Systems s WHERE  ID IN (                   SELECT DISTINCT                       SystemsId                   FROM                       Nodes N                       LEFT JOIN NodesToSystemsForEnablerSystems NSS                        ON N.ID = NSS.NodesId  					  LEFT JOIN  NodesToProjectTeamsForProjectTeam NP 					  ON N.ID = NP.NodesId  					  LEFT JOIN NodeTypes NT ON NT.ID = N.NodeTypeId                    WHERE  NT.Title IN (''ProcessGroup'')               )	', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'List out the systems being used by Project Team and Process Group.'
WHERE [ID] = 247;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT N.Title [Process groups are not started on Followup Calls for Current State] FROM Nodes N     LEFT JOIN Nodetypes NT         ON NT.ID = N.NodeTypeId     LEFT JOIN NodeTrackers NTC         ON NTC.NodeID = N.ID     LEFT JOIN NodeTrackerStatuses NTS         ON NTS.NodeTrackerID = NTC.ID     LEFT JOIN TransactionStates T         ON T.ID = N.TransactionStateID WHERE N.NodeOnTracker = 1       AND NT.Title = ''Process Group''       AND T.[Key] = ''CURRENT_STATE''       AND N.ID NOT IN (                           SELECT N.ID ProcessGroupID                           FROM Nodes N                               LEFT JOIN Nodetypes NT                                   ON NT.ID = N.NodeTypeId                               LEFT JOIN NodeTrackers NTC                                   ON NTC.NodeID = N.ID                               LEFT JOIN NodeTrackerStatuses NTS                                   ON NTS.NodeTrackerID = NTC.ID                               LEFT JOIN TransactionStates T                                   ON T.ID = N.TransactionStateID                           WHERE N.NodeOnTracker = 1                                 AND NT.Title = ''Process Group''                                 AND T.[Key] = ''CURRENT_STATE''                                 AND NTS.Title = ''FollowUp Call''                       )', [AppAffinity] = N'CE4-OM', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Which process groups are not started on Followup Calls for Current State?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 248;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N';WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            HierId = 1     FROM Nodes n    WHERE NodeParentID IS NULL      UNION ALL     SELECT nds.id,            nds.Title,            nds.NodeParentID,            HierId = HierId + 1     FROM Nodes nds,          GetSelectedFunction     where nds.NodeParentID = GetSelectedFunction.id    ) SELECT O.Title [Client Owner for HR] FROM GetSelectedFunction N 	LEFT JOIN NodesToOwnersForOwnerNew NOS ON NOS.NodeId = N.ID  	LEFT JOIN Owners O ON O.ID = NOS.OwnerId  WHERE N.HierId = 2 AND N.Title = ''HR''', [AppAffinity] = N'CE4-OM', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Who is the Client owner for HR?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 249;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT F.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ', [SuggestionText] = N'Show me the count of TSAs by function.'
WHERE [ID] = 250;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT SF.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'Show me the count of TSAs by sub function.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 251;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ', [SuggestionText] = N'Give me the list of TSAs by Provider.'
WHERE [ID] = 252;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT LE.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'Give me the list of TSAs by Receiver.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 253;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'Can you provide me list of TSAs by phases?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 254;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT T.Title, T.Duration as ''Duration in Month'' from TSAItems T where T.Duration is not null ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'Show me the breakdown of TSAs by duration.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 255;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title, Count(1) as ''Number Of TSAs'' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'How many TSAs does each team have?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 256;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    TST.Title as [Phase],    COUNT(TC.ID) AS [# TSAs across different phases] FROM    TSAItems TC    LEFT JOIN TSAPhases TST ON TC.PhaseID = TST.ID  Group BY    TST.Title ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List the number of TSAs across different phases.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 257;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    T.Title PendingTSAItems  FROM    TSAItems T    JOIN TSAStatuses TS ON T.TSAItemTSAStatusId = TS.ID  WHERE    T.AuthorId = ''{Username}''    AND TS.[key] = ''ACTIVE'' ', [SuggestionText] = N'How many pending TSA items do I have?'
WHERE [ID] = 258;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Title as [Billing Period Name],    DeadlineDate as [Contribution Deadlines]  FROM    TSABillingPeriods tb', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'In Cost Tracking, how is my billing periods setup?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 259;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT    Title AS [TSA Phases]  FROM TSAPhases tp', [SuggestionText] = N'What are the different TSA phases in my project?'
WHERE [ID] = 260;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ProviderLegalEntityId = L.ID where  L.ServiceLocation is not null UNION  SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ReceiverLegalEntityId = L.ID   where  L.ServiceLocation is not null ', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'List the TSA service locations in my project.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 261;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs],     s.Title   AS [TSA Statuses] FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID     LEFT JOIN         Functions   F             ON TSA.FunctionId = F.ID WHERE     F.Title = ''{FunctionName}''', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'List the TSAs for the Finance fucntion with their status.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 262;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'DECLARE @UserProfiles int; SELECT    @UserProfiles = ID  FROM    UserProfiles up  WHERE    EMail = ''{Username}'' ; WITH TEMPCTE AS (   SELECT      FunctionId,      SubFunctionId    FROM      TSAReviewers  tr  WHERE      ProviderApproverId = @UserProfiles      OR RecipientApproverId = @UserProfiles )  SELECT    TSA.Title as [List of TSA to be reviewed] FROM    TSAItems TSA    JOIN TEMPCTE ON TSA.FunctionId = TEMPCTE.FunctionId    AND tsa.SubFunctionId = TEMPCTE.SubFunctionId    JOIN TSAPhases TP ON TSA.PhaseId = TP.ID  WHERE    TP.[Key] IN (''ALIGNMENT'', ''APPROVAL''); ', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'List the TSAs that I need to review.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 263;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT   Title DefaultCurrency FROM  TSACurrencies tc WHERE CurrencyCode =''{CurrencyCode}''', [SuggestionText] = N'What is the default currency setting?'
WHERE [ID] = 264;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT   CurrencyExchangeRateToUSD  FROM  TSACurrencies t WHERE CurrencyCode ={CurrencyCode}', [SuggestionText] = N'List the exchange rates we setup for the default currency on my project.'
WHERE [ID] = 265;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    DISTINCT F.Title as [Functions To Be Configured] FROM    TSAReviewers TR    LEFT JOIN Functions F on F.ID = TR.FunctionId ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'In Reviewer Assignments, what functions require to be configured properly?', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 266;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    DISTINCT SF.Title as [SubFunctions To Be Configured] FROM    TSAReviewers TR    LEFT JOIN SubFunctions SF on SF.ID = TR.SubFunctionId ', [SuggestionText] = N'In Reviewer Assignments, what sub-functions need to be configured for my project?'
WHERE [ID] = 267;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT CASE WHEN SUM(DeadlineReminder) > 0 THEN ''Yes, email reminder before the deadline is setup'' ELSE ''No, email reminder before the deadline is setup'' END AS [Send an email reminder before the deadline?] FROM( SELECT     Title,     CAST( DeadlineReminder AS INT) DeadlineReminder FROM     TSABillingPeriods tb WHERE     DeadlineReminder = 1) A', [SuggestionText] = N'In Billing Periods, have we setup email reminder beofre deadline?'
WHERE [ID] = 268;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title        AS [Billing Period Name],     DeadlineDate AS [Contribution Deadlines] FROM     TSABillingPeriods t', [SuggestionText] = N'List the billing periods with their Contribution deadlines.'
WHERE [ID] = 269;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT CASE WHEN SUM(SendEmailImmediately) > 0 THEN ''Yes, notifying data contributors by email '' ELSE ''No, not notifying data contributors by email '' END AS [Notify data contributors by email ?] FROM( SELECT     Title                AS [Billing Period Name],     CAST(SendEmailImmediately AS INT) SendEmailImmediately FROM     TSABillingPeriods tb WHERE     SendEmailImmediately = 1) A', [SuggestionText] = N'Are we not notifying data contributors by email for any billing periods?'
WHERE [ID] = 270;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     f.title   AS [Functions],     (t.TSAItemFTECostForServiceDurationUSD + t.MarkupOnFTECostUSD + t.ExternalMaterialCostUSD) AS [TSA Costs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND t.Duration IS NOT NULL', [SuggestionText] = N'What my TSA costs by  function?'
WHERE [ID] = 271;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs] FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID WHERE          S.Title<>''{TSAStatus}''', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'How many TSAs left to sign?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 272;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     COUNT(TSA.ID) AS [# TSAs signed by Function],     F.Title       AS Functions FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID     LEFT JOIN         Functions   F             ON TSA.FunctionId = F.ID WHERE     S.Title = ''{TSAStatus}'' GROUP BY     F.Title', [SuggestionText] = N'List number of signed TSAs by function.'
WHERE [ID] = 273;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     [year]                               AS [By Year],     ROUND(SUM(fte_cost_per_month), 2)    AS [TSA FTE Cost for Selected Year],     ROUND(SUM(nonfte_cost_per_month), 2) AS [TSA Non-FTE Cost for Selected Year] FROM     vwTSACostWaterfall wf WHERE      [year] = ''{Year}'' GROUP BY     [year]', [SuggestionText] = N'Break down the total TSA cost for this year by FTE and Non-FTE cost.'
WHERE [ID] = 274;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [TSA Stages] FROM     TSAPhases t ORDER BY     Ordinal', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List out stages that are preconfigured on this instance for TSA lifecycle.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 275;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Stg.Title AS [Stage Name],        COUNT(TSA.ID) AS [# TSAs Identified] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] = ''IDENTIFICATION'' GROUP BY Stg.Title', [SuggestionText] = N'How many TSA have been identified?'
WHERE [ID] = 276;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     Title AS [TSAs that have duration for more than 18 months] FROM     TSAItems ts WHERE     Duration > 18', [SuggestionText] = N'List out TSAs that have duration for more than 18 months.'
WHERE [ID] = 277;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     TSA.Title AS [TSAs that are ready to be approved] FROM     TSAItems      TSA     LEFT JOIN         TSAPhases Stg             ON TSA.PhaseId = Stg.ID WHERE     Stg.[Key] IN ( ''ALIGNMENT'',''APPROVAL'') ', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List out TSAs are that are ready to be approved.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 278;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     f.title  AS [Functions],     SUM((t.TSAItemFTECostForServiceDurationUSD + t.MarkupOnFTECostUSD + t.ExternalMaterialCostUSD) )AS [TSA Costs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND t.Duration IS NOT NULL GROUP BY  f.title', [SuggestionText] = N'What is the total of TSA cost by function?'
WHERE [ID] = 279;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Open Risks] FROM TSAItems TSA     LEFT JOIN RisksAndIssues RI         ON TSA.ID = RI.TSAItemId     LEFT JOIN Statuses S         ON RI.ProgressId = S.ID WHERE S.[Key] NOT IN ( ''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'',  ''ON_HOLD'')', [SuggestionText] = N'List out TSA with Open risks.'
WHERE [ID] = 280;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS [Buyer Side Reviewer for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.RecipientApproverID = UP.ID WHERE F.Title =''{FunctionName}''', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Who is the buy side reviewer for finance TSAs?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 281;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS [Buyer Side Reviewer for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.ProviderApproverId = UP.ID WHERE F.Title =''{FunctionName}''', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Who is the sell side reviewer for finance TSAs?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 282;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT UP.Title AS [Approver for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.RecipientApproverID = UP.ID WHERE F.Title = ''{FunctionName}''  UNION   SELECT UP.Title AS [Approver for Finance TSAs] FROM TSAReviewers TRev     LEFT JOIN Functions F         ON TRev.FunctionId = F.ID     LEFT JOIN UserProfiles UP         ON TRev.ProviderApproverId = UP.ID WHERE F.Title =''{FunctionName}''', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'Who is the approver for finance TSAs?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 283;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Behind Schedule Tasks Linked] FROM TSAItems TSA     LEFT JOIN Workplan WP         ON TSA.ID = WP.TSAItemId     LEFT JOIN Statuses S         ON WP.ProgressId = S.ID WHERE WP.WorkPlanTaskType = ''Task''       AND S.[Key] = ''BEHIND_SCHEDULE''', [SuggestionText] = N'List out TSAs with behind schedule tasks linked.'
WHERE [ID] = 284;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT f.title AS [Functions],        COUNT(t.ID) AS [TSAs Count],        (SUM(t.TSAItemFTECostForServiceDurationUSD) + SUM(t.MarkupOnFTECostUSD) + SUM(t.ExternalMaterialCostUSD)) AS [TSAs Costs] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE TSADisp.Title = ''rTSA (reverse TSA)''       AND s.title <> ''Canceled''       AND t.Duration IS NOT NULL GROUP BY f.title', [SuggestionText] = N'Show me the count and cost of reverse TSAs by function.'
WHERE [ID] = 285;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [TSA Items in Alignment phase for IT] FROM TSAItems TSA LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID WHERE Stg.[Key] = ''ALIGNMENT''       AND F.Title = ''{FunctionName}''', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'How many items are in the allignment phase for IT?', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 286;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [# TSA items in the repository which have been modified in the last 7 days] FROM TSAItems TSA     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND CAST(TSA.Modified AS DATE)       BETWEEN CAST(GETDATE() - 7 AS DATE) AND CAST(GETDATE() AS DATE) ', [SuggestionText] = N'How many items in the repository have been modified in the last 7 days?'
WHERE [ID] = 287;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(TSA.ID) AS [# TSA items in the repository which have been created in the last 5 days] FROM TSAItems TSA     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND CAST(TSA.Created AS DATE)       BETWEEN CAST(GETDATE() - 5 AS DATE) AND CAST(GETDATE() AS DATE) ', [SuggestionText] = N'How many new items s in the repository have been created in the last 5 days?'
WHERE [ID] = 288;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AVG(t.Duration) AS [Average Duration for IT TSAs],        (SUM(t.TSAItemFTECostForServiceDurationUSD) + SUM(t.MarkupOnFTECostUSD) + SUM(t.ExternalMaterialCostUSD)) AS [Cost for IT TSAs] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id WHERE s.title <> ''Canceled''       AND t.Duration IS NOT NULL       AND f.Title = ''IT'' GROUP BY f.title', [SuggestionText] = N'What is the average duration and cost for IT TSAs?'
WHERE [ID] = 289;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSAs with Behind Schedule / At Risk Tasks Linked] FROM TSAItems TSA     LEFT JOIN Workplan WP         ON TSA.ID = WP.TSAItemId     LEFT JOIN Statuses S         ON WP.WorkPlanTaskStatusId = S.ID WHERE WP.WorkPlanTaskType = ''Task''       AND S.[Key] IN (''BEHIND_SCHEDULE'',''AT_RISK'')', [SuggestionText] = N'Show me all TSAs that have a linked task that is At Risk or Behind Schedule.'
WHERE [ID] = 290;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSA Items that need review] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] IN ( ''ALIGNMENT'', ''APPROVAL'' )', [SuggestionText] = N'List all TSAs that need review.'
WHERE [ID] = 291;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title as [TSAs that need to be signed along with Item Owner], t.TSAItemPersonInCharge as [Item Owner] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]=''SIGNED''', [SuggestionText] = N'List all TSAs that need to be signed along with the item owner.'
WHERE [ID] = 292;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [TSAs and rTSAs that have a markup greater than 5%]    ,TSADisp.Title AS [TSA / rTSA] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     	LEFT OUTER JOIN 	    TSADay1Dispositions TSADisp  		    ON t.TSADay1DispositionId=TSADisp.ID WHERE         s.title <> ''Canceled'' 	  AND t.TSAItemMarkup >0.05', [SuggestionText] = N'Show me all TSAs and rTSAs that have a markup greater than 5%.'
WHERE [ID] = 293;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs are in a local currency that is not US dollar] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSACurrencies TSACurr         ON t.TSAItemLocalCurrencyId = TSACurr.ID     LEFT OUTER JOIN Currencies Curr         ON TSACurr.CurrencyID = Curr.ID WHERE Curr.Title <> ''USD ($)''       AND s.title <> ''Canceled''', [SuggestionText] = N'How many TSAs are in a local currency that is not US dollar?'
WHERE [ID] = 294;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title as [Inactive TSAs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''ACTIVE'' ', [SuggestionText] = N'List out all Inactive TSAs.'
WHERE [ID] = 295;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT t.Title as [TSAs that have duration less than 2 months] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''CANCELED'' AND t.Duration<2', [SuggestionText] = N'List All TSAs where the duration is less than 2 months.'
WHERE [ID] = 296;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT t.Title as [TSAs that have duration less than 2 months] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE s.[Key]<>''CANCELED'' AND t.Duration>10', [SuggestionText] = N'List all TSAs where the duration is more than 10 months.'
WHERE [ID] = 297;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs due in next 45days] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id WHERE CAST(t.TSAItemEndDate AS DATE)       BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE() + 45 AS DATE)       AND s.title <> ''Canceled''', [IsIncluded] = CAST(1 AS bit), [SuggestionText] = N'List All TSAs due in next 45days.', [VisibleToAssistant] = CAST(1 AS bit)
WHERE [ID] = 298;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [TSAs that have a markup above 1%] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.TSAItemMarkup >0.01', [SuggestionText] = N'List all TSAs where the markup is above 1%.'
WHERE [ID] = 299;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     t.Title AS [TSAs where Provider is not tagged] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id WHERE     s.title <> ''Canceled''     AND t.ProviderLegalEntityId IS NULL', [SuggestionText] = N'List all TSAs where provider is not tagged.'
WHERE [ID] = 300;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N' SELECT    t.Title AS [TSAs where Receiver is not tagged] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.ReceiverLegalEntityId IS NULL', [SuggestionText] = N'List all TSAs where receiver is not tagged.'
WHERE [ID] = 301;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [Mixed Price Type TSAs] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id   	LEFT OUTER JOIN 	PriceTypes Pric  	        ON t.TSAItemPriceTypeID=Pric.ID WHERE         s.title <> ''Canceled'' 	  AND Pric.Title=''Mixed price''', [SuggestionText] = N'List all mixed price type TSAs.'
WHERE [ID] = 302;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	  SELECT    t.Title AS [List all TSAs which are not getting settled in USD]    FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     	LEFT OUTER JOIN 	    TSACurrencies TSACurr  		    ON t.TSAItemLocalCurrencyId=TSACurr.ID 	LEFT OUTER JOIN Currencies Curr 	        ON TSACurr.CurrencyID=Curr.ID WHERE         Curr.Title<>''USD ($)''  	  AND s.title <> ''Canceled''', [SuggestionText] = N'List all TSAs which are not getting settled n USD.'
WHERE [ID] = 303;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    t.Title AS [TSAs where User has provided comments] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     WHERE         s.title <> ''Canceled'' 	  AND t.Comments IS NOT NULL', [SuggestionText] = N'List all TSAs where User has provided comments.'
WHERE [ID] = 304;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     ISNULL(Stg.Title, ''No Phase Assigned'') AS [Phase],     (TSA.Title)                          AS [ TSAs title] FROM     TSAItems      TSA     LEFT JOIN         TSAPhases Stg             ON TSA.PhaseId = Stg.ID', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'List all TSAs per phase.'
WHERE [ID] = 305;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT     t.Title AS [TSAs assigned to function due in next 30 days] FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN         Functions   f             ON t.FunctionId = f.id WHERE     s.title <> ''Canceled''     AND f.Title=''{FunctionName}'' 	AND CAST(t.TSAItemEndDate AS DATE) BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE()+30 AS DATE)', [AppAffinity] = N'CE4-TSA', [IsIncluded] = CAST(0 AS bit), [SuggestionText] = N'List All TSAs assigned to IT due in next 30 days.', [VisibleToAssistant] = CAST(0 AS bit)
WHERE [ID] = 306;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs assigned to IT due in next 30 days] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN Functions f         ON t.FunctionId = f.id WHERE s.title <> ''Canceled''       AND f.Title = ''Finance''       AND CAST(t.TSAItemEndDate AS DATE)       BETWEEN CAST(GETDATE() AS DATE) AND CAST(GETDATE() + 15 AS DATE)       AND t.TSAItemMarkup <= 0.01       AND t.ReceiverLegalEntityId IS NULL', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'List All TSAs assigned to finance due in next 15 days where markup is below 1% and has no receiver tagged.'
WHERE [ID] = 307;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSAs Items which are tagged as rTSA for Day 1 disposition] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE s.title <> ''Canceled''       AND TSADisp.Title = ''rTSA (reverse TSA)''', [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'List all Items which are tagged as rTSA for Day 1 disposition.'
WHERE [ID] = 308;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT t.Title AS [TSA Items where total number of FTEs providing service is greater than 5] FROM TSAItems AS t     LEFT OUTER JOIN TSAStatuses s         ON t.tsaitemtsastatusid = s.id     LEFT OUTER JOIN TSADay1Dispositions TSADisp         ON t.TSADay1DispositionId = TSADisp.ID WHERE s.title <> ''Canceled''       AND t.TSAItemNoOfFTEProvidingService > 5', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'List all Items where total number of FTEs providing service is greater than 5.'
WHERE [ID] = 309;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSA items which have been in Detailing phase for more than 15 days] FROM TSAItems TSA     LEFT JOIN TSAPhases Stg         ON TSA.PhaseId = Stg.ID WHERE Stg.[Key] = ''DETAILING''       AND CAST(TSA.Modified AS DATE) < CAST(GETDATE() - 15 AS DATE)', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'List all items which have been in Detailing phase for more than 15 days.'
WHERE [ID] = 310;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [Finance related TSA items with relevant SLA details],        ISNULL(TSA.TSAItemSLAName, '' '') AS [SLA Details] FROM TSAItems TSA     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND F.Title = ''Finance''', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'List all finance related items with relevant SLA details.'
WHERE [ID] = 311;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT TSA.Title AS [TSA items where external cost is greater than FTE cost for entire duration] FROM TSAItems TSA     LEFT JOIN Functions F         ON TSA.FunctionId = F.ID     LEFT JOIN TSAStatuses S         ON TSA.TSAItemTSAStatusId = S.ID WHERE S.[Key] <> ''CANCELED''       AND (TSA.TSAItemExternalMaterialCost > TSA.TSAItemFTECostForServiceDuration)', [AppAffinity] = N'CE4-TSA', [Source] = N'project-data', [SuggestionText] = N'List all items where external cost is greater than FTE cost for entire duration.'
WHERE [ID] = 312;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT PT.Title as Team, TT.Title as ''Type''  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] = ''PROJECT_MANAGEMENT'' order by TT.Title', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'What are the project teams that make up the governance structure for this engagement?'
WHERE [ID] = 313;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount  FROM WorkPlan wp  LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId  LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE wp.WorkPlanTaskType = ''Milestone'' AND TT.[Key] = ''PROJECT_MANAGEMENT'' GROUP BY pt.Title', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many milestones does each team have?'
WHERE [ID] = 314;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many interdependencies does each team have?'
WHERE [ID] = 315;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT pt.Title, COUNT(1) AS RiskCount  FROM RisksAndIssues RI  left join ProjectTeams pt on pt.ID = ri.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE IssueRiskCategory = ''Risk'' AND TT.[Key] = ''PROJECT_MANAGEMENT'' GROUP BY pt.Title', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'project-data', [SuggestionText] = N'How many risks does each team have?'
WHERE [ID] = 316;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT _TemplateFile FROM WorkPlan', [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 317;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 318;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What is the difference between Progress and Calculated Status?'
WHERE [ID] = 319;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 320;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 321;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 322;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE ValueCaptureType = ''Cost Saving'' or  ValueCaptureType = ''Cost Reduction''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What cost savings levers are available?'
WHERE [ID] = 323;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE ValueCaptureType = ''Revenue Growth''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What revenue growth levers are available?'
WHERE [ID] = 324;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE ValueCaptureType = ''One Time Cost''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are typical one-time costs that we should be considering?'
WHERE [ID] = 325;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE (ValueCaptureType = ''Cost Reduction'' OR  ValueCaptureType = ''Cost Saving'') AND ProjectTeam = ''IT''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the IT cost savings levers that I should be thinking about?'
WHERE [ID] = 326;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM ValueCaptureInitiatives WHERE ValueCaptureType = ''One Time Cost'' AND ProjectTeam = ''Supply Chain & Operations''', [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?'
WHERE [ID] = 327;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?'
WHERE [ID] = 328;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = NULL, [AppAffinity] = N'CE4-VC', [SuggestionText] = N'Help understand VC methodology.'
WHERE [ID] = 329;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT _TemplateFile FROM Nodes', [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What normative operating models are available?'
WHERE [ID] = 330;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'How can I upload systems in bulk to the Op Model app?'
WHERE [ID] = 331;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are the steps to setup the Op Model app?'
WHERE [ID] = 332;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What reports are available in the Op Model app?'
WHERE [ID] = 333;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title FROM TSAItems', [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What TSAs would you suggest?'
WHERE [ID] = 334;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT Title, ServiceInScopeDescription, [Function], SubFunction FROM TSAItems', [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'What are examples for TSAs?'
WHERE [ID] = 335;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [Source] = N'ey-guidance', [SuggestionText] = N'Why are TSAs important?'
WHERE [ID] = 336;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT DISTINCT _TemplateFile FROM WorkPlan', [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'What PMO workplan templates are available?'
WHERE [ID] = 337;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'What are the best practices to run weekly status meetings with the client?'
WHERE [ID] = 338;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'How do you add a new field to the workplan?'
WHERE [ID] = 339;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'How do I link a Workplan Task to RAID?'
WHERE [ID] = 340;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'PROJECT_LEVEL', [Source] = N'ey-guidance', [SuggestionText] = N'Help me understand PMO methodology for this {ProjectType} project.'
WHERE [ID] = 341;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'Generate a basic workplan template for my project.'
WHERE [ID] = 342;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the key risks for a {ProjectType} project?'
WHERE [ID] = 343;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the key milestones for a {ProjectType} project?'
WHERE [ID] = 344;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to run weekly status meetings?'
WHERE [ID] = 345;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are some of the similar deals that have happened in the past?'
WHERE [ID] = 346;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-PMO', [SuggestionText] = N'What are the best practices to build workplan, and track dependencies?'
WHERE [ID] = 347;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best cost saving initiatives?'
WHERE [ID] = 348;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best revenue growth initiatives?'
WHERE [ID] = 349;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best strategies for improving a company in the {Sector} sector?'
WHERE [ID] = 350;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are recent examples of improvements being made in the {Sector} sector?'
WHERE [ID] = 351;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are the best ways to track actuals?'
WHERE [ID] = 352;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What should be the frequency of tracking dollar values during the engagement?'
WHERE [ID] = 353;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-VC', [SuggestionText] = N'What are typical implications for cross border deals?'
WHERE [ID] = 354;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What is a normative operating model for the {Sector} sector?'
WHERE [ID] = 355;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are key considerations when defining an operating model for a {Sector} sector company?'
WHERE [ID] = 356;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-OM', [SuggestionText] = N'What are examples of Day 1 process dispositions?'
WHERE [ID] = 357;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the corporate functions typically involved in the {Sector} sector?'
WHERE [ID] = 358;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'What are the typical services of the Sales and Marketing function?'
WHERE [ID] = 359;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AppAffinity] = N'CE4-TSA', [SuggestionText] = N'Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.'
WHERE [ID] = 360;
SELECT @@ROWCOUNT;

GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'IsIncluded', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] ON;
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [IsIncluded], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (361, NULL, N'CE4-TSA', NULL, N'System', CAST(1 AS bit), N'internet', N'Provides templates of TSA.', NULL, N'System', CAST(1 AS bit)),
(362, NULL, N'CE4-TSA', NULL, N'System', CAST(1 AS bit), N'internet', N'What should be the typical duration for TSA?', NULL, N'System', CAST(1 AS bit)),
(363, NULL, N'CE4-TSA', NULL, N'System', CAST(1 AS bit), N'internet', N'Things I should keep in mind for longer duration TSAs?', NULL, N'System', CAST(1 AS bit)),
(364, NULL, N'PROJECT_LEVEL', NULL, N'System', CAST(1 AS bit), N'internet', N'Generate a basic workplan template for my project.', NULL, N'System', CAST(1 AS bit)),
(365, NULL, N'PROJECT_LEVEL', NULL, N'System', CAST(1 AS bit), N'internet', N'What are the key risks for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(366, NULL, N'PROJECT_LEVEL', NULL, N'System', CAST(1 AS bit), N'internet', N'What are the key milestones for a {ProjectType} project?', NULL, N'System', CAST(1 AS bit)),
(367, NULL, N'PROJECT_LEVEL', NULL, N'System', CAST(1 AS bit), N'internet', N'What are the best practices to run weekly status meetings?', NULL, N'System', CAST(1 AS bit)),
(368, NULL, N'PROJECT_LEVEL', NULL, N'System', CAST(1 AS bit), N'internet', N'What are the best practices to build workplan, and track dependencies?', NULL, N'System', CAST(1 AS bit));
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'IsIncluded', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240826070443_NewSuggestionProjectData', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [AssistantGlossary] (
    [ID] int NOT NULL IDENTITY,
    [Context] nvarchar(MAX) NOT NULL,
    [TableName] nvarchar(255) NOT NULL,
    [Tag] nvarchar(50) NOT NULL,
    [IsSchema] bit NOT NULL,
    [CreatedAt] datetime2 NULL,
    [UpdatedAt] datetime2 NULL,
    [CreatedBy] nvarchar(100) NOT NULL,
    [UpdatedBy] nvarchar(100) NOT NULL,
    CONSTRAINT [PK_AssistantGlossary] PRIMARY KEY ([ID])
);
GO

UPDATE [AssistantConfigurations] SET [Value] = CONCAT(CAST(nchar(13) AS nvarchar(max)), nchar(10), N'                    [', nchar(13), nchar(10), N'                        {', nchar(13), nchar(10), N'                            "key": "project-docs",', nchar(13), nchar(10), N'                            "displayName": "Project Docs",', nchar(13), nchar(10), N'                            "originalDisplayName": "Project Docs",', nchar(13), nchar(10), N'                            "isQuestionTextBoxEnabled": true,', nchar(13), nchar(10), N'                            "description": "Reference information from the project documents that you have access to through SharePoint. Pick and choose which documents you want to focus on via the Document Hub.",', nchar(13), nchar(10), N'                            "isDefault": false,', nchar(13), nchar(10), N'                            "ordinal": 1,', nchar(13), nchar(10), N'                            "isActive": true', nchar(13), nchar(10), N'                        },', nchar(13), nchar(10), N'                        {', nchar(13), nchar(10), N'                            "key": "project-data",', nchar(13), nchar(10), N'                            "displayName": "Project Data",', nchar(13), nchar(10), N'                            "originalDisplayName": "Project Data",', nchar(13), nchar(10), N'                            "isQuestionTextBoxEnabled": true,', nchar(13), nchar(10), N'                            "description": "Ask questions about how this project is progressing. Examples of key insights to ask about include identifying existing risks, issues, actions, decisions, or initiatives that have fallen of track.",', nchar(13), nchar(10), N'                            "isDefault": false,', nchar(13), nchar(10), N'                            "ordinal": 2,', nchar(13), nchar(10), N'                            "isActive": true', nchar(13), nchar(10), N'                        },', nchar(13), nchar(10), N'                        {', nchar(13), nchar(10), N'                            "key": "ey-guidance",', nchar(13), nchar(10), N'                            "displayName": "EY Guidance",', nchar(13), nchar(10), N'                            "originalDisplayName": "EY Guidance",', nchar(13), nchar(10), N'                            "isQuestionTextBoxEnabled": true,', nchar(13), nchar(10), N'                            "description": "Ask questions against SaT best practices, Capital Edge help, and EY intellectual property such as workplan blueprints, cost saving initiatives, and normative operating models.",', nchar(13), nchar(10), N'                            "isDefault": true,', nchar(13), nchar(10), N'                            "ordinal": 3,', nchar(13), nchar(10), N'                            "isActive": true', nchar(13), nchar(10), N'                        },', nchar(13), nchar(10), N'                        {', nchar(13), nchar(10), N'                            "key": "internet",', nchar(13), nchar(10), N'                            "displayName": "Internet",', nchar(13), nchar(10), N'                            "originalDisplayName": "Internet",', nchar(13), nchar(10), N'                            "isQuestionTextBoxEnabled": true,', nchar(13), nchar(10), N'                            "description": "Open your search to the entire internet, protected by the wrapper of EY.ai.",', nchar(13), nchar(10), N'                            "isDefault": true,', nchar(13), nchar(10), N'                            "ordinal": 4,', nchar(13), nchar(10), N'                            "isActive": true', nchar(13), nchar(10), N'                        }', nchar(13), nchar(10), N'                    ]')
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'Context', N'CreatedAt', N'CreatedBy', N'IsSchema', N'TableName', N'Tag', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[AssistantGlossary]'))
    SET IDENTITY_INSERT [AssistantGlossary] ON;
INSERT INTO [AssistantGlossary] ([ID], [Context], [CreatedAt], [CreatedBy], [IsSchema], [TableName], [Tag], [UpdatedAt], [UpdatedBy])
VALUES (1, N'When asked for due times, past due, this week, slippage, among other similar, use the column TaskDueDate', NULL, N'System', CAST(0 AS bit), N'|WorkPlan|', N'static', NULL, N'System'),
(2, N'When asked for list of tasks, name of task, workplan items, and want you to list them, use the column WorkPlan.Title always if needed and WorkPlan.UniqueItemIdentifier when possible.', NULL, N'System', CAST(0 AS bit), N'|WorkPlan|', N'static', NULL, N'System'),
(3, N'When asked for risks in any case, try to include the columns Title and UniqueItemIdentifier if possible', NULL, N'System', CAST(0 AS bit), N'|RisksAndIssues|', N'static', NULL, N'System'),
(4, N'When asked for scope of service use the column ServiceInScopeDescription from the table TSAItems', NULL, N'System', CAST(0 AS bit), N'|TSAItems|', N'static', NULL, N'System'),
(5, N'When asked for services use the column Title from table TSAItems', NULL, N'System', CAST(0 AS bit), N'|TSAItems|', N'static', NULL, N'System'),
(6, N'When asked for list of TSA ending in a specific month use the column TSAItemEndDate', NULL, N'System', CAST(0 AS bit), N'|TSAItems|', N'static', NULL, N'System'),
(7, N'Duration should be calculated by subtracting a StartDate from an EndDate, formula is EndDate - StartDate', NULL, N'System', CAST(0 AS bit), N'AllTables', N'static', NULL, N'System'),
(8, N'For TSA, date columns to be used are TSAItemEndDate and TSAItemStartDate', NULL, N'System', CAST(0 AS bit), N'|TSAItems|', N'static', NULL, N'System'),
(9, N'When asked about plans of initiatives you MUST use the ValueCaptureInitiatives and ValueCaptureEstimates tables', NULL, N'System', CAST(0 AS bit), N'|ValueCaptureInitiatives|', N'static', NULL, N'System'),
(10, N'When asked about ALREADY achieved initiatives you MUST use ValueCaptureActuals and ValueCaptureInitiatives tables', NULL, N'System', CAST(0 AS bit), N'|ValueCaptureInitiatives|', N'static', NULL, N'System'),
(11, N'Team, teams is in the table ProjectTeams in the column Title', NULL, N'System', CAST(0 AS bit), N'|WorkPlan|,|RisksAndIssues|,|TSAItems|,|Nodes|,|ValueCaptureIntitiatives|', N'static', NULL, N'System'),
(12, N'Overdue means past due date', NULL, N'System', CAST(0 AS bit), N'|WorkPlan|,|RisksAndIssues|,|TSAItems|,|Nodes|,|ValueCaptureIntitiatives|', N'static', NULL, N'System'),
(13, N'When asked about processes it is referring to Operating Model processes, you should use Nodes tables and tables referring to Nodes', NULL, N'System', CAST(0 AS bit), N'|Nodes|', N'static', NULL, N'System'),
(14, N'When asked for Day 1 processes, use operating models tables and, join with TransactionStates and filter [key] column with ''DAY_ONE''', NULL, N'System', CAST(0 AS bit), N'|Nodes|', N'static', NULL, N'System'),
(15, N'When asked for Current State processes, use operating models tables and, join with TransactionStates and filter [key] column with ''CURRENT_STATE''', NULL, N'System', CAST(0 AS bit), N'|Nodes|', N'static', NULL, N'System'),
(16, N'When asked about initiatives use tables related to VC or ValueCapture', NULL, N'System', CAST(0 AS bit), N'|ValueCaptureInitiatives|', N'static', NULL, N'System'),
(17, N'When I ask something about me or other person use the table UserProfiles to filter my email with the column Email or the table ActiveDirectory with columns AuthorID or EditorID', NULL, N'System', CAST(0 AS bit), N'AllTables', N'static', NULL, N'System'),
(18, N'If you''re asked targets and engagement you MUST use ''ValueCaptureTopDownEstimates'' table', NULL, N'System', CAST(0 AS bit), N'|ValueCaptureTopDownEstimates|', N'static', NULL, N'System'),
(19, N'When asked for processes by op model, please use the table ''Nodes'', use the column Title', NULL, N'System', CAST(0 AS bit), N'|Nodes|', N'static', NULL, N'System'),
(20, N'When asked for ANY NUMBER, current STATE or HOW MANY for op model, please use the table ''Nodes'', use the column Title and apply a count', NULL, N'System', CAST(0 AS bit), N'|Nodes|', N'static', NULL, N'System'),
(21, N'When asked for HOW MANY processes and States, please use the table ''Nodes'', use the column Title apply a count and use a LEFT with the table TransactionStated', NULL, N'System', CAST(0 AS bit), N'|Nodes|', N'static', NULL, N'System'),
(22, N'When asked for op models ''Systems'' with ''Processes'', please use the bridge table NodesSystemsForEnablerSystems as main tables', NULL, N'System', CAST(0 AS bit), N'|Nodes|', N'static', NULL, N'System'),
(23, N'When asked for op models ''Assets'', please use the bridge table NodesToAssetsForEnablerAssets as main tables', NULL, N'System', CAST(0 AS bit), N'|Nodes|', N'static', NULL, N'System'),
(24, N'When asked for op models ''Processes Dispositions'', please use the bridge table NodesToDispositionsForDispositionNew as main tables', NULL, N'System', CAST(0 AS bit), N'|Nodes|', N'static', NULL, N'System'),
(25, N'When asked for op models ''Systems'', please use the bridge table NodesSystemsForEnablerSystems as main tables', NULL, N'System', CAST(0 AS bit), N'|Nodes|', N'static', NULL, N'System'),
(26, N'A status is Open when is not Cancelled, completed, closed, deleted, rejected or on hold', NULL, N'System', CAST(0 AS bit), N'AllTables', N'static', NULL, N'System'),
(27, N'When asked about ''IT'' team or ''IT'' project team, please filter using the column Title from ProjectTeams table', NULL, N'System', CAST(0 AS bit), N'AllTables', N'static', NULL, N'System'),
(28, N'If you receive information about Team Type join with the ProjectTeams table, include the filter. The name of the team type is on TeamTypes table in the column Title. Show this column if possible.', NULL, N'System', CAST(0 AS bit), N'AllTables', N'static', NULL, N'System');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'Context', N'CreatedAt', N'CreatedBy', N'IsSchema', N'TableName', N'Tag', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[AssistantGlossary]'))
    SET IDENTITY_INSERT [AssistantGlossary] OFF;
GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'Which teams have not entered their weekly status report for this reporting period?'
WHERE [ID] = 69;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240828160804_AddTableAssistantGlossary', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantGlossary] SET [Context] = N'When asked for list of tasks, name of task, workplan items, include the columns WorkPlan.Title and WorkPlan.UniqueItemIdentifier in the select clause, and always filter by the workplan task type.'
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'For TSA, date columns to be used are  TSAItemEndDate and TSAItemStartDate'
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'When I ask something about me or other person use the table UserProfiles, user name is on column Title, and Email in column Email'
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'When asked for processes by op model, please use the table ''Nodes'',use the column Title'
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'When asked for ANY NUMBER, current STATE or HOW MANY for op model, please use the table ''Nodes'',use the column Title and apply a count'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'When asked for HOW MANY processes and States, please use the table ''Nodes'',use the column Title apply a count and use a LEFT with the table TransactionStated'
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'If you receive information about Team Type join with the ProjectTeams table, then with the TeamTypes table and filter by the ID in table TeamTypes'
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240912055451_UpdateGlossarySeedData', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantGlossary] SET [Context] = N'When asked about ALREADY achived initiatives you MUST use ValueCaptureActuals and ValueCaptureInitiatives tables'
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'When asked about ''IT'' team or ''IT'' project team, please filter using the column Title from the ProjectTeams table in the following way: WHERE ProjectTeams.Title = ''IT'''
WHERE [ID] = 27;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'When asked about something related to Account Disabled, Project Disabled, Project Enabled or similar, use the Key column in the table AccountStatuses', [TableName] = N'|AccountStatuses|'
WHERE [ID] = 28;
SELECT @@ROWCOUNT;

GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'Context', N'CreatedAt', N'CreatedBy', N'IsSchema', N'TableName', N'Tag', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[AssistantGlossary]'))
    SET IDENTITY_INSERT [AssistantGlossary] ON;
INSERT INTO [AssistantGlossary] ([ID], [Context], [CreatedAt], [CreatedBy], [IsSchema], [TableName], [Tag], [UpdatedAt], [UpdatedBy])
VALUES (29, N'If you receive information about Team Type join with the ProjectTeams table, then with the TeamTypes table and filter by the ID in table TeamTypes', NULL, N'System', CAST(0 AS bit), N'AllTables', N'static', NULL, N'System');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'Context', N'CreatedAt', N'CreatedBy', N'IsSchema', N'TableName', N'Tag', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[AssistantGlossary]'))
    SET IDENTITY_INSERT [AssistantGlossary] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240917061147_UpdatingGlossaryData', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

ALTER TABLE [AssistantMessageFeedbacks] ADD [Consent] bit NULL;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS MilestonesDueThisWeek FROM WorkPlan wp LEFT JOIN statuses s ON wp.WorkPlanTaskStatusId = s.ID  LEFT JOIN ProjectTeams pt on pt.ID = wp.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId LEFT JOIN UserProfiles up on wp.TaskOwnerId = up.ID  WHERE wp.WorkPlanTaskType = ''Milestone''    AND YEAR(wp.TaskDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, wp.TaskDueDate) = DATEPART(WEEK, GETDATE())    AND (s.[Key] IS NULL OR s.[Key]  NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED''))  AND TT.[Key] = ''PROJECT_MANAGEMENT'' AND up.EMail = ''{Username}'''
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS RisksAndIssuesDueThisWeek  FROM RisksAndIssues RI  LEFT JOIN statuses S ON RI.ItemStatusId = S.ID  LEFT JOIN UserProfiles up on RI.ItemOwnerId = up.ID  LEFT JOIN ProjectTeams pt on pt.ID = RI.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE RI.IssueRiskCategory = ''Risk''    AND YEAR(RI.ItemDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, RI.ItemDueDate) = DATEPART(WEEK, GETDATE())   AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED''))  AND TT.[Key] = ''PROJECT_MANAGEMENT'' AND up.EMail = ''{Username}'''
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      COUNT(*) AS InterdependenciesDueThisWeek FROM      Interdependencies I  LEFT JOIN      statuses S ON I.InterdependencyStatusId = S.ID LEFT JOIn ProjectTeams PT on PT.ID = I.ReceiverProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId WHERE   YEAR(I.ItemDueDate) = YEAR(GETDATE())      AND DATEPART(WEEK, I.ItemDueDate) = DATEPART(WEEK, GETDATE())      AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'')) AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      W.Title AS WorkPlanItem,  W.TaskDueDate,  W.ActualStartDate,  W.WorkPlanTaskType,  W.TaskDescription,  W.[Priority],  W.IsCritical,  UP.Title TaskOwner,  PT.Title AS ProjectTeam,  S.Title AS [Status]  FROM      Workplan W  LEFT JOIN      ProjectTeams PT ON W.ProjectTeamId = PT.ID  LEFT JOIN      TeamTypes TT ON PT.TeamTypeId = TT.ID  LEFT JOIN   UserProfiles UP ON W.TaskOwnerId = UP.ID  LEFT JOIN      Statuses S ON W.WorkPlanTaskStatusId = S.ID  WHERE      TT.[Key] = ''PROJECT_MANAGEMENT''      AND DATEPART(ww, W.TaskDueDate) = DATEPART(ww, GETDATE()) + 1 AND YEAR(W.TaskDueDate) = YEAR(GETDATE()) AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED''))'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      WS.Title, PT.Title AS ProjectTeams, RP.PeriodStartDate, RP.PeriodEndDate, RP.Title ReportingPeriod, PSE.ID AS ProjectStatusEntriesID FROM      ProjectStatusEntries PSE JOIN      ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN      WeeklyStatusStatuses WS ON PSE.WeeklyStatusStatusId = WS.ID  JOIN      ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE      PT.Title = {ProjectTeam}      AND  RP.ID = (  SELECT RPID.ID - 1         FROM ReportingPeriods RPID         WHERE CAST (GETDATE() as DATE) BETWEEN CAST (RPID.PeriodStartDate as DATE) AND CAST (RPID.PeriodEndDate as DATE))'
WHERE [ID] = 22;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AN.Title, AN.AccomplishmentNextstepCategory, WS.Title, PT.Title AS ProjectTeams, RP.PeriodStartDate, RP.PeriodEndDate, RP.Title ReportingPeriod, PSE.ID AS ProjectStatusEntriesID  FROM      ProjectStatusEntries PSE JOIN      ProjectTeams PT ON PSE.ProjectTeamID = PT.ID  JOIN      AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN      ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID  JOIN      WeeklyStatusStatuses WS ON PSE.WeeklyStatusStatusId = WS.ID    WHERE      PT.Title = {ProjectTeam}      AND RP.ID = (SELECT RPID.ID - 1 FROM ReportingPeriods RPID WHERE CAST( GETDATE() as DATE) BETWEEN CAST(RPID.PeriodStartDate as DATE) AND CAST(RPID.PeriodEndDate as DATE)) ORDER BY      AN.AccomplishmentNextstepCategory'
WHERE [ID] = 23;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksCompletedLastWeek   FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID     JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID    JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  YEAR(W.ActualEndDate) = YEAR(GETDATE()) AND DATEPART(ww, W.ActualEndDate) = DATEPART(ww, GETDATE()) -1 AND S.[KEY] IN (''COMPLETED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksCompletedThisWeek   FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID     JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID    JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  YEAR(W.ActualEndDate) = YEAR(GETDATE()) AND DATEPART(ww, W.ActualEndDate) = DATEPART(ww, GETDATE()) AND S.[KEY] IN (''COMPLETED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksDueThisWeek  FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID    JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID    JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  WHERE  YEAR(W.ActualEndDate) = YEAR(GETDATE()) AND DATEPART(ww, W.ActualEndDate) = DATEPART(ww, GETDATE()) AND S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksDueNextWeek   FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID     JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID   JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    YEAR(W.ActualEndDate) = YEAR(GETDATE()) AND DATEPART(ww, W.ActualEndDate) = DATEPART(ww, GETDATE()) + 1   AND S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ProjectTeam FROM(   SELECT      PT.Title AS Projectteam,     COUNT(PT.ID) AS TeamUpdateCount,  DENSE_RANK() OVER (ORDER BY COUNT(PT.ID)) ROW_NUM FROM      WorkPlan W JOIN ProjectTeams PT ON PT.ID = W.ProjectTeamId JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  WHERE      YEAR(W.Modified) = YEAR(GETDATE()) AND DATEPART(ww, W.Modified) = DATEPART(ww, GETDATE()) - 1   AND PT.ItemIsActive=1 AND TT.[Key] =  ''PROJECT_MANAGEMENT'' GROUP BY PT.Title) A'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  W.UniqueItemIdentifier,     W.Title WorkPlanItem, W.TaskDueDate, W.ActualStartDate, W.WorkPlanTaskType, W.TaskDescription, W.[Priority], W.IsCritical, UP.Title TaskOwner, PT.Title AS ProjectTeam, S.Title AS [Status]  FROM  Workplan W  LEFT JOIN  ProjectTeams PT ON W.ProjectTeamId = PT.ID  LEFT JOIN  TeamTypes TT ON PT.TeamTypeId = TT.ID  JOIN      Statuses S ON W.WorkPlanTaskStatusId = S.ID LEFT JOIN  UserProfiles UP ON W.TaskOwnerId = UP.ID   WHERE  TT.[Key] = ''PROJECT_MANAGEMENT''  AND DATEPART(ww,W.TaskDueDate) = DATEPART(ww,GETDATE()) AND YEAR(W.TaskDueDate) = YEAR(GETDATE()) AND S.[KEY] NOT IN (''COMPLETED'', ''CANCELLED'')'
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select PSE.ExecutiveSummary from ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID  JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID  WHERE PT.Title = ''Finance'' AND RP.ID = (SELECT RPID.ID  FROM ReportingPeriods RPID WHERE CAST(GETDATE() as DATE) BETWEEN CAST(RPID.PeriodStartDate as DATE) AND CAST (RPID.PeriodEndDate as DATE))'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240919084721_AddingConsentCOlumn', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS MilestonesDueThisWeek FROM WorkPlan wp LEFT JOIN statuses s ON wp.WorkPlanTaskStatusId = s.ID  LEFT JOIN ProjectTeams pt on pt.ID = wp.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId LEFT JOIN UserProfiles up on wp.TaskOwnerId = up.ID  WHERE wp.WorkPlanTaskType = ''Milestone''    AND YEAR(wp.TaskDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, wp.TaskDueDate) = DATEPART(WEEK, GETDATE())    AND (s.[Key] IS NULL OR s.[Key]  NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED''))  AND TT.[Key] = ''PROJECT_MANAGEMENT'' AND up.EMail = ''{Username}'''
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT COUNT(*) AS RisksAndIssuesDueThisWeek  FROM RisksAndIssues RI  LEFT JOIN statuses S ON RI.ItemStatusId = S.ID  LEFT JOIN UserProfiles up on RI.ItemOwnerId = up.ID  LEFT JOIN ProjectTeams pt on pt.ID = RI.ProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = pt.TeamTypeId WHERE RI.IssueRiskCategory = ''Risk''    AND YEAR(RI.ItemDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, RI.ItemDueDate) = DATEPART(WEEK, GETDATE())   AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED''))  AND TT.[Key] = ''PROJECT_MANAGEMENT'' AND up.EMail = ''{Username}'''
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      COUNT(*) AS InterdependenciesDueThisWeek FROM      Interdependencies I  LEFT JOIN      statuses S ON I.InterdependencyStatusId = S.ID LEFT JOIn ProjectTeams PT on PT.ID = I.ReceiverProjectTeamId LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId WHERE   YEAR(I.ItemDueDate) = YEAR(GETDATE())      AND DATEPART(WEEK, I.ItemDueDate) = DATEPART(WEEK, GETDATE())      AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'')) AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      W.Title AS WorkPlanItem,  W.TaskDueDate,  W.ActualStartDate,  W.WorkPlanTaskType,  W.TaskDescription,  W.[Priority],  W.IsCritical,  UP.Title TaskOwner,  PT.Title AS ProjectTeam,  S.Title AS [Status]  FROM      Workplan W  LEFT JOIN      ProjectTeams PT ON W.ProjectTeamId = PT.ID  LEFT JOIN      TeamTypes TT ON PT.TeamTypeId = TT.ID  LEFT JOIN   UserProfiles UP ON W.TaskOwnerId = UP.ID  LEFT JOIN      Statuses S ON W.WorkPlanTaskStatusId = S.ID  WHERE      TT.[Key] = ''PROJECT_MANAGEMENT''      AND DATEPART(ww, W.TaskDueDate) = DATEPART(ww, GETDATE()) + 1 AND YEAR(W.TaskDueDate) = YEAR(GETDATE()) AND (S.[Key] IS NULL OR S.[Key] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED''))'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT      WS.Title, PT.Title AS ProjectTeams, RP.PeriodStartDate, RP.PeriodEndDate, RP.Title ReportingPeriod, PSE.ID AS ProjectStatusEntriesID FROM      ProjectStatusEntries PSE JOIN      ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN      WeeklyStatusStatuses WS ON PSE.WeeklyStatusStatusId = WS.ID  JOIN      ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE      PT.Title = {ProjectTeam}      AND  RP.ID = (  SELECT RPID.ID - 1         FROM ReportingPeriods RPID         WHERE CAST (GETDATE() as DATE) BETWEEN CAST (RPID.PeriodStartDate as DATE) AND CAST (RPID.PeriodEndDate as DATE))'
WHERE [ID] = 22;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT AN.Title, AN.AccomplishmentNextstepCategory, WS.Title, PT.Title AS ProjectTeams, RP.PeriodStartDate, RP.PeriodEndDate, RP.Title ReportingPeriod, PSE.ID AS ProjectStatusEntriesID  FROM      ProjectStatusEntries PSE JOIN      ProjectTeams PT ON PSE.ProjectTeamID = PT.ID  JOIN      AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN      ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID  JOIN      WeeklyStatusStatuses WS ON PSE.WeeklyStatusStatusId = WS.ID    WHERE      PT.Title = {ProjectTeam}      AND RP.ID = (SELECT RPID.ID - 1 FROM ReportingPeriods RPID WHERE CAST( GETDATE() as DATE) BETWEEN CAST(RPID.PeriodStartDate as DATE) AND CAST(RPID.PeriodEndDate as DATE)) ORDER BY      AN.AccomplishmentNextstepCategory'
WHERE [ID] = 23;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksCompletedLastWeek   FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID     JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID    JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  YEAR(W.ActualEndDate) = YEAR(GETDATE()) AND DATEPART(ww, W.ActualEndDate) = DATEPART(ww, GETDATE()) -1 AND S.[KEY] IN (''COMPLETED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 40;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksCompletedThisWeek   FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID     JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID    JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE  YEAR(W.ActualEndDate) = YEAR(GETDATE()) AND DATEPART(ww, W.ActualEndDate) = DATEPART(ww, GETDATE()) AND S.[KEY] IN (''COMPLETED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 41;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksDueThisWeek  FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID    JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID    JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  WHERE  YEAR(W.ActualEndDate) = YEAR(GETDATE()) AND DATEPART(ww, W.ActualEndDate) = DATEPART(ww, GETDATE()) AND S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 42;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT    Count(W.ID) as TasksDueNextWeek   FROM    Workplan W    JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID     JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID   JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID WHERE    YEAR(W.ActualEndDate) = YEAR(GETDATE()) AND DATEPART(ww, W.ActualEndDate) = DATEPART(ww, GETDATE()) + 1   AND S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'')   AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 43;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT ProjectTeam FROM(   SELECT      PT.Title AS Projectteam,     COUNT(PT.ID) AS TeamUpdateCount,  DENSE_RANK() OVER (ORDER BY COUNT(PT.ID)) ROW_NUM FROM      WorkPlan W JOIN ProjectTeams PT ON PT.ID = W.ProjectTeamId JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID  WHERE      YEAR(W.Modified) = YEAR(GETDATE()) AND DATEPART(ww, W.Modified) = DATEPART(ww, GETDATE()) - 1   AND PT.ItemIsActive=1 AND TT.[Key] =  ''PROJECT_MANAGEMENT'' GROUP BY PT.Title) A'
WHERE [ID] = 58;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  W.UniqueItemIdentifier,     W.Title WorkPlanItem, W.TaskDueDate, W.ActualStartDate, W.WorkPlanTaskType, W.TaskDescription, W.[Priority], W.IsCritical, UP.Title TaskOwner, PT.Title AS ProjectTeam, S.Title AS [Status]  FROM  Workplan W  LEFT JOIN  ProjectTeams PT ON W.ProjectTeamId = PT.ID  LEFT JOIN  TeamTypes TT ON PT.TeamTypeId = TT.ID  JOIN      Statuses S ON W.WorkPlanTaskStatusId = S.ID LEFT JOIN  UserProfiles UP ON W.TaskOwnerId = UP.ID   WHERE  TT.[Key] = ''PROJECT_MANAGEMENT''  AND DATEPART(ww,W.TaskDueDate) = DATEPART(ww,GETDATE()) AND YEAR(W.TaskDueDate) = YEAR(GETDATE()) AND S.[KEY] NOT IN (''COMPLETED'', ''CANCELLED'')'
WHERE [ID] = 62;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'select PSE.ExecutiveSummary from ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID  JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID  WHERE PT.Title = ''Finance'' AND RP.ID = (SELECT RPID.ID  FROM ReportingPeriods RPID WHERE CAST(GETDATE() as DATE) BETWEEN CAST(RPID.PeriodStartDate as DATE) AND CAST (RPID.PeriodEndDate as DATE))'
WHERE [ID] = 84;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240920120849_UpdateSuggestionWeek', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'IsIncluded', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] ON;
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [IsIncluded], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (369, N'SELECT  A.UniqueItemIdentifier,  A.Title , PT.Title ProjectTeam, U.Title ItemOwner  FROM    Actions A      LEFT JOIN Statuses S ON A.ItemStatusId = S.ID      LEFT JOIN ProjectTeams PT ON A.ProjectTeamId = PT.ID   LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID    LEFT JOIN UserProfiles U ON A.ItemOwnerId = U.ID   WHERE    PT.Title = ''IT''  AND TT.[Key] = ''PROJECT_MANAGEMENT''', N'CE4-PMO', NULL, N'System', CAST(0 AS bit), N'project-data', N'How many actions are assigned to IT team?', NULL, N'System', CAST(0 AS bit)),
(370, N'SELECT       PT.Title AS ProjectTeam,                COUNT(A.UniqueItemIdentifier) AS ActionCount    FROM       Actions A      LEFT JOIN       ProjectTeams PT ON A.ProjectTeamId = PT.ID    LEFT JOIN       TeamTypes TT ON PT.TeamTypeId = TT.ID    WHERE       TT.[Key] = ''PROJECT_MANAGEMENT''   GROUP BY       PT.Title                           ORDER BY       ActionCount DESC', N'CE4-PMO', NULL, N'System', CAST(1 AS bit), N'project-data', N'Could you provide the number of action items categorized by project team?', NULL, N'System', CAST(1 AS bit)),
(371, N'SELECT  A.UniqueItemIdentifier,  A.Title, PT.Title AS ProjectTeam, U.Title AS ItemOwner, S.Title  FROM Actions A      LEFT JOIN Statuses S ON A.ItemStatusId = S.ID      LEFT JOIN ProjectTeams PT ON A.ProjectTeamId = PT.ID   LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID    LEFT JOIN UserProfiles U ON A.ItemOwnerId = U.ID   WHERE S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'', ''ON_HOLD'')   AND TT.[Key] = ''PROJECT_MANAGEMENT''', N'CE4-PMO', NULL, N'System', CAST(1 AS bit), N'project-data', N'List all Open Actions in PMO app.', NULL, N'System', CAST(1 AS bit));
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'IsIncluded', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240925091252_AddNewActionSuggestion', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantConfigurations] SET [Value] = CONCAT(CAST(nchar(13) AS nvarchar(max)), nchar(10), N'                    [', nchar(13), nchar(10), N'                        {', nchar(13), nchar(10), N'                            "key": "project-docs",', nchar(13), nchar(10), N'                            "displayName": "Project Docs",', nchar(13), nchar(10), N'                            "originalDisplayName": "Project Docs",', nchar(13), nchar(10), N'                            "isQuestionTextBoxEnabled": true,', nchar(13), nchar(10), N'                            "description": "Reference information from the project documents that you have access to through SharePoint. Pick and choose which documents you want to focus on via the Document Hub.",', nchar(13), nchar(10), N'                            "isDefault": false,', nchar(13), nchar(10), N'                            "ordinal": 1,', nchar(13), nchar(10), N'                            "isActive": true', nchar(13), nchar(10), N'                        },', nchar(13), nchar(10), N'                        {', nchar(13), nchar(10), N'                            "key": "project-data",', nchar(13), nchar(10), N'                            "displayName": "Project Data",', nchar(13), nchar(10), N'                            "originalDisplayName": "Project Data",', nchar(13), nchar(10), N'                            "isQuestionTextBoxEnabled": true,', nchar(13), nchar(10), N'                            "description": "Ask questions about how this project is progressing. Examples of key insights to ask about include identifying existing risks, issues, actions, decisions, or initiatives that have fallen of track.",', nchar(13), nchar(10), N'                            "isDefault": false,', nchar(13), nchar(10), N'                            "ordinal": 2,', nchar(13), nchar(10), N'                            "isActive": true', nchar(13), nchar(10), N'                        },', nchar(13), nchar(10), N'                        {', nchar(13), nchar(10), N'                            "key": "ey-guidance",', nchar(13), nchar(10), N'                            "displayName": "EY Guidance",', nchar(13), nchar(10), N'                            "originalDisplayName": "EY Guidance",', nchar(13), nchar(10), N'                            "isQuestionTextBoxEnabled": true,', nchar(13), nchar(10), N'                            "description": "Ask questions against SaT best practices, Capital Edge help, and EY intellectual property such as workplan blueprints, cost saving initiatives, and normative operating models.",', nchar(13), nchar(10), N'                            "isDefault": true,', nchar(13), nchar(10), N'                            "ordinal": 3,', nchar(13), nchar(10), N'                            "isActive": true', nchar(13), nchar(10), N'                        },', nchar(13), nchar(10), N'                        {', nchar(13), nchar(10), N'                            "key": "internet",', nchar(13), nchar(10), N'                            "displayName": "Internet",', nchar(13), nchar(10), N'                            "originalDisplayName": "Internet",', nchar(13), nchar(10), N'                            "isQuestionTextBoxEnabled": true,', nchar(13), nchar(10), N'                            "description": "Open your search to the entire internet, protected by the wrapper of EY.ai.",', nchar(13), nchar(10), N'                            "isDefault": false,', nchar(13), nchar(10), N'                            "ordinal": 4,', nchar(13), nchar(10), N'                            "isActive": true', nchar(13), nchar(10), N'                        }', nchar(13), nchar(10), N'                    ]')
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240925113348_UpdatingDefaultSource', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'SELECT  A.UniqueItemIdentifier,  A.Title, PT.Title AS ProjectTeam, U.Title AS ItemOwner, S.Title as Status  FROM Actions A      LEFT JOIN Statuses S ON A.ItemStatusId = S.ID      LEFT JOIN ProjectTeams PT ON A.ProjectTeamId = PT.ID   LEFT JOIN TeamTypes TT ON PT.TeamTypeId = TT.ID    LEFT JOIN UserProfiles U ON A.ItemOwnerId = U.ID   WHERE S.[KEY] NOT IN (''COMPLETED'', ''CLOSED'', ''CANCELLED'', ''DELETED'', ''REJECTED'', ''ON_HOLD'')   AND TT.[Key] = ''PROJECT_MANAGEMENT'''
WHERE [ID] = 371;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20240925144044_UpdateSQLQueryTitle', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

ALTER TABLE [AssistantMessageFeedbacks] ADD [Consent] bit NULL;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20241004092824_AddConsent_Migration3', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

ALTER TABLE [AssistantChatHistory] ADD [StatusCode] int NULL;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20241008102501_AddStatusCode_Migration3', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [AssistantContentGeneratorQueries] (
    [ID] int NOT NULL IDENTITY,
    [APP] nvarchar(256) NOT NULL,
    [Title] nvarchar(256) NOT NULL,
    [Description] nvarchar(MAX) NOT NULL,
    [GeneratorType] nvarchar(256) NOT NULL,
    [Key] nvarchar(256) NOT NULL,
    [SQLQuery] nvarchar(MAX) NOT NULL,
    [IsActive] bit NOT NULL DEFAULT CAST(1 AS bit),
    [CreatedAt] datetime2 NULL,
    [UpdatedAt] datetime2 NULL,
    [CreatedBy] nvarchar(100) NOT NULL,
    [UpdatedBy] nvarchar(100) NOT NULL,
    CONSTRAINT [PK_AssistantContentGeneratorQueries] PRIMARY KEY ([ID])
);
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'APP', N'CreatedAt', N'CreatedBy', N'Description', N'GeneratorType', N'Key', N'SQLQuery', N'Title', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[AssistantContentGeneratorQueries]'))
    SET IDENTITY_INSERT [AssistantContentGeneratorQueries] ON;
INSERT INTO [AssistantContentGeneratorQueries] ([ID], [APP], [CreatedAt], [CreatedBy], [Description], [GeneratorType], [Key], [SQLQuery], [Title], [UpdatedAt], [UpdatedBy])
VALUES (1, N'PMO', NULL, N'System', N'The workplan section specifically targets milestones that require immediate attention. The system filters milestones based on the following criteria:Timeframe: Next 7 daysCalculated Status: Not CompletedPriority: High, Medium, etc.Reporting Level: Executive, etc.', N'ProjectStatus', N'EXECUTIVE_SUMMARY_WORKPLAN', N'WITH PriorityTasks AS (SELECT WP.Title, WP.TaskDueDate, WP.ReportingLevelId, WP.Priority, WP.WorkPlanTaskType, CASE WHEN WP.Priority = ''(1) High'' THEN 1 WHEN WP.Priority = ''(2) Medium'' THEN 2 WHEN WP.Priority = ''(3) Low'' THEN 3 END AS PriorityRank FROM Workplan WP WHERE WP.WorkPlanTaskType IN (''Milestone'') AND WP.TimeBasedCalculatedStatusId NOT IN (6, 20, 23, 26, 28, 29, 31) AND WP.Priority IN (''(1) High'', ''(2) Medium'', ''(3) Low'') AND WP.ReportingLevelId IN (4, 5) AND WP.TaskDueDate <= DATEADD(day, 7, CURRENT_TIMESTAMP) AND WP.ProjectTeamId = {{ProjectTeam}}), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.Title, PT.TaskDueDate, PT.ReportingLevelId, PT.Priority, PT.WorkPlanTaskType FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Executive Summary Workplan', NULL, N'System'),
(2, N'PMO', NULL, N'System', N'The system identifies high-priority risks and issues that need to be addressed promptly. The criteria for this search are:Timeframe: Whole history and next 7 daysCalculated Status: Not CompletedPriority: High or CriticalReporting Level: Executive', N'ProjectStatus', N'EXECUTIVE_SUMMARY_RISKS_ISSUES', N'WITH PriorityTasks AS (SELECT RAI.IssueRiskCategory, RAI.TimeBasedCalculatedStatusId, RAI.ItemDescription, RAI.ItemDueDate, RAI.ItemPriority, RAI.Title, RAI.ReportingLevelId, CASE WHEN RAI.ItemPriority = ''Critical'' THEN 1 WHEN RAI.ItemPriority = ''High'' THEN 2 WHEN RAI.ItemPriority = ''Medium'' THEN 3 WHEN RAI.ItemPriority = ''Low'' THEN 4 END AS PriorityRank FROM RisksAndIssues RAI WHERE RAI.TimeBasedCalculatedStatusId NOT IN (6, 20, 23, 26, 28, 29, 31) AND RAI.ItemPriority IN (''Critical'', ''High'', ''Medium'', ''Low'') AND RAI.ReportingLevelId IN (4, 5) AND RAI.ItemDueDate <= DATEADD(day, 7, CURRENT_TIMESTAMP) AND RAI.ProjectTeamId = {{ProjectTeam}}), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.IssueRiskCategory, PT.TimeBasedCalculatedStatusId, PT.ItemDescription, PT.ItemDueDate, PT.ItemPriority, PT.Title, PT.ReportingLevelId FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Executive Summary Risks and Issues', NULL, N'System'),
(3, N'PMO', NULL, N'System', N'Actions are tasks or steps that need to be taken to move the project forward. The system searches for actions using the following parameters:Timeframe: Whole history and next 7 daysProgress Status: Not CompletedPriority: High or CriticalReporting Level: Executive', N'ProjectStatus', N'EXECUTIVE_SUMMARY_ACTIONS', N'WITH PriorityTasks AS (SELECT ACT.Title, ACT.ItemDescription, ACT.ProjectTeamId, ACT.ItemPriority, ACT.ItemDueDate, CASE WHEN ACT.ItemPriority = ''Critical'' THEN 1 WHEN ACT.ItemPriority = ''High'' THEN 2 WHEN ACT.ItemPriority = ''Medium'' THEN 3 WHEN ACT.ItemPriority = ''Low'' THEN 4 END AS PriorityRank FROM Actions ACT WHERE ACT.ItemStatusId NOT IN (6, 20, 23, 26, 28, 29, 31) AND ACT.ItemPriority IN (''Critical'', ''High'', ''Medium'', ''Low'') AND ACT.ReportingLevelId IN (4, 5) AND ACT.ItemDueDate <= DATEADD(day, 7, CURRENT_TIMESTAMP) AND ACT.ProjectTeamId = {{ProjectTeam}}), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.Title, PT.ItemDescription, PT.ProjectTeamId, PT.ItemPriority, PT.ItemDueDate FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Executive Summary Actions', NULL, N'System'),
(4, N'PMO', NULL, N'System', N'Decisions are critical choices that need to be made regarding the project''s direction. The system searches for decisions that are pending using these criteria:Timeframe: Whole history and next 7 daysCalculated Status: Not CompletedPriority: High or CriticalReporting Level: Executive', N'ProjectStatus', N'EXECUTIVE_SUMMARY_DECISIONS', N'WITH PriorityTasks AS (SELECT DCS.Title, DCS.ItemDescription, DCS.ProjectTeamId, DCS.ItemPriority, DCS.ItemDueDate, CASE WHEN DCS.ItemPriority = ''Critical'' THEN 1 WHEN DCS.ItemPriority = ''High'' THEN 2 WHEN DCS.ItemPriority = ''Medium'' THEN 3 WHEN DCS.ItemPriority = ''Low'' THEN 4 END AS PriorityRank FROM Decisions DCS WHERE DCS.ItemStatusId NOT IN (6, 20, 23, 26, 28, 29, 31) AND DCS.ItemPriority IN (''Critical'', ''High'', ''Medium'', ''Low'') AND DCS.ReportingLevelId IN (4, 5) AND DCS.ItemDueDate <= DATEADD(day, 7, CURRENT_TIMESTAMP) AND DCS.ProjectTeamId = {{ProjectTeam}}), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.Title, PT.ItemDescription, PT.ProjectTeamId, PT.ItemPriority, PT.ItemDueDate FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Executive Summary Decisions', NULL, N'System'),
(5, N'PMO', NULL, N'System', N'The system identifies high-priority interdependencies that need to be addressed promptly. The criteria for this search are: Timeframe: Whole history and next 7 days Calculated Status: Not Completed Priority: High or Critical', N'ProjectStatus', N'EXECUTIVE_SUMMARY_INTERDEPENDENCIES', N'WITH PriorityTasks AS (SELECT ID.Title, ID.ProviderProjectTeamId, ID.ReceiverProjectTeamId, ID.ItemPriority, ID.ItemDueDate, CASE WHEN ID.ItemPriority = ''Critical'' THEN 1 WHEN ID.ItemPriority = ''High'' THEN 2 WHEN ID.ItemPriority = ''Medium'' THEN 3 WHEN ID.ItemPriority = ''Low'' THEN 4 END AS PriorityRank FROM Interdependencies ID WHERE ID.InterdependencyStatusId NOT IN (6, 20, 23, 26, 28, 29, 31) AND ID.ItemPriority IN (''Critical'', ''High'', ''Medium'', ''Low'') AND ID.ReportingLevelId IN (4, 5) AND ID.ItemDueDate <= DATEADD(day, 7, CURRENT_TIMESTAMP) AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}})), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.Title, PT.ProviderProjectTeamId, PT.ReceiverProjectTeamId, PT.ItemPriority, PT.ItemDueDate FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Executive Summary Interdependencies', NULL, N'System'),
(6, N'PMO', NULL, N'System', N'The Workplan section highlights the milestones or tasks that have been successfully completed in the past week. Filters include: Timeframe: Last 7 days Calculated Status: Closed Priority: High Reporting Level: Executive or Global.', N'ProjectStatus', N'ACCOMPLISHMENTS_WORKPLAN', N'WITH PriorityTasks AS (SELECT WP.Title, WP.TaskDueDate, WP.ReportingLevelId, WP.Priority, WP.WorkPlanTaskType, CASE WHEN WP.Priority = ''(1) High'' THEN 1 WHEN WP.Priority = ''(2) Medium'' THEN 2 WHEN WP.Priority = ''(3) Low'' THEN 3 END AS PriorityRank FROM Workplan WP WHERE WP.WorkPlanTaskType IN (''Milestone'',''Task'') AND WP.TimeBasedCalculatedStatusId = 26 AND WP.Priority IN (''(1) High'', ''(2) Medium'', ''(3) Low'') AND WP.ReportingLevelId IN (4, 5) AND WP.TaskDueDate >= DATEADD(day, -7, CAST(GETDATE() AS DATE)) AND WP.TaskDueDate < CAST(GETDATE() AS DATE) AND WP.ProjectTeamId = {{ProjectTeam}}), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.Title, PT.TaskDueDate, PT.ReportingLevelId, PT.Priority, PT.WorkPlanTaskType FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Accomplishments Workplan', NULL, N'System'),
(7, N'PMO', NULL, N'System', N'This section identifies risks and issues resolved within the last 7 days. Filters include: Timeframe: Last 7 days Calculated Status: Closed Priority: High or Critical Reporting Level: Executive or Global.', N'ProjectStatus', N'ACCOMPLISHMENTS_RISKS_ISSUES', N'WITH PriorityTasks AS (SELECT RAI.IssueRiskCategory, RAI.TimeBasedCalculatedStatusId, RAI.ItemDescription, RAI.ItemDueDate, RAI.ItemPriority, RAI.Title, RAI.ReportingLevelId, CASE WHEN RAI.ItemPriority = ''Critical'' THEN 1 WHEN RAI.ItemPriority = ''High'' THEN 2 WHEN RAI.ItemPriority = ''Medium'' THEN 3 WHEN RAI.ItemPriority = ''Low'' THEN 4 END AS PriorityRank FROM RisksAndIssues RAI WHERE RAI.TimeBasedCalculatedStatusId =26 AND RAI.ItemPriority IN (''Critical'', ''High'', ''Medium'', ''Low'') AND RAI.ReportingLevelId IN (4, 5) AND RAI.ItemDueDate >= DATEADD(day, -7, CAST(GETDATE() AS DATE)) AND RAI.ItemDueDate < CAST(GETDATE() AS DATE) AND RAI.ProjectTeamId = {{ProjectTeam}}), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.IssueRiskCategory, PT.TimeBasedCalculatedStatusId, PT.ItemDescription, PT.ItemDueDate, PT.ItemPriority, PT.Title, PT.ReportingLevelId FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Accomplishments Risks and Issues', NULL, N'System'),
(8, N'PMO', NULL, N'System', N'Actions completed in the past week. Filters include: Progress Status: Closed Priority: High or Critical Reporting Level: Executive or Global.', N'ProjectStatus', N'ACCOMPLISHMENTS_ACTIONS', N'WITH PriorityTasks AS (SELECT ACT.Title, ACT.ItemDescription, ACT.ProjectTeamId, ACT.ItemPriority, ACT.ItemDueDate, CASE WHEN ACT.ItemPriority = ''Critical'' THEN 1 WHEN ACT.ItemPriority = ''High'' THEN 2 WHEN ACT.ItemPriority = ''Medium'' THEN 3 WHEN ACT.ItemPriority = ''Low'' THEN 4 END AS PriorityRank FROM Actions ACT WHERE ACT.ItemStatusId = 26 AND ACT.ItemPriority IN (''Critical'', ''High'', ''Medium'', ''Low'') AND ACT.ReportingLevelId IN (4, 5) AND ACT.ItemDueDate >= DATEADD(day, -7, CAST(GETDATE() AS DATE)) AND ACT.ItemDueDate < CAST(GETDATE() AS DATE) AND ACT.ProjectTeamId = {{ProjectTeam}}), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.Title, PT.ItemDescription, PT.ProjectTeamId, PT.ItemPriority, PT.ItemDueDate FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Accomplishments Actions', NULL, N'System'),
(9, N'PMO', NULL, N'System', N'Decisions made and closed in the past week. Filters include: Calculated Status: Closed Priority: High or Critical Reporting Level: Executive or Global.', N'ProjectStatus', N'ACCOMPLISHMENTS_DECISIONS', N'WITH PriorityTasks AS (SELECT DCS.Title, DCS.ItemDescription, DCS.ProjectTeamId, DCS.ItemPriority, DCS.ItemDueDate, CASE WHEN DCS.ItemPriority = ''Critical'' THEN 1 WHEN DCS.ItemPriority = ''High'' THEN 2 WHEN DCS.ItemPriority = ''Medium'' THEN 3 WHEN DCS.ItemPriority = ''Low'' THEN 4 END AS PriorityRank FROM Decisions DCS WHERE DCS.ItemStatusId =26 AND DCS.ItemPriority IN (''Critical'', ''High'', ''Medium'', ''Low'') AND DCS.ReportingLevelId IN (4, 5) AND DCS.ItemDueDate >= DATEADD(day, -7, CAST(GETDATE() AS DATE)) AND DCS.ItemDueDate < CAST(GETDATE() AS DATE) AND DCS.ProjectTeamId = {{ProjectTeam}}), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.Title, PT.ItemDescription, PT.ProjectTeamId, PT.ItemPriority, PT.ItemDueDate FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Accomplishments Decisions', NULL, N'System'),
(10, N'PMO', NULL, N'System', N'The system identifies high-priority interdependencies that need to be addressed promptly. The criteria for this search are: Calculated Status: Closed Priority: Critical, High Reporting Level: Executive, Global', N'ProjectStatus', N'ACCOMPLISHMENTS_INTERDEPENDENCIES', N'WITH PriorityTasks AS (SELECT ID.Title, ID.ProviderProjectTeamId, ID.ReceiverProjectTeamId, ID.ItemPriority, ID.ItemDueDate, CASE WHEN ID.ItemPriority = ''Critical'' THEN 1 WHEN ID.ItemPriority = ''High'' THEN 2 WHEN ID.ItemPriority = ''Medium'' THEN 3 WHEN ID.ItemPriority = ''Low'' THEN 4 END AS PriorityRank FROM Interdependencies ID WHERE ID.InterdependencyStatusId =26 AND ID.ItemPriority IN (''Critical'', ''High'', ''Medium'', ''Low'') AND ID.ReportingLevelId IN (4, 5) AND ID.ItemDueDate >= DATEADD(day, -7, CAST(GETDATE() AS DATE)) AND ID.ItemDueDate < CAST(GETDATE() AS DATE) AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}})), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.Title, PT.ProviderProjectTeamId, PT.ReceiverProjectTeamId, PT.ItemPriority, PT.ItemDueDate FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Accomplishments Interdependencies', NULL, N'System'),
(11, N'PMO', NULL, N'System', N'The Workplan section outlines the upcoming milestones or tasks for the next week. Filters include: Timeframe: Next 7 days Calculated Status: On Track Priority: High, Medium, etc. Reporting Level: Executive, Global.', N'ProjectStatus', N'NEXT_STEPS_WORKPLAN', N'WITH PriorityTasks AS (SELECT WP.Title, WP.TaskDueDate, WP.ReportingLevelId, WP.Priority, WP.WorkPlanTaskType, CASE WHEN WP.Priority = ''(1) High'' THEN 1 WHEN WP.Priority = ''(2) Medium'' THEN 2 WHEN WP.Priority = ''(3) Low'' THEN 3 END AS PriorityRank FROM Workplan WP WHERE WP.WorkPlanTaskType IN (''Milestone'',''Task'') AND WP.TimeBasedCalculatedStatusId NOT IN (26, 6, 20, 23, 28, 29, 31) AND WP.Priority IN (''(1) High'', ''(2) Medium'', ''(3) Low'') AND WP.ReportingLevelId IN (4, 5) AND WP.TaskDueDate >= GETDATE() AND WP.TaskDueDate <= DATEADD(day, 7, CURRENT_TIMESTAMP) AND WP.ProjectTeamId = {{ProjectTeam}}), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.Title, PT.TaskDueDate, PT.ReportingLevelId, PT.Priority, PT.WorkPlanTaskType FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Next Steps Workplan', NULL, N'System'),
(12, N'PMO', NULL, N'System', N'The system identifies high-priority risks and issues that need to be addressed promptly. Filters include: Timeframe: Next 7 days Calculated Status: On Track Priority: High, Medium, etc. Reporting Level: Executive, Global.', N'ProjectStatus', N'NEXT_STEPS_RISKS_ISSUES', N'WITH PriorityTasks AS (SELECT RAI.IssueRiskCategory, RAI.TimeBasedCalculatedStatusId, RAI.ItemDescription, RAI.ItemDueDate, RAI.ItemPriority, RAI.Title, RAI.ReportingLevelId, CASE WHEN RAI.ItemPriority = ''Critical'' THEN 1 WHEN RAI.ItemPriority = ''High'' THEN 2 WHEN RAI.ItemPriority = ''Medium'' THEN 3 WHEN RAI.ItemPriority = ''Low'' THEN 4 END AS PriorityRank FROM RisksAndIssues RAI WHERE RAI.TimeBasedCalculatedStatusId NOT IN (26, 6, 20, 23, 28, 29, 31) AND RAI.ItemPriority IN (''Critical'', ''High'', ''Medium'', ''Low'') AND RAI.ReportingLevelId IN (4, 5) AND RAI.ItemDueDate >= GETDATE() AND RAI.ItemDueDate <= DATEADD(day, 7, CURRENT_TIMESTAMP) AND RAI.ProjectTeamId = {{ProjectTeam}}), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.IssueRiskCategory, PT.TimeBasedCalculatedStatusId, PT.ItemDescription, PT.ItemDueDate, PT.ItemPriority, PT.Title, PT.ReportingLevelId FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Next Steps Risks and Issues', NULL, N'System'),
(13, N'PMO', NULL, N'System', N'Actions are tasks or steps that need to be taken to move the project forward. Filters include: Timeframe: Next 7 days Calculated Status: On Track Priority: High, Medium, etc. Reporting Level: Executive, Global.', N'ProjectStatus', N'NEXT_STEPS_ACTIONS', N'WITH PriorityTasks AS (SELECT ACT.Title, ACT.ItemDescription, ACT.ProjectTeamId, ACT.ItemPriority, ACT.ItemDueDate, CASE WHEN ACT.ItemPriority = ''Critical'' THEN 1 WHEN ACT.ItemPriority = ''High'' THEN 2 WHEN ACT.ItemPriority = ''Medium'' THEN 3 WHEN ACT.ItemPriority = ''Low'' THEN 4 END AS PriorityRank FROM Actions ACT WHERE ACT.ItemStatusId NOT IN (26, 6, 20, 23, 28, 29, 31) AND ACT.ItemPriority IN (''Critical'', ''High'', ''Medium'', ''Low'') AND ACT.ReportingLevelId IN (4, 5) AND ACT.ItemDueDate >= GETDATE() AND ACT.ItemDueDate <= DATEADD(day, 7, CURRENT_TIMESTAMP) AND ACT.ProjectTeamId = {{ProjectTeam}}), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.Title, PT.ItemDescription, PT.ProjectTeamId, PT.ItemPriority, PT.ItemDueDate FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Next Steps Actions', NULL, N'System'),
(14, N'PMO', NULL, N'System', N'Decisions are critical choices that need to be made regarding the project''s direction. Filters include: Timeframe: Next 7 days Calculated Status: On Track Priority: High, Medium, etc. Reporting Level: Executive, Global.', N'ProjectStatus', N'NEXT_STEPS_DECISIONS', N'WITH PriorityTasks AS (SELECT DCS.Title, DCS.ItemDescription, DCS.ProjectTeamId, DCS.ItemPriority, DCS.ItemDueDate, CASE WHEN DCS.ItemPriority = ''Critical'' THEN 1 WHEN DCS.ItemPriority = ''High'' THEN 2 WHEN DCS.ItemPriority = ''Medium'' THEN 3 WHEN DCS.ItemPriority = ''Low'' THEN 4 END AS PriorityRank FROM Decisions DCS WHERE DCS.ItemStatusId NOT IN (26, 6, 20, 23, 28, 29, 31) AND DCS.ItemPriority IN (''Critical'', ''High'', ''Medium'', ''Low'') AND DCS.ReportingLevelId IN (4, 5) AND DCS.ItemDueDate >= GETDATE() AND DCS.ItemDueDate <= DATEADD(day, 7, CURRENT_TIMESTAMP) AND DCS.ProjectTeamId = {{ProjectTeam}}), HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.Title, PT.ItemDescription, PT.ProjectTeamId, PT.ItemPriority, PT.ItemDueDate FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Next Steps Decisions', NULL, N'System'),
(15, N'PMO', NULL, N'System', N'The system identifies high-priority interdependencies that need to be addressed promptly. The criteria for this search are: Calculated Status: On Track Priority: Critical, High, Medium, Low (cascading) Reporting Level: Executive, Global', N'ProjectStatus', N'NEXT_STEPS_INTERDEPENDENCIES', N'WITH PriorityTasks AS (SELECT ID.Title, ID.ProviderProjectTeamId, ID.ReceiverProjectTeamId, ID.ItemPriority, ID.ItemDueDate, CASE WHEN ID.ItemPriority = ''Critical'' THEN 1 WHEN ID.ItemPriority = ''High'' THEN 2 WHEN ID.ItemPriority = ''Medium'' THEN 3 WHEN ID.ItemPriority = ''Low'' THEN 4 END AS PriorityRank FROM Interdependencies ID WHERE ID.InterdependencyStatusId NOT IN (6, 20, 23, 26, 28, 29, 31) AND ID.ItemPriority IN (''Critical'', ''High'', ''Medium'', ''Low'') AND ID.ReportingLevelId IN (4, 5) AND ID.ItemDueDate <= DATEADD(day, 7, CURRENT_TIMESTAMP) AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}})),HighestPriority AS (SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks) SELECT PT.Title, PT.ProviderProjectTeamId, PT.ReceiverProjectTeamId, PT.ItemPriority, PT.ItemDueDate FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank', N'Project Status Next Steps Interdependencies', NULL, N'System'),
(16, N'PMO', NULL, N'System', N'The Project Status section is crucial for understanding the overall health of the project. The system evaluates the project''s history to determine the overall status as: - At Risk: If any item is marked as "At Risk". - Behind Schedule: If any item is marked as "Behind Schedule". - On Track: If no items are marked as "At Risk" or "Behind Schedule".', N'ProjectStatus', N'PROJECT_STATUS_OVERALL_STATUS', N'SELECT CASE WHEN COUNT(CASE WHEN WorkPlanTaskStatusId = 1 THEN 1 END) > 0 THEN ''Behind Schedule'' WHEN COUNT(CASE WHEN WorkPlanTaskStatusId = 2 THEN 1 END) > 0 THEN ''At Risk'' ELSE ''On Track'' END AS GeneralStatus FROM WorkPlan WHERE ProjectTeamId = {{ProjectTeam}} AND TaskDueDate < GETDATE() AND TaskDueDate >= DATEADD(DAY, -7, GETDATE())', N'Project Status Overall Status', NULL, N'System');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'APP', N'CreatedAt', N'CreatedBy', N'Description', N'GeneratorType', N'Key', N'SQLQuery', N'Title', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[AssistantContentGeneratorQueries]'))
    SET IDENTITY_INSERT [AssistantContentGeneratorQueries] OFF;
GO

CREATE UNIQUE INDEX [IX_AssistantContentGeneratorQueries_Key] ON [AssistantContentGeneratorQueries] ([Key]);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20241129105639_ContentGenerationTableAndData_Migration4', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        WP.Title, ', nchar(13), nchar(10), N'        WP.TaskDueDate, ', nchar(13), nchar(10), N'        WP.ReportingLevelId, ', nchar(13), nchar(10), N'        WP.Priority, ', nchar(13), nchar(10), N'        WP.WorkPlanTaskType, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(1) High'' THEN 1', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(2) Normal'' THEN 2', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(3) Low'' THEN 3', nchar(13), nchar(10), N'            WHEN WP.Priority IS NULL OR WP.Priority= '''' THEN 4', nchar(13), nchar(10), N'        END AS PriorityRank', nchar(13), nchar(10), N'    FROM Workplan WP', nchar(13), nchar(10), N'    JOIN Statuses S ON WP.WorkPlanTaskStatusId = S.Id', nchar(13), nchar(10), N'    WHERE WP.WorkPlanTaskType IN (''Milestone'', ''Task'')', nchar(13), nchar(10), N'	AND S.[Key] NOT IN (''CANCELLED'')', nchar(13), nchar(10), N'    AND WP.HierarchyLevel <= 3', nchar(13), nchar(10), N'    AND WP.TaskDueDate BETWEEN DATEADD(day, -7, CURRENT_TIMESTAMP) AND DATEADD(day, 7, CURRENT_TIMESTAMP)', nchar(13), nchar(10), N'    AND WP.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.TaskDueDate, ', nchar(13), nchar(10), N'    PT.ReportingLevelId, ', nchar(13), nchar(10), N'    PT.Priority, ', nchar(13), nchar(10), N'    PT.WorkPlanTaskType', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;')
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        RAI.IssueRiskCategory, ', nchar(13), nchar(10), N'        RAI.ItemStatusId , ', nchar(13), nchar(10), N'        RAI.ItemDescription, ', nchar(13), nchar(10), N'        RAI.ItemDueDate, ', nchar(13), nchar(10), N'        RAI.ItemPriority, ', nchar(13), nchar(10), N'        RAI.Title, ', nchar(13), nchar(10), N'        RAI.ReportingLevelId, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority IS NULL OR RAI.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank', nchar(13), nchar(10), N'    FROM RisksAndIssues RAI', nchar(13), nchar(10), N'    JOIN Statuses S ON RAI.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'')', nchar(13), nchar(10), N'    AND RAI.ItemDueDate BETWEEN DATEADD(day, -7, CURRENT_TIMESTAMP) AND DATEADD(day, 7, CURRENT_TIMESTAMP)', nchar(13), nchar(10), N'    AND RAI.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.IssueRiskCategory, ', nchar(13), nchar(10), N'    PT.ItemStatusId , ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ItemDueDate, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ReportingLevelId', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        ACT.Title, ', nchar(13), nchar(10), N'        ACT.ItemDescription, ', nchar(13), nchar(10), N'        ACT.ProjectTeamId, ', nchar(13), nchar(10), N'        ACT.ItemPriority, ', nchar(13), nchar(10), N'        ACT.ItemDueDate, ', nchar(13), nchar(10), N'        ACT.ReportingLevelId, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority IS NULL OR ACT.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank', nchar(13), nchar(10), N'    FROM Actions ACT', nchar(13), nchar(10), N'    JOIN Statuses S ON ACT.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'')', nchar(13), nchar(10), N'    AND ACT.ItemDueDate BETWEEN DATEADD(day, -7, CURRENT_TIMESTAMP) AND DATEADD(day, 7, CURRENT_TIMESTAMP)', nchar(13), nchar(10), N'    AND ACT.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ProjectTeamId, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.ItemDueDate', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        DCS.Title, ', nchar(13), nchar(10), N'        DCS.ItemDescription, ', nchar(13), nchar(10), N'        DCS.ProjectTeamId, ', nchar(13), nchar(10), N'        DCS.ItemPriority, ', nchar(13), nchar(10), N'        DCS.ItemDueDate, ', nchar(13), nchar(10), N'        DCS.ReportingLevelId, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority IS NULL OR DCS.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank', nchar(13), nchar(10), N'    FROM Decisions DCS', nchar(13), nchar(10), N'    JOIN Statuses S ON DCS.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'')', nchar(13), nchar(10), N'    AND DCS.ItemDueDate BETWEEN DATEADD(day, -7, CURRENT_TIMESTAMP) AND DATEADD(day, 7, CURRENT_TIMESTAMP)', nchar(13), nchar(10), N'    AND DCS.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ProjectTeamId, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.ItemDueDate', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH FilteredInterdependencies AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        ID.Title, ', nchar(13), nchar(10), N'        ID.ProviderProjectTeamId, ', nchar(13), nchar(10), N'        ID.ReceiverProjectTeamId, ', nchar(13), nchar(10), N'        ID.ItemDueDate, ', nchar(13), nchar(10), N'        ID.ReportingLevelId', nchar(13), nchar(10), N'    FROM Interdependencies ID', nchar(13), nchar(10), N'    JOIN InterdependencyStatuses S ON ID.InterdependencyStatusId = S.Id ', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'')', nchar(13), nchar(10), N'    AND ID.ItemDueDate BETWEEN DATEADD(day, -7, CURRENT_TIMESTAMP) AND DATEADD(day, 7, CURRENT_TIMESTAMP)', nchar(13), nchar(10), N'    AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}})', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    Title, ', nchar(13), nchar(10), N'    ProviderProjectTeamId, ', nchar(13), nchar(10), N'    ReceiverProjectTeamId, ', nchar(13), nchar(10), N'    ItemDueDate', nchar(13), nchar(10), N'FROM FilteredInterdependencies;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        WP.Title, ', nchar(13), nchar(10), N'        WP.TaskDueDate, ', nchar(13), nchar(10), N'        WP.ReportingLevelId, ', nchar(13), nchar(10), N'        WP.Priority, ', nchar(13), nchar(10), N'        WP.WorkPlanTaskType, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(1) High'' THEN 1', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(2) Normal'' THEN 2', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(3) Low'' THEN 3', nchar(13), nchar(10), N'            WHEN WP.Priority IS NULL OR  WP.Priority = '''' THEN 4', nchar(13), nchar(10), N'        END AS PriorityRank', nchar(13), nchar(10), N'    FROM Workplan WP', nchar(13), nchar(10), N'    JOIN Statuses S ON WP.WorkPlanTaskStatusId= S.Id', nchar(13), nchar(10), N'    WHERE WP.WorkPlanTaskType IN (''Milestone'', ''Task'')', nchar(13), nchar(10), N'    AND S.[Key]  IN (''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND WP.TaskDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND GETDATE()', nchar(13), nchar(10), N'    AND WP.HierarchyLevel <= 3', nchar(13), nchar(10), N'    AND WP.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.TaskDueDate, ', nchar(13), nchar(10), N'    PT.ReportingLevelId, ', nchar(13), nchar(10), N'    PT.Priority, ', nchar(13), nchar(10), N'    PT.WorkPlanTaskType', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        RAI.IssueRiskCategory, ', nchar(13), nchar(10), N'        RAI.TimeBasedCalculatedStatusId, ', nchar(13), nchar(10), N'        RAI.ItemDescription, ', nchar(13), nchar(10), N'        RAI.ItemDueDate, ', nchar(13), nchar(10), N'        RAI.ItemPriority, ', nchar(13), nchar(10), N'        RAI.Title, ', nchar(13), nchar(10), N'        RAI.ReportingLevelId, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority IS NULL OR RAI.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank', nchar(13), nchar(10), N'    FROM RisksAndIssues RAI', nchar(13), nchar(10), N'    JOIN Statuses S ON RAI.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND RAI.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND GETDATE()', nchar(13), nchar(10), N'   AND RAI.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.IssueRiskCategory, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ItemDueDate, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ReportingLevelId', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        ACT.Title, ', nchar(13), nchar(10), N'        ACT.ItemDescription, ', nchar(13), nchar(10), N'        ACT.ProjectTeamId, ', nchar(13), nchar(10), N'        ACT.ItemPriority, ', nchar(13), nchar(10), N'        ACT.ItemDueDate, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority IS NULL OR ACT.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank', nchar(13), nchar(10), N'    FROM Actions ACT', nchar(13), nchar(10), N'    JOIN Statuses S ON ACT.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND ACT.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND GETDATE()', nchar(13), nchar(10), N'    AND ACT.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ProjectTeamId, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.ItemDueDate', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        DCS.Title, ', nchar(13), nchar(10), N'        DCS.ItemDescription, ', nchar(13), nchar(10), N'        DCS.ProjectTeamId, ', nchar(13), nchar(10), N'        DCS.ItemPriority, ', nchar(13), nchar(10), N'        DCS.ItemDueDate, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority IS NULL OR DCS.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank', nchar(13), nchar(10), N'    FROM Decisions DCS', nchar(13), nchar(10), N'    JOIN Statuses S ON DCS.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND DCS.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND GETDATE()', nchar(13), nchar(10), N'    AND DCS.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ProjectTeamId, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.ItemDueDate', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH FilteredInterdependencies AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        ID.Title, ', nchar(13), nchar(10), N'        ID.ProviderProjectTeamId, ', nchar(13), nchar(10), N'        ID.ReceiverProjectTeamId, ', nchar(13), nchar(10), N'        ID.ItemDueDate, ', nchar(13), nchar(10), N'        ID.ReportingLevelId', nchar(13), nchar(10), N'    FROM Interdependencies ID', nchar(13), nchar(10), N'    JOIN InterdependencyStatuses S ON ID.InterdependencyStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND ID.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND GETDATE()', nchar(13), nchar(10), N'    AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}})', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    Title, ', nchar(13), nchar(10), N'    ProviderProjectTeamId, ', nchar(13), nchar(10), N'    ReceiverProjectTeamId, ', nchar(13), nchar(10), N'    ItemDueDate', nchar(13), nchar(10), N'FROM FilteredInterdependencies;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        WP.Title, ', nchar(13), nchar(10), N'        WP.TaskDueDate, ', nchar(13), nchar(10), N'        WP.ReportingLevelId, ', nchar(13), nchar(10), N'        WP.Priority, ', nchar(13), nchar(10), N'        WP.WorkPlanTaskType,', nchar(13), nchar(10), N'		S.Title as WorkplanTakStatus,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(1) High'' THEN 1', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(2) Normal'' THEN 2', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(3) Low'' THEN 3', nchar(13), nchar(10), N'            WHEN WP.Priority IS NULL OR WP.Priority = '''' THEN 4', nchar(13), nchar(10), N'        END AS PriorityRank', nchar(13), nchar(10), N'    FROM Workplan WP', nchar(13), nchar(10), N'    JOIN Statuses S ON WP.WorkPlanTaskStatusId = S.Id', nchar(13), nchar(10), N'    WHERE WP.WorkPlanTaskType IN (''Milestone'', ''Task'')', nchar(13), nchar(10), N'    AND S.[Key] NOT IN (''CLOSED'', ''CANCELLED'', ''COMPLETED'')', nchar(13), nchar(10), N'	AND WP.HierarchyLevel <= 3', nchar(13), nchar(10), N'    AND WP.TaskDueDate BETWEEN DATEADD(day, -7, CURRENT_TIMESTAMP) AND DATEADD(day, 7, CURRENT_TIMESTAMP)', nchar(13), nchar(10), N'    AND WP.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.TaskDueDate, ', nchar(13), nchar(10), N'    PT.ReportingLevelId, ', nchar(13), nchar(10), N'    PT.Priority, ', nchar(13), nchar(10), N'    PT.WorkPlanTaskType,', nchar(13), nchar(10), N'	PT.WorkplanTakStatus', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10))
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        RAI.IssueRiskCategory, ', nchar(13), nchar(10), N'        S.Title AS ItemStatus,', nchar(13), nchar(10), N'        RAI.ItemDescription, ', nchar(13), nchar(10), N'        RAI.ItemDueDate, ', nchar(13), nchar(10), N'        RAI.ItemPriority, ', nchar(13), nchar(10), N'        RAI.Title, ', nchar(13), nchar(10), N'        RAI.ReportingLevelId,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority IS NULL OR RAI.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank', nchar(13), nchar(10), N'    FROM RisksAndIssues RAI', nchar(13), nchar(10), N'    JOIN Statuses S ON RAI.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND RAI.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND DATEADD(day, 7, GETDATE())', nchar(13), nchar(10), N'    AND RAI.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.IssueRiskCategory, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ItemDueDate, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ReportingLevelId,', nchar(13), nchar(10), N'	PT.ItemStatus', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        ACT.Title, ', nchar(13), nchar(10), N'        ACT.ItemDescription, ', nchar(13), nchar(10), N'        ACT.ProjectTeamId, ', nchar(13), nchar(10), N'        ACT.ItemPriority, ', nchar(13), nchar(10), N'        ACT.ItemDueDate, ', nchar(13), nchar(10), N'        S.Title AS ItemStatus,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority IS NULL OR ACT.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank', nchar(13), nchar(10), N'    FROM Actions ACT', nchar(13), nchar(10), N'    JOIN Statuses S ON ACT.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND ACT.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND DATEADD(day, 7, GETDATE())', nchar(13), nchar(10), N'    AND ACT.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ProjectTeamId, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.ItemDueDate,', nchar(13), nchar(10), N'    PT.ItemStatus', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        DCS.Title, ', nchar(13), nchar(10), N'        DCS.ItemDescription, ', nchar(13), nchar(10), N'        DCS.ProjectTeamId, ', nchar(13), nchar(10), N'        DCS.ItemPriority, ', nchar(13), nchar(10), N'        DCS.ItemDueDate, ', nchar(13), nchar(10), N'        S.Title AS ItemStatus,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority IS NULL OR DCS.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank', nchar(13), nchar(10), N'    FROM Decisions DCS', nchar(13), nchar(10), N'    JOIN Statuses S ON DCS.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND DCS.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND DATEADD(day, 7, GETDATE())', nchar(13), nchar(10), N'    AND DCS.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ProjectTeamId, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.ItemDueDate,', nchar(13), nchar(10), N'    PT.ItemStatus', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH FilteredInterdependencies AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        ID.Title, ', nchar(13), nchar(10), N'        ID.ProviderProjectTeamId, ', nchar(13), nchar(10), N'        ID.ReceiverProjectTeamId, ', nchar(13), nchar(10), N'        ID.ItemDueDate, ', nchar(13), nchar(10), N'        RL.[Key] AS ReportingLevel,', nchar(13), nchar(10), N'        S.Title AS ItemStatus', nchar(13), nchar(10), N'    FROM Interdependencies ID', nchar(13), nchar(10), N'    JOIN InterdependencyStatuses S ON ID.InterdependencyStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'	AND ID.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND DATEADD(day, 7, GETDATE())', nchar(13), nchar(10), N'    AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}})', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    Title, ', nchar(13), nchar(10), N'    ProviderProjectTeamId, ', nchar(13), nchar(10), N'    ReceiverProjectTeamId, ', nchar(13), nchar(10), N'    ItemDueDate, ', nchar(13), nchar(10), N'    ReportingLevel,', nchar(13), nchar(10), N'    ItemStatus', nchar(13), nchar(10), N'FROM FilteredInterdependencies;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20241209131913_ContentGenerationUpdateData_Migration4', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        WP.Title, ', nchar(13), nchar(10), N'        WP.TaskDueDate, ', nchar(13), nchar(10), N'        WP.ReportingLevelId, ', nchar(13), nchar(10), N'        WP.Priority, ', nchar(13), nchar(10), N'        WP.WorkPlanTaskType, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(1) High'' THEN 1', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(2) Normal'' THEN 2', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(3) Low'' THEN 3', nchar(13), nchar(10), N'            WHEN WP.Priority IS NULL OR WP.Priority= '''' THEN 4', nchar(13), nchar(10), N'        END AS PriorityRank,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN WP.TaskDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN WP.TaskDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title as StatusTitle', nchar(13), nchar(10), N'    FROM Workplan WP', nchar(13), nchar(10), N'    JOIN Statuses S ON WP.WorkPlanTaskStatusId = S.Id', nchar(13), nchar(10), N'    WHERE WP.WorkPlanTaskType IN (''Milestone'', ''Task'')', nchar(13), nchar(10), N'	AND S.[Key] NOT IN (''CANCELLED'')', nchar(13), nchar(10), N'    AND WP.HierarchyLevel <= 3', nchar(13), nchar(10), N'    AND WP.TaskDueDate BETWEEN DATEADD(day, -7, CURRENT_TIMESTAMP) AND DATEADD(day, 7, CURRENT_TIMESTAMP)', nchar(13), nchar(10), N'    AND WP.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.TaskDueDate, ', nchar(13), nchar(10), N'    PT.ReportingLevelId, ', nchar(13), nchar(10), N'    PT.Priority, ', nchar(13), nchar(10), N'    PT.WorkPlanTaskType,', nchar(13), nchar(10), N'    PT.ItemCategory,', nchar(13), nchar(10), N'    PT.StatusTitle', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        RAI.IssueRiskCategory, ', nchar(13), nchar(10), N'        RAI.ItemStatusId , ', nchar(13), nchar(10), N'        RAI.ItemDescription, ', nchar(13), nchar(10), N'        RAI.ItemDueDate, ', nchar(13), nchar(10), N'        RAI.ItemPriority, ', nchar(13), nchar(10), N'        RAI.Title, ', nchar(13), nchar(10), N'        RAI.ReportingLevelId, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority IS NULL OR RAI.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN RAI.ItemDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN RAI.ItemDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM RisksAndIssues RAI', nchar(13), nchar(10), N'    JOIN Statuses S ON RAI.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'')', nchar(13), nchar(10), N'    AND RAI.ItemDueDate BETWEEN DATEADD(day, -7, CURRENT_TIMESTAMP) AND DATEADD(day, 7, CURRENT_TIMESTAMP)', nchar(13), nchar(10), N'    AND RAI.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.IssueRiskCategory, ', nchar(13), nchar(10), N'    PT.ItemStatusId , ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ItemDueDate, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ReportingLevelId,', nchar(13), nchar(10), N'    PT.ItemCategory,', nchar(13), nchar(10), N'    PT.StatusTitle', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        ACT.Title, ', nchar(13), nchar(10), N'        ACT.ItemDescription, ', nchar(13), nchar(10), N'        ACT.ProjectTeamId, ', nchar(13), nchar(10), N'        ACT.ItemPriority, ', nchar(13), nchar(10), N'        ACT.ItemDueDate, ', nchar(13), nchar(10), N'        ACT.ReportingLevelId, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority IS NULL OR ACT.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN ACT.ItemDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN ACT.ItemDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM Actions ACT', nchar(13), nchar(10), N'    JOIN Statuses S ON ACT.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'')', nchar(13), nchar(10), N'    AND ACT.ItemDueDate BETWEEN DATEADD(day, -7, CURRENT_TIMESTAMP) AND DATEADD(day, 7, CURRENT_TIMESTAMP)', nchar(13), nchar(10), N'    AND ACT.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ProjectTeamId, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.ItemDueDate,', nchar(13), nchar(10), N'    PT.ItemCategory,', nchar(13), nchar(10), N'    PT.StatusTitle', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        DCS.Title, ', nchar(13), nchar(10), N'        DCS.ItemDescription, ', nchar(13), nchar(10), N'        DCS.ProjectTeamId, ', nchar(13), nchar(10), N'        DCS.ItemPriority, ', nchar(13), nchar(10), N'        DCS.ItemDueDate, ', nchar(13), nchar(10), N'        DCS.ReportingLevelId, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority IS NULL OR DCS.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN DCS.ItemDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN DCS.ItemDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM Decisions DCS', nchar(13), nchar(10), N'    JOIN Statuses S ON DCS.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'')', nchar(13), nchar(10), N'    AND DCS.ItemDueDate BETWEEN DATEADD(day, -7, CURRENT_TIMESTAMP) AND DATEADD(day, 7, CURRENT_TIMESTAMP)', nchar(13), nchar(10), N'    AND DCS.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ProjectTeamId, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.ItemDueDate,', nchar(13), nchar(10), N'    PT.ItemCategory,', nchar(13), nchar(10), N'    PT.StatusTitle', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH FilteredInterdependencies AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        ID.Title, ', nchar(13), nchar(10), N'        ID.ProviderProjectTeamId, ', nchar(13), nchar(10), N'        ID.ReceiverProjectTeamId, ', nchar(13), nchar(10), N'        ID.ItemDueDate, ', nchar(13), nchar(10), N'        ID.ReportingLevelId,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN ID.ItemDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN ID.ItemDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM Interdependencies ID', nchar(13), nchar(10), N'    JOIN InterdependencyStatuses S ON ID.InterdependencyStatusId = S.Id ', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'')', nchar(13), nchar(10), N'    AND ID.ItemDueDate BETWEEN DATEADD(day, -7, CURRENT_TIMESTAMP) AND DATEADD(day, 7, CURRENT_TIMESTAMP)', nchar(13), nchar(10), N'    AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}})', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    Title, ', nchar(13), nchar(10), N'    ProviderProjectTeamId, ', nchar(13), nchar(10), N'    ReceiverProjectTeamId, ', nchar(13), nchar(10), N'    ItemDueDate,', nchar(13), nchar(10), N'    ItemCategory,', nchar(13), nchar(10), N'    StatusTitle', nchar(13), nchar(10), N'FROM FilteredInterdependencies;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        WP.Title, ', nchar(13), nchar(10), N'        WP.TaskDueDate, ', nchar(13), nchar(10), N'        WP.ReportingLevelId, ', nchar(13), nchar(10), N'        WP.Priority, ', nchar(13), nchar(10), N'        WP.WorkPlanTaskType, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(1) High'' THEN 1', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(2) Normal'' THEN 2', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(3) Low'' THEN 3', nchar(13), nchar(10), N'            WHEN WP.Priority IS NULL OR  WP.Priority = '''' THEN 4', nchar(13), nchar(10), N'        END AS PriorityRank,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN WP.TaskDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN WP.TaskDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM Workplan WP', nchar(13), nchar(10), N'    JOIN Statuses S ON WP.WorkPlanTaskStatusId= S.Id', nchar(13), nchar(10), N'    WHERE WP.WorkPlanTaskType IN (''Milestone'', ''Task'')', nchar(13), nchar(10), N'    AND S.[Key]  IN (''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND WP.TaskDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND GETDATE()', nchar(13), nchar(10), N'    AND WP.HierarchyLevel <= 3', nchar(13), nchar(10), N'    AND WP.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.TaskDueDate, ', nchar(13), nchar(10), N'    PT.ReportingLevelId, ', nchar(13), nchar(10), N'    PT.Priority, ', nchar(13), nchar(10), N'    PT.WorkPlanTaskType,', nchar(13), nchar(10), N'    PT.ItemCategory,', nchar(13), nchar(10), N'    PT.StatusTitle', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        RAI.IssueRiskCategory, ', nchar(13), nchar(10), N'        RAI.TimeBasedCalculatedStatusId, ', nchar(13), nchar(10), N'        RAI.ItemDescription, ', nchar(13), nchar(10), N'        RAI.ItemDueDate, ', nchar(13), nchar(10), N'        RAI.ItemPriority, ', nchar(13), nchar(10), N'        RAI.Title, ', nchar(13), nchar(10), N'        RAI.ReportingLevelId, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority IS NULL OR RAI.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN RAI.ItemDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN RAI.ItemDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM RisksAndIssues RAI', nchar(13), nchar(10), N'    JOIN Statuses S ON RAI.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND RAI.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND GETDATE()', nchar(13), nchar(10), N'   AND RAI.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.IssueRiskCategory, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ItemDueDate, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ReportingLevelId,', nchar(13), nchar(10), N'    PT.ItemCategory,', nchar(13), nchar(10), N'    PT.StatusTitle', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        ACT.Title, ', nchar(13), nchar(10), N'        ACT.ItemDescription, ', nchar(13), nchar(10), N'        ACT.ProjectTeamId, ', nchar(13), nchar(10), N'        ACT.ItemPriority, ', nchar(13), nchar(10), N'        ACT.ItemDueDate, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority IS NULL OR ACT.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN ACT.ItemDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN ACT.ItemDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM Actions ACT', nchar(13), nchar(10), N'    JOIN Statuses S ON ACT.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND ACT.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND GETDATE()', nchar(13), nchar(10), N'    AND ACT.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ProjectTeamId, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.ItemDueDate,', nchar(13), nchar(10), N'    PT.ItemCategory,', nchar(13), nchar(10), N'    PT.StatusTitle', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        DCS.Title, ', nchar(13), nchar(10), N'        DCS.ItemDescription, ', nchar(13), nchar(10), N'        DCS.ProjectTeamId, ', nchar(13), nchar(10), N'        DCS.ItemPriority, ', nchar(13), nchar(10), N'        DCS.ItemDueDate, ', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority IS NULL OR DCS.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN DCS.ItemDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN DCS.ItemDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM Decisions DCS', nchar(13), nchar(10), N'    JOIN Statuses S ON DCS.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND DCS.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND GETDATE()', nchar(13), nchar(10), N'    AND DCS.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ProjectTeamId, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.ItemDueDate,', nchar(13), nchar(10), N'    PT.ItemCategory,', nchar(13), nchar(10), N'    PT.StatusTitle', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH FilteredInterdependencies AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        ID.Title, ', nchar(13), nchar(10), N'        ID.ProviderProjectTeamId, ', nchar(13), nchar(10), N'        ID.ReceiverProjectTeamId, ', nchar(13), nchar(10), N'        ID.ItemDueDate, ', nchar(13), nchar(10), N'        ID.ReportingLevelId,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN ID.ItemDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN ID.ItemDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM Interdependencies ID', nchar(13), nchar(10), N'    JOIN InterdependencyStatuses S ON ID.InterdependencyStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND ID.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND GETDATE()', nchar(13), nchar(10), N'    AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}})', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    Title, ', nchar(13), nchar(10), N'    ProviderProjectTeamId, ', nchar(13), nchar(10), N'    ReceiverProjectTeamId, ', nchar(13), nchar(10), N'    ItemDueDate,', nchar(13), nchar(10), N'    ItemCategory,', nchar(13), nchar(10), N'    StatusTitle', nchar(13), nchar(10), N'FROM FilteredInterdependencies;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        WP.Title, ', nchar(13), nchar(10), N'        WP.TaskDueDate, ', nchar(13), nchar(10), N'        WP.ReportingLevelId, ', nchar(13), nchar(10), N'        WP.Priority, ', nchar(13), nchar(10), N'        WP.WorkPlanTaskType,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(1) High'' THEN 1', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(2) Normal'' THEN 2', nchar(13), nchar(10), N'            WHEN WP.Priority = ''(3) Low'' THEN 3', nchar(13), nchar(10), N'            WHEN WP.Priority IS NULL OR WP.Priority = '''' THEN 4', nchar(13), nchar(10), N'        END AS PriorityRank,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN WP.TaskDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN WP.TaskDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM Workplan WP', nchar(13), nchar(10), N'    JOIN Statuses S ON WP.WorkPlanTaskStatusId = S.Id', nchar(13), nchar(10), N'    WHERE WP.WorkPlanTaskType IN (''Milestone'', ''Task'')', nchar(13), nchar(10), N'    AND S.[Key] NOT IN (''CLOSED'', ''CANCELLED'', ''COMPLETED'')', nchar(13), nchar(10), N'	AND WP.HierarchyLevel <= 3', nchar(13), nchar(10), N'    AND WP.TaskDueDate BETWEEN DATEADD(day, -7, CURRENT_TIMESTAMP) AND DATEADD(day, 7, CURRENT_TIMESTAMP)', nchar(13), nchar(10), N'    AND WP.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.TaskDueDate, ', nchar(13), nchar(10), N'    PT.ReportingLevelId, ', nchar(13), nchar(10), N'    PT.Priority, ', nchar(13), nchar(10), N'    PT.WorkPlanTaskType,', nchar(13), nchar(10), N'    PT.ItemCategory,', nchar(13), nchar(10), N'    PT.StatusTitle', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10))
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        RAI.IssueRiskCategory, ', nchar(13), nchar(10), N'        S.Title AS ItemStatus,', nchar(13), nchar(10), N'        RAI.ItemDescription, ', nchar(13), nchar(10), N'        RAI.ItemDueDate, ', nchar(13), nchar(10), N'        RAI.ItemPriority, ', nchar(13), nchar(10), N'        RAI.Title, ', nchar(13), nchar(10), N'        RAI.ReportingLevelId,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN RAI.ItemPriority IS NULL OR RAI.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN RAI.ItemDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN RAI.ItemDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM RisksAndIssues RAI', nchar(13), nchar(10), N'    JOIN Statuses S ON RAI.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND RAI.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND DATEADD(day, 7, GETDATE())', nchar(13), nchar(10), N'    AND RAI.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.IssueRiskCategory, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ItemDueDate, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ReportingLevelId,', nchar(13), nchar(10), N'    PT.ItemStatus,', nchar(13), nchar(10), N'    PT.ItemCategory,', nchar(13), nchar(10), N'    PT.StatusTitle', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        ACT.Title, ', nchar(13), nchar(10), N'        ACT.ItemDescription, ', nchar(13), nchar(10), N'        ACT.ProjectTeamId, ', nchar(13), nchar(10), N'        ACT.ItemPriority, ', nchar(13), nchar(10), N'        ACT.ItemDueDate, ', nchar(13), nchar(10), N'        S.Title AS ItemStatus,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN ACT.ItemPriority IS NULL OR ACT.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN ACT.ItemDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN ACT.ItemDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM Actions ACT', nchar(13), nchar(10), N'    JOIN Statuses S ON ACT.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND ACT.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND DATEADD(day, 7, GETDATE())', nchar(13), nchar(10), N'    AND ACT.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ProjectTeamId, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.ItemDueDate,', nchar(13), nchar(10), N'    PT.ItemStatus,', nchar(13), nchar(10), N'    PT.ItemCategory,', nchar(13), nchar(10), N'    PT.StatusTitle', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH PriorityTasks AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        DCS.Title, ', nchar(13), nchar(10), N'        DCS.ItemDescription, ', nchar(13), nchar(10), N'        DCS.ProjectTeamId, ', nchar(13), nchar(10), N'        DCS.ItemPriority, ', nchar(13), nchar(10), N'        DCS.ItemDueDate, ', nchar(13), nchar(10), N'        S.Title AS ItemStatus,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Critical'' THEN 1', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''High'' THEN 2', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Medium'' THEN 3', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority = ''Low'' THEN 4', nchar(13), nchar(10), N'            WHEN DCS.ItemPriority IS NULL OR DCS.ItemPriority = '''' THEN 5', nchar(13), nchar(10), N'        END AS PriorityRank,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN DCS.ItemDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN DCS.ItemDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM Decisions DCS', nchar(13), nchar(10), N'    JOIN Statuses S ON DCS.ItemStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'    AND DCS.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND DATEADD(day, 7, GETDATE())', nchar(13), nchar(10), N'    AND DCS.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'HighestPriority AS (', nchar(13), nchar(10), N'    SELECT MIN(PriorityRank) AS MinPriorityRank', nchar(13), nchar(10), N'    FROM PriorityTasks', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    PT.Title, ', nchar(13), nchar(10), N'    PT.ItemDescription, ', nchar(13), nchar(10), N'    PT.ProjectTeamId, ', nchar(13), nchar(10), N'    PT.ItemPriority, ', nchar(13), nchar(10), N'    PT.ItemDueDate,', nchar(13), nchar(10), N'    PT.ItemStatus,', nchar(13), nchar(10), N'    PT.ItemCategory,', nchar(13), nchar(10), N'    PT.StatusTitle', nchar(13), nchar(10), N'FROM PriorityTasks PT', nchar(13), nchar(10), N'JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;', nchar(13), nchar(10), nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH FilteredInterdependencies AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT ', nchar(13), nchar(10), N'        ID.Title, ', nchar(13), nchar(10), N'        ID.ProviderProjectTeamId, ', nchar(13), nchar(10), N'        ID.ReceiverProjectTeamId, ', nchar(13), nchar(10), N'        ID.ItemDueDate,', nchar(13), nchar(10), N'        S.Title AS ItemStatus,', nchar(13), nchar(10), N'        CASE ', nchar(13), nchar(10), N'            WHEN ID.ItemDueDate <= GETDATE() THEN ''Was past due current week'' ', nchar(13), nchar(10), N'            WHEN ID.ItemDueDate > GETDATE() THEN ''Will be past due next week'' ', nchar(13), nchar(10), N'        END AS ItemCategory,', nchar(13), nchar(10), N'        S.Title AS StatusTitle', nchar(13), nchar(10), N'    FROM Interdependencies ID', nchar(13), nchar(10), N'    JOIN InterdependencyStatuses S ON ID.InterdependencyStatusId = S.Id', nchar(13), nchar(10), N'    WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'')', nchar(13), nchar(10), N'  	AND ID.ItemDueDate BETWEEN DATEADD(day, -7, GETDATE()) AND DATEADD(day, 7, GETDATE())', nchar(13), nchar(10), N'	AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}})', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT ', nchar(13), nchar(10), N'    Title, ', nchar(13), nchar(10), N'    ProviderProjectTeamId, ', nchar(13), nchar(10), N'    ReceiverProjectTeamId, ', nchar(13), nchar(10), N'    ItemDueDate,', nchar(13), nchar(10), N'    ItemStatus,', nchar(13), nchar(10), N'    ItemCategory,', nchar(13), nchar(10), N'    StatusTitle', nchar(13), nchar(10), N'FROM FilteredInterdependencies;', nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = CONCAT(CAST(N'WITH StatusCheck AS (' AS nvarchar(max)), nchar(13), nchar(10), N'    SELECT', nchar(13), nchar(10), N'        s.[Key],', nchar(13), nchar(10), N'        s.ID', nchar(13), nchar(10), N'    FROM', nchar(13), nchar(10), N'        WorkPlan wp', nchar(13), nchar(10), N'    JOIN', nchar(13), nchar(10), N'        Statuses s ON wp.WorkPlanTaskStatusId = s.ID', nchar(13), nchar(10), N'    WHERE', nchar(13), nchar(10), N'        wp.ProjectTeamId = {{ProjectTeam}}', nchar(13), nchar(10), N'        AND wp.TaskDueDate < GETDATE()', nchar(13), nchar(10), N'        AND wp.TaskDueDate >= DATEADD(DAY, -7, GETDATE())', nchar(13), nchar(10), N'),', nchar(13), nchar(10), N'FinalStatus AS (', nchar(13), nchar(10), N'    SELECT', nchar(13), nchar(10), N'        wss.ID,', nchar(13), nchar(10), N'		wss.[Key],', nchar(13), nchar(10), N'        wss.Title', nchar(13), nchar(10), N'    FROM', nchar(13), nchar(10), N'        StatusCheck sc', nchar(13), nchar(10), N'    JOIN', nchar(13), nchar(10), N'        WeeklyStatusStatuses wss ON sc.[Key] = wss.[Key]', nchar(13), nchar(10), N')', nchar(13), nchar(10), N'SELECT', nchar(13), nchar(10), N'    CASE', nchar(13), nchar(10), N'        WHEN EXISTS (SELECT 1 FROM FinalStatus WHERE [Key] = ''BEHIND_SCHEDULE'') THEN (SELECT TOP 1 ID FROM FinalStatus WHERE [Key] = ''BEHIND_SCHEDULE'')', nchar(13), nchar(10), N'        WHEN EXISTS (SELECT 1 FROM FinalStatus WHERE [Key] = ''AT_RISK'') THEN (SELECT TOP 1 ID FROM FinalStatus WHERE [Key] = ''AT_RISK'')', nchar(13), nchar(10), N'        WHEN EXISTS (SELECT TOP 1 ID FROM FinalStatus WHERE [Key] = ''ON_TRACK'') THEN (SELECT TOP 1 ID FROM FinalStatus WHERE [Key] = ''ON_TRACK'')', nchar(13), nchar(10), N'        ELSE NULL', nchar(13), nchar(10), N'    END AS StatusId,', nchar(13), nchar(10), N'    CASE', nchar(13), nchar(10), N'        WHEN EXISTS (SELECT 1 FROM FinalStatus WHERE [Key] = ''BEHIND_SCHEDULE'') THEN (SELECT TOP 1 Title FROM FinalStatus WHERE [Key] = ''BEHIND_SCHEDULE'')', nchar(13), nchar(10), N'        WHEN EXISTS (SELECT 1 FROM FinalStatus WHERE [Key] = ''AT_RISK'') THEN (SELECT TOP 1 Title FROM FinalStatus WHERE [Key] = ''AT_RISK'')', nchar(13), nchar(10), N'        WHEN EXISTS (SELECT TOP 1 Title FROM FinalStatus WHERE [Key] = ''ON_TRACK'') THEN (SELECT TOP 1 Title FROM FinalStatus WHERE [Key] = ''ON_TRACK'')', nchar(13), nchar(10), N'        ELSE NULL', nchar(13), nchar(10), N'    END AS StatusTitle;', nchar(13), nchar(10), nchar(13), nchar(10), nchar(13), nchar(10))
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20241212130751_UpdateSQLForContentGenerator', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [AssistantPrompts] (
    [ID] int NOT NULL IDENTITY,
    [Title] nvarchar(100) NOT NULL,
    [Type] nvarchar(100) NOT NULL,
    [Backend] nvarchar(100) NOT NULL,
    [Content] nvarchar(MAX) NOT NULL,
    [Parameters] nvarchar(MAX) NOT NULL,
    [ChangeDescription] nvarchar(MAX) NOT NULL,
    [IsActive] bit NOT NULL,
    [CreatedAt] datetime2 NULL,
    [UpdatedAt] datetime2 NULL,
    [CreatedBy] nvarchar(100) NOT NULL,
    [UpdatedBy] nvarchar(100) NOT NULL,
    CONSTRAINT [PK_AssistantPrompts] PRIMARY KEY ([ID])
);
GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      WP.Title,      WP.TaskDueDate,      WP.ReportingLevelId,      WP.Priority,      WP.WorkPlanTaskType,      CASE          WHEN WP.Priority = ''(1) High'' THEN 1         WHEN WP.Priority = ''(2) Normal'' THEN 2         WHEN WP.Priority = ''(3) Low'' THEN 3         WHEN WP.Priority IS NULL OR WP.Priority= '''' THEN 4     END AS PriorityRank,     CASE          WHEN WP.TaskDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN WP.TaskDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title as StatusTitle FROM Workplan WP JOIN Statuses S ON WP.WorkPlanTaskStatusId = S.Id WHERE WP.WorkPlanTaskType IN (''Milestone'', ''Task'') AND S.[Key] NOT IN (''CANCELLED'') AND WP.HierarchyLevel <= 3 AND WP.TaskDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}}) AND WP.ProjectTeamId = {{ProjectTeam}}),HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.TaskDueDate,  PT.ReportingLevelId,  PT.Priority,  PT.WorkPlanTaskType, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;'
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      RAI.IssueRiskCategory,      RAI.ItemStatusId ,      RAI.ItemDescription,      RAI.ItemDueDate,      RAI.ItemPriority,      RAI.Title,      RAI.ReportingLevelId,      CASE          WHEN RAI.ItemPriority = ''Critical'' THEN 1         WHEN RAI.ItemPriority = ''High'' THEN 2         WHEN RAI.ItemPriority = ''Medium'' THEN 3         WHEN RAI.ItemPriority = ''Low'' THEN 4         WHEN RAI.ItemPriority IS NULL OR RAI.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  RAI.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN RAI.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM RisksAndIssues RAI JOIN Statuses S ON RAI.ItemStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'') AND RAI.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND RAI.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.IssueRiskCategory,  PT.ItemStatusId ,  PT.ItemDescription,  PT.ItemDueDate,  PT.ItemPriority,  PT.Title,  PT.ReportingLevelId, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;'
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      ACT.Title,      ACT.ItemDescription,      ACT.ProjectTeamId,      ACT.ItemPriority,      ACT.ItemDueDate,      ACT.ReportingLevelId,      CASE          WHEN ACT.ItemPriority = ''Critical'' THEN 1         WHEN ACT.ItemPriority = ''High'' THEN 2         WHEN ACT.ItemPriority = ''Medium'' THEN 3         WHEN ACT.ItemPriority = ''Low'' THEN 4         WHEN ACT.ItemPriority IS NULL OR ACT.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  ACT.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN ACT.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Actions ACT JOIN Statuses S ON ACT.ItemStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'') AND ACT.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND ACT.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.ItemDescription,  PT.ProjectTeamId,  PT.ItemPriority,  PT.ItemDueDate, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      DCS.Title,      DCS.ItemDescription,      DCS.ProjectTeamId,      DCS.ItemPriority,      DCS.ItemDueDate,      DCS.ReportingLevelId,      CASE          WHEN DCS.ItemPriority = ''Critical'' THEN 1         WHEN DCS.ItemPriority = ''High'' THEN 2         WHEN DCS.ItemPriority = ''Medium'' THEN 3         WHEN DCS.ItemPriority = ''Low'' THEN 4         WHEN DCS.ItemPriority IS NULL OR DCS.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  DCS.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN DCS.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Decisions DCS JOIN Statuses S ON DCS.ItemStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'') AND DCS.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND DCS.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.ItemDescription,  PT.ProjectTeamId,  PT.ItemPriority,  PT.ItemDueDate, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH FilteredInterdependencies AS ( SELECT      ID.Title,      ID.ProviderProjectTeamId,      ID.ReceiverProjectTeamId,      ID.ItemDueDate,      ID.ReportingLevelId,     CASE          WHEN  ID.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN ID.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Interdependencies ID JOIN InterdependencyStatuses S ON ID.InterdependencyStatusId = S.Id  WHERE S.[Key] NOT IN (''CANCELLED'') AND ID.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}}) ) SELECT  Title,  ProviderProjectTeamId,  ReceiverProjectTeamId,  ItemDueDate, ItemCategory, StatusTitle FROM FilteredInterdependencies;  '
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      WP.Title,      WP.TaskDueDate,      WP.ReportingLevelId,      WP.Priority,      WP.WorkPlanTaskType,      CASE          WHEN WP.Priority = ''(1) High'' THEN 1         WHEN WP.Priority = ''(2) Normal'' THEN 2         WHEN WP.Priority = ''(3) Low'' THEN 3         WHEN WP.Priority IS NULL OR  WP.Priority = '''' THEN 4     END AS PriorityRank,     CASE          WHEN  WP.TaskDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN WP.TaskDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Workplan WP JOIN Statuses S ON WP.WorkPlanTaskStatusId= S.Id WHERE WP.WorkPlanTaskType IN (''Milestone'', ''Task'') AND S.[Key]  IN (''CLOSED'', ''COMPLETED'') AND WP.TaskDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND WP.HierarchyLevel <= 3 AND WP.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.TaskDueDate,  PT.ReportingLevelId,  PT.Priority,  PT.WorkPlanTaskType, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      RAI.IssueRiskCategory,      RAI.TimeBasedCalculatedStatusId,      RAI.ItemDescription,      RAI.ItemDueDate,      RAI.ItemPriority,      RAI.Title,      RAI.ReportingLevelId,      CASE          WHEN RAI.ItemPriority = ''Critical'' THEN 1         WHEN RAI.ItemPriority = ''High'' THEN 2         WHEN RAI.ItemPriority = ''Medium'' THEN 3         WHEN RAI.ItemPriority = ''Low'' THEN 4         WHEN RAI.ItemPriority IS NULL OR RAI.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  RAI.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN RAI.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM RisksAndIssues RAI JOIN Statuses S ON RAI.ItemStatusId = S.Id WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'') AND RAI.ItemDueDate BETWEEN {{periodStartDate}} AND {{periodEndDate}}      AND RAI.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.IssueRiskCategory,  PT.ItemDescription,  PT.ItemDueDate,  PT.ItemPriority,  PT.Title,  PT.ReportingLevelId, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      ACT.Title,      ACT.ItemDescription,      ACT.ProjectTeamId,      ACT.ItemPriority,      ACT.ItemDueDate,      CASE          WHEN ACT.ItemPriority = ''Critical'' THEN 1         WHEN ACT.ItemPriority = ''High'' THEN 2         WHEN ACT.ItemPriority = ''Medium'' THEN 3         WHEN ACT.ItemPriority = ''Low'' THEN 4         WHEN ACT.ItemPriority IS NULL OR ACT.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  ACT.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN ACT.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Actions ACT JOIN Statuses S ON ACT.ItemStatusId = S.Id WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'') AND ACT.ItemDueDate BETWEEN {{periodStartDate}} AND {{periodEndDate}}   AND ACT.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.ItemDescription,  PT.ProjectTeamId,  PT.ItemPriority,  PT.ItemDueDate, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;   '
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      DCS.Title,      DCS.ItemDescription,      DCS.ProjectTeamId,      DCS.ItemPriority,      DCS.ItemDueDate,      CASE          WHEN DCS.ItemPriority = ''Critical'' THEN 1         WHEN DCS.ItemPriority = ''High'' THEN 2         WHEN DCS.ItemPriority = ''Medium'' THEN 3         WHEN DCS.ItemPriority = ''Low'' THEN 4         WHEN DCS.ItemPriority IS NULL OR DCS.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  DCS.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN DCS.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Decisions DCS JOIN Statuses S ON DCS.ItemStatusId = S.Id WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'') AND DCS.ItemDueDate BETWEEN {{periodStartDate}} AND {{periodEndDate}}   AND DCS.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.ItemDescription,  PT.ProjectTeamId,  PT.ItemPriority,  PT.ItemDueDate, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;   '
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH FilteredInterdependencies AS ( SELECT      ID.Title,      ID.ProviderProjectTeamId,      ID.ReceiverProjectTeamId,      ID.ItemDueDate,      ID.ReportingLevelId,     CASE          WHEN  ID.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN ID.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Interdependencies ID JOIN InterdependencyStatuses S ON ID.InterdependencyStatusId = S.Id WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'') AND ID.ItemDueDate BETWEEN {{periodStartDate}} AND {{periodEndDate}}   AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}}) ) SELECT  Title,  ProviderProjectTeamId,  ReceiverProjectTeamId,  ItemDueDate, ItemCategory, StatusTitle FROM FilteredInterdependencies;  '
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      WP.Title,      WP.TaskDueDate,      WP.ReportingLevelId,      WP.Priority,      WP.WorkPlanTaskType,     CASE          WHEN WP.Priority = ''(1) High'' THEN 1         WHEN WP.Priority = ''(2) Normal'' THEN 2         WHEN WP.Priority = ''(3) Low'' THEN 3         WHEN WP.Priority IS NULL OR WP.Priority = '''' THEN 4     END AS PriorityRank,     CASE          WHEN  WP.TaskDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN WP.TaskDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Workplan WP JOIN Statuses S ON WP.WorkPlanTaskStatusId = S.Id WHERE WP.WorkPlanTaskType IN (''Milestone'', ''Task'') AND S.[Key] NOT IN (''CLOSED'', ''CANCELLED'', ''COMPLETED'')  AND WP.HierarchyLevel <= 3 AND WP.TaskDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND WP.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.TaskDueDate,  PT.ReportingLevelId,  PT.Priority,  PT.WorkPlanTaskType, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank; '
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      RAI.IssueRiskCategory,      S.Title AS ItemStatus,     RAI.ItemDescription,      RAI.ItemDueDate,      RAI.ItemPriority,      RAI.Title,      RAI.ReportingLevelId,     CASE          WHEN RAI.ItemPriority = ''Critical'' THEN 1         WHEN RAI.ItemPriority = ''High'' THEN 2         WHEN RAI.ItemPriority = ''Medium'' THEN 3         WHEN RAI.ItemPriority = ''Low'' THEN 4         WHEN RAI.ItemPriority IS NULL OR RAI.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  RAI.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN RAI.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM RisksAndIssues RAI JOIN Statuses S ON RAI.ItemStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'') AND RAI.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND RAI.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.IssueRiskCategory,  PT.ItemDescription,  PT.ItemDueDate,  PT.ItemPriority,  PT.Title,  PT.ReportingLevelId, PT.ItemStatus, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      ACT.Title,      ACT.ItemDescription,      ACT.ProjectTeamId,      ACT.ItemPriority,      ACT.ItemDueDate,      S.Title AS ItemStatus,     CASE          WHEN ACT.ItemPriority = ''Critical'' THEN 1         WHEN ACT.ItemPriority = ''High'' THEN 2         WHEN ACT.ItemPriority = ''Medium'' THEN 3         WHEN ACT.ItemPriority = ''Low'' THEN 4         WHEN ACT.ItemPriority IS NULL OR ACT.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  ACT.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN ACT.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Actions ACT JOIN Statuses S ON ACT.ItemStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'') AND ACT.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND ACT.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.ItemDescription,  PT.ProjectTeamId,  PT.ItemPriority,  PT.ItemDueDate, PT.ItemStatus, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      DCS.Title,      DCS.ItemDescription,      DCS.ProjectTeamId,      DCS.ItemPriority,      DCS.ItemDueDate,      S.Title AS ItemStatus,     CASE          WHEN DCS.ItemPriority = ''Critical'' THEN 1         WHEN DCS.ItemPriority = ''High'' THEN 2         WHEN DCS.ItemPriority = ''Medium'' THEN 3         WHEN DCS.ItemPriority = ''Low'' THEN 4         WHEN DCS.ItemPriority IS NULL OR DCS.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  DCS.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN DCS.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Decisions DCS JOIN Statuses S ON DCS.ItemStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'') AND DCS.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND DCS.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.ItemDescription,  PT.ProjectTeamId,  PT.ItemPriority,  PT.ItemDueDate, PT.ItemStatus, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;   '
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH FilteredInterdependencies AS ( SELECT      ID.Title,      ID.ProviderProjectTeamId,      ID.ReceiverProjectTeamId,      ID.ItemDueDate,     S.Title AS ItemStatus,     CASE          WHEN  ID.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN ID.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Interdependencies ID JOIN InterdependencyStatuses S ON ID.InterdependencyStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'')    AND ID.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})    AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}}) ) SELECT  Title,  ProviderProjectTeamId,  ReceiverProjectTeamId,  ItemDueDate, ItemStatus, ItemCategory, StatusTitle FROM FilteredInterdependencies;  '
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH StatusCheck AS ( SELECT     s.[Key],     s.ID FROM     WorkPlan wp JOIN     Statuses s ON wp.WorkPlanTaskStatusId = s.ID WHERE     wp.ProjectTeamId = {{ProjectTeam}}     AND wp.TaskDueDate < {{periodEndDate}}    AND wp.TaskDueDate >= DATEADD(DAY, -7, {{periodEndDate}}) ), FinalStatus AS ( SELECT     wss.ID,   wss.[Key],     wss.Title FROM     StatusCheck sc JOIN     WeeklyStatusStatuses wss ON sc.[Key] = wss.[Key] ) SELECT CASE     WHEN EXISTS (SELECT 1 FROM FinalStatus WHERE [Key] = ''BEHIND_SCHEDULE'') THEN (SELECT TOP 1 ID FROM FinalStatus WHERE [Key] = ''BEHIND_SCHEDULE'')     WHEN EXISTS (SELECT 1 FROM FinalStatus WHERE [Key] = ''AT_RISK'') THEN (SELECT TOP 1 ID FROM FinalStatus WHERE [Key] = ''AT_RISK'')     WHEN EXISTS (SELECT TOP 1 ID FROM FinalStatus WHERE [Key] = ''ON_TRACK'') THEN (SELECT TOP 1 ID FROM FinalStatus WHERE [Key] = ''ON_TRACK'')     ELSE NULL END AS StatusId, CASE     WHEN EXISTS (SELECT 1 FROM FinalStatus WHERE [Key] = ''BEHIND_SCHEDULE'') THEN (SELECT TOP 1 Title FROM FinalStatus WHERE [Key] = ''BEHIND_SCHEDULE'')     WHEN EXISTS (SELECT 1 FROM FinalStatus WHERE [Key] = ''AT_RISK'') THEN (SELECT TOP 1 Title FROM FinalStatus WHERE [Key] = ''AT_RISK'')     WHEN EXISTS (SELECT TOP 1 Title FROM FinalStatus WHERE [Key] = ''ON_TRACK'') THEN (SELECT TOP 1 Title FROM FinalStatus WHERE [Key] = ''ON_TRACK'')     ELSE NULL END AS StatusTitle;'
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250205092810_AssistantPrompts_Migration5', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

CREATE TABLE [AssistantGeneratorHistory] (
    [ID] int NOT NULL IDENTITY,
    [InstanceId] nvarchar(100) NOT NULL,
    [Type] nvarchar(100) NOT NULL,
    [AdditionalInfo] nvarchar(MAX) NOT NULL,
    [UserEmail] nvarchar(MAX) NOT NULL,
    [Status] nvarchar(100) NULL,
    [StatusCode] int NULL,
    [CreatedAt] datetime2 NULL,
    [UpdatedAt] datetime2 NULL,
    [CreatedBy] nvarchar(100) NOT NULL,
    [UpdatedBy] nvarchar(100) NOT NULL,
    CONSTRAINT [PK_AssistantGeneratorHistory] PRIMARY KEY ([ID])
);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250217111450_AddGeneratorHistory', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DECLARE @var3 sysname;
SELECT @var3 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[AssistantPrompts]') AND [c].[name] = N'ChangeDescription');
IF @var3 IS NOT NULL EXEC(N'ALTER TABLE [AssistantPrompts] DROP CONSTRAINT [' + @var3 + '];');
ALTER TABLE [AssistantPrompts] DROP COLUMN [ChangeDescription];
GO

DECLARE @var4 sysname;
SELECT @var4 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[AssistantPrompts]') AND [c].[name] = N'Content');
IF @var4 IS NOT NULL EXEC(N'ALTER TABLE [AssistantPrompts] DROP CONSTRAINT [' + @var4 + '];');
ALTER TABLE [AssistantPrompts] DROP COLUMN [Content];
GO

EXEC sp_rename N'[AssistantPrompts].[Parameters]', N'OriginalPrompt', N'COLUMN';
GO

EXEC sp_rename N'[AssistantPrompts].[Backend]', N'Key', N'COLUMN';
GO

ALTER TABLE [AssistantPrompts] ADD [Agent] nvarchar(100) NOT NULL DEFAULT N'';
GO

ALTER TABLE [AssistantPrompts] ADD [Description] nvarchar(MAX) NULL;
GO

ALTER TABLE [AssistantPrompts] ADD [Prompt] nvarchar(MAX) NULL;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'Agent', N'CreatedAt', N'CreatedBy', N'Description', N'IsActive', N'Key', N'OriginalPrompt', N'Prompt', N'Title', N'Type', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[AssistantPrompts]'))
    SET IDENTITY_INSERT [AssistantPrompts] ON;
INSERT INTO [AssistantPrompts] ([ID], [Agent], [CreatedAt], [CreatedBy], [Description], [IsActive], [Key], [OriginalPrompt], [Prompt], [Title], [Type], [UpdatedAt], [UpdatedBy])
VALUES (1, N'WORKPLAN_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'detect_mismatch', N'You are a Strategy and Transactions Senior Partner with 40 years of industry experience at EY.Your task is to detect if there is a mismatch between the target team and the EY IP teams.For example:- If the target team is ""IT"" and the EY IP teams are: ""Information Technology"", ""IT"", ""Technology"", there is no mismatch.- If the target team is ""Cybersecurity"" and the EY IP teams are: ""IT"", ""Information Technology"", ""Technology"", there is a mismatch.- If the target team is ""Finance"" and the EY IP teams are: ""Finance"", ""Finance and Accounting"", there is no mismatch.  - If the target team is ""Controllership"" and the EY IP teams are: ""Finance"", ""Finance and Accounting"", there is a mismatch.### The target team is:---------------------  {target_team}---------------------### The EY IP teams are:---------------------{eyip_project_teams}---------------------Based on the information provided, choose the most appropriate option:1. there is a mismatch between the target team and the EY IP teams, or2. there is no mismatch between the target team and the EY IP teams.Answer with the number of the chosen option only, without adding extra information. For example: 1.Answer:"', NULL, N'Detect Mismatch', N'SYSTEM', NULL, N'System'),
(2, N'WORKPLAN_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'example_task_structure', N'"[      {          ""summary_task"": ""Detailed summary task header goes here"",          ""tasks"": [              ""Task description 1"",              ""Task description 2"",              ""Task description 3"",              ""Task description 4"",              ""Task description 5"",              ""Task description 6"",              ""Task description 7"",              ""Task description 8"",              ""Task description 9"",              ""Task description 10"",              ""Task description 11"",              ""Task description 12"",              ""Task description 13"",              ""Task description 14"",              ""Task description 15"",          ],          ""milestone"": ""Milestone description header goes here""      },      {          ""summary_task"": ""Detailed of another summary task goes here"",          ""tasks"": [              ""Another task description 1"",              ""Another task description 2"",              ""Another task description 3"",              ""Another task description 4"",              ""Another task description 5"",              ""Another task description 6"",              ""Another task description 7"",              ""Another task description 8"",              ""Another task description 9"",              ""Another task description 10"",              ""Another task description 11"",              ""Another task description 12"",              ""Another task description 13"",              ""Another task description 14"",          ],          ""milestone"": ""Another milestone description""      },      {...},      {...},      {...},  ]"', NULL, N'Example Task Structure', N'SYSTEM', NULL, N'System'),
(3, N'WORKPLAN_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'ey_ip_data_consolidation', N'"You are a highly intelligent writer tasked with adapting generic task descriptions into a specific {target_team}''s work plan.The following table contains a list of generic tasks, along with their descriptions and classifications as either tasks, summary tasks, or milestones:----------------------------------------------{ey_ip_data}----------------------------------------------Your task is to transform the provided information into a highly detailed, informative, and specific work plan tailored to the team''s responsibilities.The specific project details are as follows:----------------------------------------------{project_outline}----------------------------------------------Ensure that:  - Generate concise and descriptive summary task titles that are informative and formatted like chapter names, avoiding the use of colons or punctuation that implies separation.  - Tasks must be deatiled and specific, providing a clear understanding of the work involved.  - Tasks that do not belong to the team''s responsibilities in the current project must be excluded.Format the work plan in JSON, following this example structure:----------------------------------------------{example_structure}----------------------------------------------Answer:"', NULL, N'EY IP Data Consolidation', N'SYSTEM', NULL, N'System'),
(4, N'WORKPLAN_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'filter_eyip_team_data', N'"You are a Senior Partner in Strategy and Transactions with 40 years of industry experience at EY.You will be provided with general information from EY IP, and your task is to retain any relevant team information while discarding the less relevant ones.### The complete EY IP data is:---------------------{eyip_data}---------------------### The target team is:---------------------{target_team}---------------------Instructions:- Retain any relevant team information from the EY IP data, and remove information you consider irrelevant for the target team.- Provide the cleaned EY IP data, including tasks, summary tasks, and milestones.- Do not include any additional or extra information in your response.Format the team data in JSON, following this example structure:----------------------------------------------{example_structure}----------------------------------------------Answer:"', NULL, N'FILTER EYIP Team Data', N'SYSTEM', NULL, N'System'),
(5, N'WORKPLAN_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'generic_project_outline', N'"goal_summary: The goal of this project is to establish a comprehensive framework that ensures the successful execution and completion of the project. This includes developing a detailed project plan, allocating resources efficiently, ensuring compliance with relevant standards and regulations, and implementing effective project governance and support structures.objective_summary: The objectives of the project are to facilitate the smooth execution of project activities by planning and coordinating tasks, developing efficient processes, ensuring clear roles and responsibilities for team members, providing necessary training and support, and proposing a robust operational model to achieve project goals.project_description_summary: The project involves designing and implementing a structured approach to achieve the project goals. This includes defining project scope, setting up processes and procedures, ensuring compliance with relevant standards, developing strategies to optimize resource utilization, aligning project activities with organizational objectives, and addressing any potential challenges that may arise.success_factors_summary: The success factors include effective resource management, clear communication and coordination among team members, timely completion of project tasks, adherence to project timelines and budgets, continuous monitoring and evaluation of project progress, and ensuring minimal disruption to ongoing operations during the project execution.milestones_summary: The milestones include developing a detailed project plan by Month 1, establishing a project team by Month 2, initiating key project activities by Month 3, completing the first phase of the project by Month 6, conducting a mid-project review by Month 9, finalizing project deliverables by Month 11, and completing the project by Month 12."', NULL, N'Generic Project Outline', N'SYSTEM', NULL, N'System'),
(6, N'WORKPLAN_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'interdependencies_query', N'select DISTINCT PT.Title as ProjectTeam from ProjectTeams PT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] = ''PROJECT_MANAGEMENT'' AND PT.ManageWorkPlan = 1', NULL, N'Interdependencies Query', N'SYSTEM', NULL, N'System'),
(7, N'WORKPLAN_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'process_input', N'"From the following list of Project Teams names:---------------------{inputs}---------------------Select the name or names that are most related to {target}.Respond with a list of the chosen Project Team names.You should select at least one Project Team name.Format the response in JSON without adding extra information, for example: [""HR"", ""Human Resources"", ""HR, Human Resources""].Answer:"', NULL, N'Process Input', N'SYSTEM', NULL, N'System'),
(8, N'WORKPLAN_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'project_outline_enrichment_no_docs', N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.Your expertise lies in creating detailed outlines for a project work plan.You will receive a list of elements which composed a generic project outline, each related to different topics: goals, objectives, project descriptions, success factors, and milestones.Additionally, you will be provided with some project context, which could be a guide about extra information related to the project.Your task is to enrich the generic workplan outlines by using the project context.Ensure the outlines are well-structured, logically organized, and cover all the key aspects necessary for effective project planning.You have been provided with the following elements:----------------------------------------------{{{project_outline_elements}project_context: {project_context}}}----------------------------------------------Ensure that:    -The details are clear, easy to understand, and accurately reflect the provided elements.    -Each piece of information captures the essence of the respective topic.    -The resulting information is logically structured and comprehensive.    -The JSON string must be free of any enclosing quotation marks and ''json'' keyword.    -The project context will enrich the outline only if it adds significant value to the work plan.Provide your summaries in the following format:{{""goal_summary"": ""{{Adapt the goal based on the provided project context}}"",""objective_summary"": ""{{Adapt the objective based on the provided project context}}"",""project_description_summary"": ""{{Adapt the project description based on the provided project context}}"",""success_factors_summary"": ""{{Adapt the success factors based on the provided project context}}"",""milestones_summary"": ""{{Adapt the milestones based on the provided project context}}""}}Answer:"', NULL, N'Project Outline Enrichment No Docs', N'SYSTEM', NULL, N'System'),
(9, N'WORKPLAN_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'project_outline_enrichment', N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.Your expertise lies in creating detailed outlines for a project work plan.You will receive a list of elements, each containing chunks of information related to different topics: goals, objectives, project descriptions, success factors, and milestones.Additionally, you will be provided with some project context, which could be a guide about extra information related to the project.Your task is to synthesize this information into comprehensive outlines that will serve as the foundation for building a complete work plan.Ensure the outlines are well-structured, logically organized, and cover all the key aspects necessary for effective project planning.You have been provided with the following elements:----------------------------------------------{{goal_elements: {goal_elements}objective_elements: {objective_elements}project_description_elements: {project_description_elements}success_factors_elements: {success_factors_elements}milestones_elements: {milestone_elements}project_context: {project_context}}}----------------------------------------------Ensure that:    -The details are clear, easy to understand, and accurately reflect the provided elements.    -Each piece of information captures the essence of the respective topic.    -The resulting information is logically structured and comprehensive.    -The JSON string must be free of any enclosing quotation marks and ''json'' keyword.    -The project context will enrich the outline only if it adds significant value to the work plan.Provide your summaries in the following format:{{""goal_summary"": ""{{Summarize the goal based on the provided elements}}"",""objective_summary"": ""{{Summarize the objective based on the provided elements}}"",""project_description_summary"": ""{{Summarize the project description based on the provided elements}}"",""success_factors_summary"": ""{{Summarize the success factors based on the provided elements}}"",""milestones_summary"": ""{{Summarize the milestones based on the provided elements}}""}}Example:input:{{goal_elements: [""Increase market share by 10%"", ""Expand into new regions"", ""Enhance brand recognition""]objective_elements: [""Launch new product line"", ""Improve customer satisfaction"", ""Reduce operational costs""]project_description_elements: [""Develop a marketing strategy"", ""Conduct market research"", ""Implement new sales tactics""]success_factors_elements: [""Customer satisfaction"", ""Market research"", ""Sales tactics""]milestones_elements: [""Product launch"", ""Customer feedback analysis"", ""Cost reduction analysis""]}}output:{{""goal_summary"": ""The goal is to increase market share by 10% through expansion into new regions and enhancing brand recognition."",""objective_summary"": ""The objective is to launch a new product line, improve customer satisfaction, and reduce operational costs."",""project_description_summary"": ""The project involves developing a marketing strategy, conducting market research, and implementing new sales tactics."",""success_factors_summary"": ""The success factors include customer satisfaction, market research, and sales tactics."",""milestones_summary"": ""The milestones include product launch, customer feedback analysis, and cost reduction analysis.""}}Answer:"', NULL, N'Project Outline Enrichment', N'SYSTEM', NULL, N'System'),
(10, N'WORKPLAN_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'project_outline_keys', N'"- Goals aims purposes of the project- Objectives targets of the project- Description overview summary outline of the project- Key critical success factors- Milestones deliverables of the project"', NULL, N'Project Outline Keys', N'SYSTEM', NULL, N'System'),
(11, N'WORKPLAN_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'task_generation_without_project_outlines', N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.Your expertise lies in working with functional leads to develop detailed, function-specific work plans for {transaction_type} projects.You are currently collaborating with the {target_team} lead to create a high-quality work plan that leverages:      1.	Firm-specific IPs (industry-proven templates).  2.	Intelligent insights derived from context and business logic.The work plan must address gaps, interdependencies, and risks while being logically structured and actionable.The following work plan outline has been provided to you:### Work Plan Outline:----------------  sector: {sector}subSector: {subSector}  timeline: {timeline}----------------### Firm IP Templates (relevant to {target_team} activities):----------------related_activities_examples: {eyip_adapted_data}----------------  ### Requirements:Generate a function-specific work plan for the {target_team} that adheres to the following principles:  1.	Relevance: All tasks must align with the {target_team}''s role in the project. Avoid mixing tasks from other functions.  2.	Clarity: Tasks must be precise, actionable, and follow a sequential and logical order.  3.	Completeness:      -Determine a sufficient number of tasks for each summary task to ensure a highly detailed and thorough plan.      -Address identified risks, assumptions, interdependencies, and decisions.      -Highlight interdependencies with other functions clearly:        - For each task that depends on another function, explicitly state the dependency within the task description.        - Create a task to address the interdependency, ensuring it is actionable and relevant to the current team''s responsibilities.        - Include the interdependency in parentheses within the task description, e.g., ''Coordination for employee data and HRIS migration (Interdependency on HR).        - Ensure interdependent tasks are logically placed in the sequence and linked to relevant milestones.  4.	Structure: Group tasks under summary tasks, ensuring each summary task has a milestone.### Deliverable Format:-Provide the work plan in JSON format, structured as follows:----------------{example_structure}-----------------Do not add any comments or additional information to your response, just the JSON structure.### Instructions for Execution:  1.	Analyze Inputs: Examine all information to identify deliverables, milestones, and risks.      2.	Structure the Plan: Ensure tasks are grouped under relevant summary tasks with corresponding milestones.  3.	Account for Interdependencies: Clearly highlight any cross-functional dependencies in the task descriptions.  4.	Quality Assurance: Maintain a concise format while ensuring depth and completeness.      5.  Answer with the JSON structure, withoud any comments or additional information.Answer:"', NULL, N'Task Generation Without Project Outlines', N'SYSTEM', NULL, N'System'),
(12, N'WORKPLAN_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'task_generation', N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.Your expertise lies in working with functional leads to develop detailed, function-specific work plans for {transaction_type} projects.You are currently collaborating with the {target_team} lead to create a high-quality work plan that leverages:  1.	Client-provided data (charters, goals, milestones, and timelines).  2.	Firm-specific IPs (industry-proven templates).  3.	Intelligent insights derived from context and business logic.The work plan must address gaps, interdependencies, and risks while being logically structured and actionable.The following work plan outline has been provided to you:### Work Plan Outline:----------------goals: {goals}objectives: {objectives}description: {description}sector: {sector}subSector: {subSector}success_factors: {success_factors}milestones: {milestones}timeline: {timeline}----------------### Firm IP Templates (relevant to {target_team} activities):----------------related_activities_examples: {eyip_adapted_data}----------------### Team-Specific Context (from search results and uploaded data):----------------relevant_context: {search_results}----------------### Requirements:Generate a function-specific work plan for the {target_team} that adheres to the following principles:  1.	Relevance: All tasks must align with the {target_team}''s role in the project. Avoid mixing tasks from other functions.  2.	Clarity: Tasks must be precise, actionable, and follow a sequential and logical order.  3.	Completeness:      -Determine a sufficient number of tasks for each summary task to ensure a highly detailed and thorough plan.      -Address identified risks, assumptions, interdependencies, and decisions.      -Highlight interdependencies with other functions clearly:        - For each task that depends on another function, explicitly state the dependency within the task description.        - Create a task to address the interdependency, ensuring it is actionable and relevant to the current team''s responsibilities.        - Include the interdependency in parentheses within the task description, e.g., ''Coordination for employee data and HRIS migration (Interdependency on HR).        - Ensure interdependent tasks are logically placed in the sequence and linked to relevant milestones.        - Ensure team interdendencies are enlisted in the following ones: {interdependencies_list}.  4.	Structure: Group tasks under summary tasks, ensuring each summary task has a milestone.### Deliverable Format:Provide the work plan in JSON format, structured as follows:----------------{example_structure}----------------### Instructions for Execution:  1.	Analyze Inputs: Examine the charter, metadata, and firm IPs to identify deliverables, milestones, and risks.  2.	Prioritize Data: Leverage client-provided data first; use firm IPs to fill gaps or provide additional insights.  3.	Structure the Plan: Ensure tasks are grouped under relevant summary tasks with corresponding milestones.  4.	Account for Interdependencies: Clearly highlight any cross-functional dependencies in the task descriptions.      5.	Quality Assurance: Maintain a concise format while ensuring depth and completeness.  6.  Avoid Duplicates: Do not include any duplicate summary tasks, milestones, or tasks.Answer:"', NULL, N'Task Generation', N'SYSTEM', NULL, N'System'),
(13, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'acc_and_ne_char_limit_query', N'SELECT CHARACTER_MAXIMUM_LENGTH AS MaxCharLimit FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''AccomplishmentsAndNextSteps'' AND COLUMN_NAME = ''Title''', NULL, N'Acc And Ne Char Limit Query', N'SYSTEM', NULL, N'System'),
(14, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'accomplishments', N'"You are a seasoned **Senior Partner in Strategy and Transactions** with 40 years of industry experience. Your expertise involves collaborating with functional leads to generate weekly project status reports based on the team''s Workplan, Risks, Actions, Issues, Decisions, and Interdependencies.You have been tasked with summarizing the detailed project data for the $target_team$ team to create an accomplishments section that encapsulates the the key points worked during the last reporting period.Your main task is to identify from the input data which of the completed, closed or done risks, issues, milestones, tasks, interdependencies, actions, decisions are most relevant for the context of the project and summarize them in a list.The accomplishments section is a list with multiple items, with only ONE key point from the SQL results in the input data summarized per item.The items are short sentences that MUST have a maximum total of $num_words$ words. These items should be written in passive voice, focusing on the action and not on who is in charge of the action.This is the project context you should consider to generate the report but never mention explicitly for the accomplishments section:$project_context$Instructions:- Do not mention anything related to SQL, rows, columns, data, application, dates, or the process to create this report.- Mention items (tasks, risks, issues, actions, decisions, etc.) in a natural, narrative, organic way and flowing with the text. Do not mention them explicitly.- Output format should be like this: [""item accomplished 1"", ""item accomplished 2""].- Ensure a maximum of five to ten items based on the content you have but minimum create three items (when there is enough information).- Ensure a maximum total of $num_words$ words per item.The input data are the results of querying multiple databases, it will also contain the rules followed to query and filter the data, and the main table. Finally, we have the results of that SQL query. The key points should be extracted from here, the name of the key points is on the Title column.input:  Table name: workplan  Rules: The Workplan section showcases milestones or tasks completed in the past week. The system filters these accomplishments by looking for a closed status, the project team selected in the UI, high, medium, low, and null priorities, completion within the last seven days, a hierarchy level of three or less, and types including tasks and milestones.  SQL Result: [{''Title'': ''Contracts dispositioned'', ''TaskDueDate'': ''2024-06-20T12:00:00+00:00'', ''ProgressId'': 6, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''}]  Table name: riskandissues  Rules: This subsection identifies risks and issues resolved in the past week. The search criteria include a closed status, the project team selected in the UI, high, medium, and low priorities, and resolution within the last seven days.  SQL Result: [{''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 26, ''ItemDescription'': ''Change in control points in the sales process such as price quotes, price changes in system, discounts, etc'', ''ItemDueDate'': ''2024-06-23T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''Change in control'', ''ReportingLevelId'': 4}, {''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 26, ''ItemDescription'': None, ''ItemDueDate'': ''2024-06-22T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''test'', ''ReportingLevelId'': 4}]}  Table name: actions  Rules: The system searches for actions completed in the past week using parameters such as a closed status, the project team selected in the UI, high, medium, and low priorities, and completion within the last seven days.  SQL Result: [{''Title'': ''Deep database audit'', ''ItemDescription'': ''Checking audits and backups for integrity issues'', ''ReportingLevelId'': 5, ''ProjectTeamId'': 59, ''ItemPriority'': ''High'', ''ItemDueDate'': ''2024-06-22T12:00:00+00:00'', ''ProgressId'': 26}]}  Table name: decisions  Rules: Decisions made and closed in the past week are identified using criteria such as a closed status, the project team selected in the UI, high, medium, and low priorities, and closure within the last seven days.  SQL Result: [{''Title'': ''Determination of legal view on environmental risk required'', ''ItemPriority'': ''Critical'', ''ItemDueDate'': ''2024-06-21T12:00:00+00:00'', ''ProgressId'': 26, ''ReportingLevelId'': 5}]}  Table name: interdependencies  Rules: The system identifies high-priority interdependencies that need prompt attention. The search criteria include a closed status, the receiver and provider project teams selected in the UI, high, medium, and low priorities, and closure within the last seven days.  SQL Result: [{''Title'': ''Add new legal entities to payroll system'', ''ProviderProjectTeamId'': 64, ''ReceiverProjectTeamId'': 60, ''ItemDueDate'': ''2024-05-09T12:00:00+00:00''}]}output: [""The disposition of contracts was completed."", ""Changes in control mechanisms affecting the sales process were navigated."", ""A risk labeled ''test'' was addressed."", ""A thorough audit of databases was carried out."", ""Backups were scrutinized to ensure their integrity."", ""Legal entities were added to the payroll system."", ""A decision on the legal stance concerning environmental risks was concluded.""]input:  Table name: workplan  Rules: The Workplan section showcases milestones or tasks completed in the past week. The system filters these accomplishments by looking for a closed status, the project team selected in the UI, high, medium, low, and null priorities, completion within the last seven days, a hierarchy level of three or less, and types including tasks and milestones.  SQL Result: [{''Title'': ''Contracts dispositioned'', ''TaskDueDate'': ''2024-06-20T12:00:00+00:00'', ''ProgressId'': 6, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''},{""Title"": ""Finish Detailing TSA"",""TaskDueDate"": ""2024-11-30T04:04:57.227+00:00"",""ReportingLevelId"": 4,""Priority"": ""(1) High"",""WorkPlanTaskType"": ""Task"",""ItemCategory"": ""Was past due current week"",""StatusTitle"": ""Behind Schedule""}]output: [""The disposition of contracts was completed."", ""The detailing of TSA was finished""]input:  $queries_accomplishments$output:"', NULL, N'Accomplishments', N'SYSTEM', NULL, N'System'),
(15, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'assistant_content_generator_queries', N'"SELECT title, description as rules, key, sqlQueryFROM [AssistantContentGeneratorQueries]WHEREgeneratorType=''ProjectStatus''ANDisActive is true"', NULL, N'Assistant Content Generator Queries', N'SYSTEM', NULL, N'System'),
(16, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'executive_summary_char_limit_query', N'"SELECT CHARACTER_MAXIMUM_LENGTH AS MaxCharLimitFROM INFORMATION_SCHEMA.COLUMNSWHERETABLE_NAME = ''ProjectStatusEntries''AND COLUMN_NAME = ''ExecutiveSummary''"', NULL, N'Executive Summary Char Limit Query', N'SYSTEM', NULL, N'System'),
(17, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'executive_summary_sql_examples', N'"SELECT TOP 3 PSE.ExecutiveSummary AS ExecutiveSummaryFROM ProjectStatusEntries PSELEFT JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.IDLEFT JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.IDWHEREPSE.ExecutiveSummary IS NOT NULL"', NULL, N'Executive Summary Sql Examples', N'SYSTEM', NULL, N'System'),
(18, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'executive_summary', N'"You are a seasoned **Senior Partner in Strategy** and Transactions with 40 years of industry experience. Your expertise involves collaborating with functional leads to generate weekly project status reports based on the team''s Workplan, Risks, Actions, Issues, Decisions, and Interdependencies.You have been tasked with summarizing the detailed project data for the $target_team$ team to create an Executive Summary that encapsulates the project''s status, highlighting key trends, potential issues, and positive developments.This is the project context you should consider to generate the report but never mention explicitly in the Executive Summary:$project_context$Our main goal is to generate an Executive Summary in a set of sentences split by line breaks using Markdown syntax (i.e., use \n to indicate line breaks) that provides a comprehensive overview of the project''s status, suitable for executive consumption. The summary should highlight key priorities, critical issues, potential risks, and positive developments.Requirements:  - Ensure the output includes all necessary information, is structured in a clear and organized manner, and is easy to understand.  - Ensure the Executive Summary contains no more than $num_words$ words.  - Create sentences using Markdown syntax with key points split by line breaks (\n) for the whole summary. Include a maximum of five to ten sentences based on the content you have, but create a minimum of three sentences.  - The executive summary should not exclude pertinent and important information, but at the same time, should not be too verbose.  - Do not mention anything related to ID, rows, SQL, queries, input data structure/format, general project status, or anything related to the process done to create this Executive Summary, any dates, and quotation marks.  - Mention items (tasks, risks, issues, actions, decisions, etc.) in a natural, narrative, and organic way, flowing with the text.The input data are the results of querying multiple databases, it will also contain the rules followed to query and filter the data, and the main table. Finally, we have the results of that SQL query.input:  Table name: workplan  Rules: The workplan section focuses on milestones and tasks that need immediate attention. The system filters them based on criteria such as a timeframe of seven days before or after today''s date, a status that is not cancelled, the project team selected in the UI, all priority levels with emphasis on critical, high, medium, low, and null, a hierarchy level of three or less, and types including milestones and tasks.  SQL result: [{''Title'': ''Contracts dispositioned'', ''TaskDueDate'': ''2024-06-20T12:00:00+00:00'', ''ProgressId'': 6, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''}]}  Table name: riskandissues  Rules: The system identifies high-priority risks and issues that need prompt attention. It filters based on criteria such as a timeframe of seven days before or after today, a status that is not cancelled, the project team selected in the UI, and all priority levels with emphasis on critical, high, medium, low, and null  SQL result: [{''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 26, ''ItemDescription'': ''Change in control points in the sales process such as price quotes, price changes in system, discounts, etc'', ''ItemDueDate'': ''2024-06-23T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''Change in control'', ''ReportingLevelId'': 4}, {''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 26, ''ItemDescription'': None, ''ItemDueDate'': ''2024-06-22T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''test'', ''ReportingLevelId'': 4}]}  Table name: actions  Rules: Actions are tasks or steps required to advance the project. The system searches for actions based on parameters such as a timeframe of seven days before or after today, a status that is not cancelled, the project team selected in the UI, and all priority levels with a focus on critical, high, medium, low, and null.  SQL result:[{''Title'': ''Deep database audit'', ''ItemDescription'': ''Checking audits and backups for integrity issues'', ''ReportingLevelId'': 5, ''ProjectTeamId'': 59, ''ItemPriority'': ''High'', ''ItemDueDate'': ''2024-06-22T12:00:00+00:00'', ''ProgressId'': 26}]}  Table name: decisions  Rules: Decisions are crucial choices that need to be made about the project''s direction. The system searches for pending decisions based on criteria such as a timeframe of seven days before or after today, a status that is not cancelled, the project team selected in the UI, and all priority levels with a focus on critical, high, medium, low, and null.  SQL result: [{''Title'': ''Determination of legal view on environmental risk required'', ''ItemPriority'': ''Critical'', ''ItemDueDate'': ''2024-06-21T12:00:00+00:00'', ''ProgressId'': 26, ''ReportingLevelId'': 5}]}  Table name: interdependencies  Rules: The system identifies high-priority interdependencies that need prompt attention. It searches based on criteria such as a timeframe of seven days before or after today, a status that is not cancelled, and the receiver or provider project team selected in the UI.  SQL Result: [{''Title'': ''Add new legal entities to payroll system'', ''ProviderProjectTeamId'': 64, ''ReceiverProjectTeamId'': 60, ''ItemDueDate'': ''2024-05-09T12:00:00+00:00''}]}output: The project is currently focused on several critical milestones and tasks that require immediate attention. \n Key milestones include the disposition of contracts, which is of high priority and needs to be completed soon. \n There are significant risks, such as changes in control points within the sales process, that pose critical challenges and must be addressed promptly.\n Actions like conducting a deep database audit to check for integrity issues are essential to ensure the project''s progress.\n Additionally, a critical decision regarding the legal view on environmental risk is pending and needs to be resolved to guide the project''s direction effectively.input:$queries_summary$output:"', NULL, N'Executive Summary', N'SYSTEM', NULL, N'System'),
(19, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'mimic_tone', N'"You are an expert in rewriting executive summaries to capture the tone and style of writing in your current report. Your task has two main objectives:* Mimic the tone and style of the provided executive summary examples.* Ensure the rewritten executive summary contains no more than $num_words$ words.You will receive a set of different executive summary examples and the current executive summary that you need to rewrite. Capture and mimic as much as possible of the writing style of the executive summary examples and rewrite (if necessary) the current executive summary using that style.DO NOT change the original content and idea of the current executive summary. If you consider it is already written in that style and the length is between the constraint, leave it as it is.Executive Summary Examples:[  {""ExecutiveSummary"": ""We were surprised to find that GAAP controls were not in place for US operations. This will impact our ability to transition, as the new legal entity structure requires financial reporting with US GAAP standards. We are evaluating the impact and will report back next week.""},  {""ExecutiveSummary"": ""This week the Finance team has completed the GAAP reviews and have mitigated a few risks related to the accounting processes at the acquisition. We will focus on getting the Hyperion reporting launched so we are ready for day one!""},  $executive_summary_examples$]Current Executive Summary:$executive_summary$Rewritten Executive Summary:"', NULL, N'Mimic Tone', N'SYSTEM', NULL, N'System'),
(20, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'next_steps', N'"You are a seasoned **Senior Partner in Strategy and Transactions** with 40 years of industry experience. Your expertise involves collaborating with functional leads to generate weekly project status reports based on the team''s Workplan, Risks, Actions, Issues, Decisions, and Interdependencies.You have been tasked with summarizing the detailed project data for the $target_team$ team to create the next steps section that encapsulates the key points that should be addressed in the near future.Your main task is to identify from the input data which of the not completed risks, issues, milestones, tasks, interdependencies, actions, decisions are most relevant for the context of the project and summarize them in a list.The next steps section is a list with multiple items, with only ONE key point from the SQL results in the input data summarized per item.The items are short sentences that MUST have a maximum total of $num_words$ words. These items should be written in passive voice, focusing on the action and not on who is in charge of the action.This is the project context you should consider to generate the report but never mention explicitly for the next steps section:$project_description$Instructions:- Do not mention anything related to SQL, rows, columns, data, application, dates, or the process to create this report.- Mention items (tasks, risks, issues, actions, decisions, etc.) in a natural, narrative, organic way and flowing with the text. Do not mention them explicitly.- Output format should be like this: [''item to address 1'', ''item to address 2''].- Ensure a maximum of five to ten items based on the content you have but minimum create three items (when there is enough information).- Ensure a maximum total of $num_words$ words per item.The input data are the results of querying multiple databases, it will also contain the rules followed to query and filter the data, and the main table. Finally, we have the results of that SQL query. The key points should be extracted from here, the name of the key points is on the Title column.  input:  Table name: workplan  Rules: The Workplan section outlines the upcoming milestones or tasks for the next week. The system searches for these items using filters such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, due dates within the last seven days and the next seven days, and types including tasks and milestones.  SQL Result: [{''Title'': ''Finalize credit and collections TSA scope and pricing'', ''TaskDueDate'': ''2024-06-27T12:00:00+00:00'', ''TimeBasedCalculatedStatusId'': 21, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''}, {''Title'': ''New task'', ''TaskDueDate'': ''2024-06-30T12:00:00+00:00'', ''TimeBasedCalculatedStatusId'': 21, ''ReportingLevelId'': 5, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Task''}]}  Table name: riskandissues  Rules: Upcoming risks and issues expected to be addressed in the next week are identified using criteria such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, and due dates within the last seven days and the next seven days.  SQL Result: [{''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 21, ''ItemDescription'': ''Treasury infrastructure not in place on Day One to manage cash payments / receipts'', ''ItemDueDate'': ''2024-06-30T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''Treasury infrastructure'', ''ReportingLevelId'': 5}]}  Table name: actions  Rules: The system searches for actions on track to be completed in the next week using parameters such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, and due dates within the last seven days and the next seven days.  SQL Result: [{''Title'': ''Cash to Close process review'', ''ItemDescription'': ''Process is lengthy - need to shorten'', ''ProjectTeamId'': 59, ''ItemPriority'': ''High'', ''ItemDueDate'': ''2024-06-28T12:00:00+00:00'', ''ItemStatusId'': 21}]}  Table name: decisions  Rules: Decisions expected to be made in the upcoming week are identified using criteria such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, and due dates within the last seven days and the next seven days.  SQL Result: [{''Title'': ''Decision on legal entities required to support benefits planning'', ''ItemDescription'': None, ''ProjectTeamId'': 59, ''ItemPriority'': ''Critical'', ''ItemDueDate'': ''2024-06-28T12:00:00+00:00'', ''ItemStatusId'': 21}]}  Table name: interdependencies  Rules: The system identifies high-priority interdependencies that need prompt attention using criteria such as a status that is not completed, closed, or cancelled, critical, high, medium, and low priorities, the receiver and provider project teams selected in the UI, and due dates within the last seven days and the next seven days.  SQL Result: [{''Title'': ''Add new legal entities to payroll system'', ''ProviderProjectTeamId'': 64, ''ReceiverProjectTeamId'': 60, ''ItemDueDate'': ''2024-05-09T12:00:00+00:00''}]}output: [""The work plan includes finalizing the scope for the credit and collections transition service agreement."",""The team needs to wrap up a newly assigned task."",""There is a critical risk with the ''Treasury infrastructure."",""Systems must be in place on Day One for managing cash transactions."",""The ''Cash to Close process'' needs review."",""The process is too protracted and needs efficiency."",""Adding new legal entities to the payroll system is pending."",""A decision is needed for legal entities supporting benefits planning.""]input:  Table name: workplan  Rules: The Workplan section outlines the upcoming milestones or tasks for the next week. The system searches for these items using filters such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, due dates within the last seven days and the next seven days, and types including tasks and milestones.  SQL Result: [{''Title'': ''Finalize credit and collections TSA scope and pricing'', ''TaskDueDate'': ''2024-06-27T12:00:00+00:00'', ''TimeBasedCalculatedStatusId'': 21, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''}, {''Title'': ''Document Day 1 readiness requirements'', ''TaskDueDate'': ''2024-06-30T12:00:00+00:00'', ''TimeBasedCalculatedStatusId'': 21, ''ReportingLevelId'': 5, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Task''}]}  Table name: interdependencies  Rules: The system identifies high-priority interdependencies that need prompt attention using criteria such as a status that is not completed, closed, or cancelled, critical, high, medium, and low priorities, the receiver and provider project teams selected in the UI, and due dates within the last seven days and the next seven days.  SQL Result: [{''Title'': ''Add new legal entities to payroll system'', ''ProviderProjectTeamId'': 64, ''ReceiverProjectTeamId'': 60, ''ItemDueDate'': ''2024-05-09T12:00:00+00:00''}]}output: [""Finalize the scope and pricing for the credit and collections transition service agreement"", ""Document the Day 1 readiness requirements"", ""Add new legal entities to the payroll system""]input:  $queries_next_steps$output:"', NULL, N'Next Steps', N'SYSTEM', NULL, N'System'),
(21, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(0 AS bit), N'status_id_query', N'SELECT Id FROM WeeklyStatusStatuses WHERE Title = ''{{StatusTitle}}''', NULL, N'Status Id Query', N'SYSTEM', NULL, N'System');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'Agent', N'CreatedAt', N'CreatedBy', N'Description', N'IsActive', N'Key', N'OriginalPrompt', N'Prompt', N'Title', N'Type', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[AssistantPrompts]'))
    SET IDENTITY_INSERT [AssistantPrompts] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250307104903_AssistantPromptsTableAndDATA', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DECLARE @var5 sysname;
SELECT @var5 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[AssistantPrompts]') AND [c].[name] = N'IsActive');
IF @var5 IS NOT NULL EXEC(N'ALTER TABLE [AssistantPrompts] DROP CONSTRAINT [' + @var5 + '];');
ALTER TABLE [AssistantPrompts] ADD DEFAULT CAST(1 AS bit) FOR [IsActive];
GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'DETECT_MISMATCH', [Prompt] = N'You are a Strategy and Transactions Senior Partner with 40 years of industry experience at EY.Your task is to detect if there is a mismatch between the target team and the EY IP teams.For example:- If the target team is ""IT"" and the EY IP teams are: ""Information Technology"", ""IT"", ""Technology"", there is no mismatch.- If the target team is ""Cybersecurity"" and the EY IP teams are: ""IT"", ""Information Technology"", ""Technology"", there is a mismatch.- If the target team is ""Finance"" and the EY IP teams are: ""Finance"", ""Finance and Accounting"", there is no mismatch.  - If the target team is ""Controllership"" and the EY IP teams are: ""Finance"", ""Finance and Accounting"", there is a mismatch.### The target team is:---------------------  {target_team}---------------------### The EY IP teams are:---------------------{eyip_project_teams}---------------------Based on the information provided, choose the most appropriate option:1. there is a mismatch between the target team and the EY IP teams, or2. there is no mismatch between the target team and the EY IP teams.Answer with the number of the chosen option only, without adding extra information. For example: 1.Answer:"'
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'EXAMPLE_TASK_STRUCTURE', [Prompt] = N'"[      {          ""summary_task"": ""Detailed summary task header goes here"",          ""tasks"": [              ""Task description 1"",              ""Task description 2"",              ""Task description 3"",              ""Task description 4"",              ""Task description 5"",              ""Task description 6"",              ""Task description 7"",              ""Task description 8"",              ""Task description 9"",              ""Task description 10"",              ""Task description 11"",              ""Task description 12"",              ""Task description 13"",              ""Task description 14"",              ""Task description 15"",          ],          ""milestone"": ""Milestone description header goes here""      },      {          ""summary_task"": ""Detailed of another summary task goes here"",          ""tasks"": [              ""Another task description 1"",              ""Another task description 2"",              ""Another task description 3"",              ""Another task description 4"",              ""Another task description 5"",              ""Another task description 6"",              ""Another task description 7"",              ""Another task description 8"",              ""Another task description 9"",              ""Another task description 10"",              ""Another task description 11"",              ""Another task description 12"",              ""Another task description 13"",              ""Another task description 14"",          ],          ""milestone"": ""Another milestone description""      },      {...},      {...},      {...},  ]"'
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'EY_IP_DATA_CONSOLIDATION', [Prompt] = N'"You are a highly intelligent writer tasked with adapting generic task descriptions into a specific {target_team}''s work plan.The following table contains a list of generic tasks, along with their descriptions and classifications as either tasks, summary tasks, or milestones:----------------------------------------------{ey_ip_data}----------------------------------------------Your task is to transform the provided information into a highly detailed, informative, and specific work plan tailored to the team''s responsibilities.The specific project details are as follows:----------------------------------------------{project_outline}----------------------------------------------Ensure that:  - Generate concise and descriptive summary task titles that are informative and formatted like chapter names, avoiding the use of colons or punctuation that implies separation.  - Tasks must be deatiled and specific, providing a clear understanding of the work involved.  - Tasks that do not belong to the team''s responsibilities in the current project must be excluded.Format the work plan in JSON, following this example structure:----------------------------------------------{example_structure}----------------------------------------------Answer:"'
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'FILTER_EYIP_TEAM_DATA', [Prompt] = N'"You are a Senior Partner in Strategy and Transactions with 40 years of industry experience at EY.You will be provided with general information from EY IP, and your task is to retain any relevant team information while discarding the less relevant ones.### The complete EY IP data is:---------------------{eyip_data}---------------------### The target team is:---------------------{target_team}---------------------Instructions:- Retain any relevant team information from the EY IP data, and remove information you consider irrelevant for the target team.- Provide the cleaned EY IP data, including tasks, summary tasks, and milestones.- Do not include any additional or extra information in your response.Format the team data in JSON, following this example structure:----------------------------------------------{example_structure}----------------------------------------------Answer:"'
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'GENERIC_PROJECT_OUTLINE', [Prompt] = N'"goal_summary: The goal of this project is to establish a comprehensive framework that ensures the successful execution and completion of the project. This includes developing a detailed project plan, allocating resources efficiently, ensuring compliance with relevant standards and regulations, and implementing effective project governance and support structures.objective_summary: The objectives of the project are to facilitate the smooth execution of project activities by planning and coordinating tasks, developing efficient processes, ensuring clear roles and responsibilities for team members, providing necessary training and support, and proposing a robust operational model to achieve project goals.project_description_summary: The project involves designing and implementing a structured approach to achieve the project goals. This includes defining project scope, setting up processes and procedures, ensuring compliance with relevant standards, developing strategies to optimize resource utilization, aligning project activities with organizational objectives, and addressing any potential challenges that may arise.success_factors_summary: The success factors include effective resource management, clear communication and coordination among team members, timely completion of project tasks, adherence to project timelines and budgets, continuous monitoring and evaluation of project progress, and ensuring minimal disruption to ongoing operations during the project execution.milestones_summary: The milestones include developing a detailed project plan by Month 1, establishing a project team by Month 2, initiating key project activities by Month 3, completing the first phase of the project by Month 6, conducting a mid-project review by Month 9, finalizing project deliverables by Month 11, and completing the project by Month 12."'
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'INTERDEPENDENCIES_QUERY', [Prompt] = N'select DISTINCT PT.Title as ProjectTeam from ProjectTeams PT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] = ''PROJECT_MANAGEMENT'' AND PT.ManageWorkPlan = 1'
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'PROCESS_INPUT', [Prompt] = N'"From the following list of Project Teams names:---------------------{inputs}---------------------Select the name or names that are most related to {target}.Respond with a list of the chosen Project Team names.You should select at least one Project Team name.Format the response in JSON without adding extra information, for example: [""HR"", ""Human Resources"", ""HR, Human Resources""].Answer:"'
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'PROJECT_OUTLINE_ENRICHMENT_NO_DOCS', [Prompt] = N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.Your expertise lies in creating detailed outlines for a project work plan.You will receive a list of elements which composed a generic project outline, each related to different topics: goals, objectives, project descriptions, success factors, and milestones.Additionally, you will be provided with some project context, which could be a guide about extra information related to the project.Your task is to enrich the generic workplan outlines by using the project context.Ensure the outlines are well-structured, logically organized, and cover all the key aspects necessary for effective project planning.You have been provided with the following elements:----------------------------------------------{{{project_outline_elements}project_context: {project_context}}}----------------------------------------------Ensure that:    -The details are clear, easy to understand, and accurately reflect the provided elements.    -Each piece of information captures the essence of the respective topic.    -The resulting information is logically structured and comprehensive.    -The JSON string must be free of any enclosing quotation marks and ''json'' keyword.    -The project context will enrich the outline only if it adds significant value to the work plan.Provide your summaries in the following format:{{""goal_summary"": ""{{Adapt the goal based on the provided project context}}"",""objective_summary"": ""{{Adapt the objective based on the provided project context}}"",""project_description_summary"": ""{{Adapt the project description based on the provided project context}}"",""success_factors_summary"": ""{{Adapt the success factors based on the provided project context}}"",""milestones_summary"": ""{{Adapt the milestones based on the provided project context}}""}}Answer:"'
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'PROJECT_OUTLINE_ENRICHMENT', [Prompt] = N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.Your expertise lies in creating detailed outlines for a project work plan.You will receive a list of elements, each containing chunks of information related to different topics: goals, objectives, project descriptions, success factors, and milestones.Additionally, you will be provided with some project context, which could be a guide about extra information related to the project.Your task is to synthesize this information into comprehensive outlines that will serve as the foundation for building a complete work plan.Ensure the outlines are well-structured, logically organized, and cover all the key aspects necessary for effective project planning.You have been provided with the following elements:----------------------------------------------{{goal_elements: {goal_elements}objective_elements: {objective_elements}project_description_elements: {project_description_elements}success_factors_elements: {success_factors_elements}milestones_elements: {milestone_elements}project_context: {project_context}}}----------------------------------------------Ensure that:    -The details are clear, easy to understand, and accurately reflect the provided elements.    -Each piece of information captures the essence of the respective topic.    -The resulting information is logically structured and comprehensive.    -The JSON string must be free of any enclosing quotation marks and ''json'' keyword.    -The project context will enrich the outline only if it adds significant value to the work plan.Provide your summaries in the following format:{{""goal_summary"": ""{{Summarize the goal based on the provided elements}}"",""objective_summary"": ""{{Summarize the objective based on the provided elements}}"",""project_description_summary"": ""{{Summarize the project description based on the provided elements}}"",""success_factors_summary"": ""{{Summarize the success factors based on the provided elements}}"",""milestones_summary"": ""{{Summarize the milestones based on the provided elements}}""}}Example:input:{{goal_elements: [""Increase market share by 10%"", ""Expand into new regions"", ""Enhance brand recognition""]objective_elements: [""Launch new product line"", ""Improve customer satisfaction"", ""Reduce operational costs""]project_description_elements: [""Develop a marketing strategy"", ""Conduct market research"", ""Implement new sales tactics""]success_factors_elements: [""Customer satisfaction"", ""Market research"", ""Sales tactics""]milestones_elements: [""Product launch"", ""Customer feedback analysis"", ""Cost reduction analysis""]}}output:{{""goal_summary"": ""The goal is to increase market share by 10% through expansion into new regions and enhancing brand recognition."",""objective_summary"": ""The objective is to launch a new product line, improve customer satisfaction, and reduce operational costs."",""project_description_summary"": ""The project involves developing a marketing strategy, conducting market research, and implementing new sales tactics."",""success_factors_summary"": ""The success factors include customer satisfaction, market research, and sales tactics."",""milestones_summary"": ""The milestones include product launch, customer feedback analysis, and cost reduction analysis.""}}Answer:"'
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'PROJECT_OUTLINE_KEYS', [Prompt] = N'"- Goals aims purposes of the project- Objectives targets of the project- Description overview summary outline of the project- Key critical success factors- Milestones deliverables of the project"'
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'TASK_GENERATION_WITHOUT_PROJECT_OUTLINES', [Prompt] = N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.Your expertise lies in working with functional leads to develop detailed, function-specific work plans for {transaction_type} projects.You are currently collaborating with the {target_team} lead to create a high-quality work plan that leverages:      1.	Firm-specific IPs (industry-proven templates).  2.	Intelligent insights derived from context and business logic.The work plan must address gaps, interdependencies, and risks while being logically structured and actionable.The following work plan outline has been provided to you:### Work Plan Outline:----------------  sector: {sector}subSector: {subSector}  timeline: {timeline}----------------### Firm IP Templates (relevant to {target_team} activities):----------------related_activities_examples: {eyip_adapted_data}----------------  ### Requirements:Generate a function-specific work plan for the {target_team} that adheres to the following principles:  1.	Relevance: All tasks must align with the {target_team}''s role in the project. Avoid mixing tasks from other functions.  2.	Clarity: Tasks must be precise, actionable, and follow a sequential and logical order.  3.	Completeness:      -Determine a sufficient number of tasks for each summary task to ensure a highly detailed and thorough plan.      -Address identified risks, assumptions, interdependencies, and decisions.      -Highlight interdependencies with other functions clearly:        - For each task that depends on another function, explicitly state the dependency within the task description.        - Create a task to address the interdependency, ensuring it is actionable and relevant to the current team''s responsibilities.        - Include the interdependency in parentheses within the task description, e.g., ''Coordination for employee data and HRIS migration (Interdependency on HR).        - Ensure interdependent tasks are logically placed in the sequence and linked to relevant milestones.  4.	Structure: Group tasks under summary tasks, ensuring each summary task has a milestone.### Deliverable Format:-Provide the work plan in JSON format, structured as follows:----------------{example_structure}-----------------Do not add any comments or additional information to your response, just the JSON structure.### Instructions for Execution:  1.	Analyze Inputs: Examine all information to identify deliverables, milestones, and risks.      2.	Structure the Plan: Ensure tasks are grouped under relevant summary tasks with corresponding milestones.  3.	Account for Interdependencies: Clearly highlight any cross-functional dependencies in the task descriptions.  4.	Quality Assurance: Maintain a concise format while ensuring depth and completeness.      5.  Answer with the JSON structure, withoud any comments or additional information.Answer:"'
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'TASK_GENERATION', [Prompt] = N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.Your expertise lies in working with functional leads to develop detailed, function-specific work plans for {transaction_type} projects.You are currently collaborating with the {target_team} lead to create a high-quality work plan that leverages:  1.	Client-provided data (charters, goals, milestones, and timelines).  2.	Firm-specific IPs (industry-proven templates).  3.	Intelligent insights derived from context and business logic.The work plan must address gaps, interdependencies, and risks while being logically structured and actionable.The following work plan outline has been provided to you:### Work Plan Outline:----------------goals: {goals}objectives: {objectives}description: {description}sector: {sector}subSector: {subSector}success_factors: {success_factors}milestones: {milestones}timeline: {timeline}----------------### Firm IP Templates (relevant to {target_team} activities):----------------related_activities_examples: {eyip_adapted_data}----------------### Team-Specific Context (from search results and uploaded data):----------------relevant_context: {search_results}----------------### Requirements:Generate a function-specific work plan for the {target_team} that adheres to the following principles:  1.	Relevance: All tasks must align with the {target_team}''s role in the project. Avoid mixing tasks from other functions.  2.	Clarity: Tasks must be precise, actionable, and follow a sequential and logical order.  3.	Completeness:      -Determine a sufficient number of tasks for each summary task to ensure a highly detailed and thorough plan.      -Address identified risks, assumptions, interdependencies, and decisions.      -Highlight interdependencies with other functions clearly:        - For each task that depends on another function, explicitly state the dependency within the task description.        - Create a task to address the interdependency, ensuring it is actionable and relevant to the current team''s responsibilities.        - Include the interdependency in parentheses within the task description, e.g., ''Coordination for employee data and HRIS migration (Interdependency on HR).        - Ensure interdependent tasks are logically placed in the sequence and linked to relevant milestones.        - Ensure team interdendencies are enlisted in the following ones: {interdependencies_list}.  4.	Structure: Group tasks under summary tasks, ensuring each summary task has a milestone.### Deliverable Format:Provide the work plan in JSON format, structured as follows:----------------{example_structure}----------------### Instructions for Execution:  1.	Analyze Inputs: Examine the charter, metadata, and firm IPs to identify deliverables, milestones, and risks.  2.	Prioritize Data: Leverage client-provided data first; use firm IPs to fill gaps or provide additional insights.  3.	Structure the Plan: Ensure tasks are grouped under relevant summary tasks with corresponding milestones.  4.	Account for Interdependencies: Clearly highlight any cross-functional dependencies in the task descriptions.      5.	Quality Assurance: Maintain a concise format while ensuring depth and completeness.  6.  Avoid Duplicates: Do not include any duplicate summary tasks, milestones, or tasks.Answer:"'
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'ACC_AND_NE_CHAR_LIMIT_QUERY', [Prompt] = N'SELECT CHARACTER_MAXIMUM_LENGTH AS MaxCharLimit FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''AccomplishmentsAndNextSteps'' AND COLUMN_NAME = ''Title'''
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'ACCOMPLISHMENTS', [Prompt] = N'"You are a seasoned **Senior Partner in Strategy and Transactions** with 40 years of industry experience. Your expertise involves collaborating with functional leads to generate weekly project status reports based on the team''s Workplan, Risks, Actions, Issues, Decisions, and Interdependencies.You have been tasked with summarizing the detailed project data for the $target_team$ team to create an accomplishments section that encapsulates the the key points worked during the last reporting period.Your main task is to identify from the input data which of the completed, closed or done risks, issues, milestones, tasks, interdependencies, actions, decisions are most relevant for the context of the project and summarize them in a list.The accomplishments section is a list with multiple items, with only ONE key point from the SQL results in the input data summarized per item.The items are short sentences that MUST have a maximum total of $num_words$ words. These items should be written in passive voice, focusing on the action and not on who is in charge of the action.This is the project context you should consider to generate the report but never mention explicitly for the accomplishments section:$project_context$Instructions:- Do not mention anything related to SQL, rows, columns, data, application, dates, or the process to create this report.- Mention items (tasks, risks, issues, actions, decisions, etc.) in a natural, narrative, organic way and flowing with the text. Do not mention them explicitly.- Output format should be like this: [""item accomplished 1"", ""item accomplished 2""].- Ensure a maximum of five to ten items based on the content you have but minimum create three items (when there is enough information).- Ensure a maximum total of $num_words$ words per item.The input data are the results of querying multiple databases, it will also contain the rules followed to query and filter the data, and the main table. Finally, we have the results of that SQL query. The key points should be extracted from here, the name of the key points is on the Title column.input:  Table name: workplan  Rules: The Workplan section showcases milestones or tasks completed in the past week. The system filters these accomplishments by looking for a closed status, the project team selected in the UI, high, medium, low, and null priorities, completion within the last seven days, a hierarchy level of three or less, and types including tasks and milestones.  SQL Result: [{''Title'': ''Contracts dispositioned'', ''TaskDueDate'': ''2024-06-20T12:00:00+00:00'', ''ProgressId'': 6, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''}]  Table name: riskandissues  Rules: This subsection identifies risks and issues resolved in the past week. The search criteria include a closed status, the project team selected in the UI, high, medium, and low priorities, and resolution within the last seven days.  SQL Result: [{''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 26, ''ItemDescription'': ''Change in control points in the sales process such as price quotes, price changes in system, discounts, etc'', ''ItemDueDate'': ''2024-06-23T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''Change in control'', ''ReportingLevelId'': 4}, {''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 26, ''ItemDescription'': None, ''ItemDueDate'': ''2024-06-22T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''test'', ''ReportingLevelId'': 4}]}  Table name: actions  Rules: The system searches for actions completed in the past week using parameters such as a closed status, the project team selected in the UI, high, medium, and low priorities, and completion within the last seven days.  SQL Result: [{''Title'': ''Deep database audit'', ''ItemDescription'': ''Checking audits and backups for integrity issues'', ''ReportingLevelId'': 5, ''ProjectTeamId'': 59, ''ItemPriority'': ''High'', ''ItemDueDate'': ''2024-06-22T12:00:00+00:00'', ''ProgressId'': 26}]}  Table name: decisions  Rules: Decisions made and closed in the past week are identified using criteria such as a closed status, the project team selected in the UI, high, medium, and low priorities, and closure within the last seven days.  SQL Result: [{''Title'': ''Determination of legal view on environmental risk required'', ''ItemPriority'': ''Critical'', ''ItemDueDate'': ''2024-06-21T12:00:00+00:00'', ''ProgressId'': 26, ''ReportingLevelId'': 5}]}  Table name: interdependencies  Rules: The system identifies high-priority interdependencies that need prompt attention. The search criteria include a closed status, the receiver and provider project teams selected in the UI, high, medium, and low priorities, and closure within the last seven days.  SQL Result: [{''Title'': ''Add new legal entities to payroll system'', ''ProviderProjectTeamId'': 64, ''ReceiverProjectTeamId'': 60, ''ItemDueDate'': ''2024-05-09T12:00:00+00:00''}]}output: [""The disposition of contracts was completed."", ""Changes in control mechanisms affecting the sales process were navigated."", ""A risk labeled ''test'' was addressed."", ""A thorough audit of databases was carried out."", ""Backups were scrutinized to ensure their integrity."", ""Legal entities were added to the payroll system."", ""A decision on the legal stance concerning environmental risks was concluded.""]input:  Table name: workplan  Rules: The Workplan section showcases milestones or tasks completed in the past week. The system filters these accomplishments by looking for a closed status, the project team selected in the UI, high, medium, low, and null priorities, completion within the last seven days, a hierarchy level of three or less, and types including tasks and milestones.  SQL Result: [{''Title'': ''Contracts dispositioned'', ''TaskDueDate'': ''2024-06-20T12:00:00+00:00'', ''ProgressId'': 6, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''},{""Title"": ""Finish Detailing TSA"",""TaskDueDate"": ""2024-11-30T04:04:57.227+00:00"",""ReportingLevelId"": 4,""Priority"": ""(1) High"",""WorkPlanTaskType"": ""Task"",""ItemCategory"": ""Was past due current week"",""StatusTitle"": ""Behind Schedule""}]output: [""The disposition of contracts was completed."", ""The detailing of TSA was finished""]input:  $queries_accomplishments$output:"'
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'ASSISTANT_CONTENT_GENERATOR_QUERIES', [Prompt] = N'"SELECT title, description as rules, key, sqlQueryFROM [AssistantContentGeneratorQueries]WHEREgeneratorType=''ProjectStatus''ANDisActive is true"'
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'EXECUTIVE_SUMMARY_CHAR_LIMIT_QUERY', [Prompt] = N'"SELECT CHARACTER_MAXIMUM_LENGTH AS MaxCharLimitFROM INFORMATION_SCHEMA.COLUMNSWHERETABLE_NAME = ''ProjectStatusEntries''AND COLUMN_NAME = ''ExecutiveSummary''"'
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'EXECUTIVE_SUMMARY_SQL_EXAMPLES', [Prompt] = N'"SELECT TOP 3 PSE.ExecutiveSummary AS ExecutiveSummaryFROM ProjectStatusEntries PSELEFT JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.IDLEFT JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.IDWHEREPSE.ExecutiveSummary IS NOT NULL"'
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'EXECUTIVE_SUMMARY', [Prompt] = N'"You are a seasoned **Senior Partner in Strategy** and Transactions with 40 years of industry experience. Your expertise involves collaborating with functional leads to generate weekly project status reports based on the team''s Workplan, Risks, Actions, Issues, Decisions, and Interdependencies.You have been tasked with summarizing the detailed project data for the $target_team$ team to create an Executive Summary that encapsulates the project''s status, highlighting key trends, potential issues, and positive developments.This is the project context you should consider to generate the report but never mention explicitly in the Executive Summary:$project_context$Our main goal is to generate an Executive Summary in a set of sentences split by line breaks using Markdown syntax (i.e., use \n to indicate line breaks) that provides a comprehensive overview of the project''s status, suitable for executive consumption. The summary should highlight key priorities, critical issues, potential risks, and positive developments.Requirements:  - Ensure the output includes all necessary information, is structured in a clear and organized manner, and is easy to understand.  - Ensure the Executive Summary contains no more than $num_words$ words.  - Create sentences using Markdown syntax with key points split by line breaks (\n) for the whole summary. Include a maximum of five to ten sentences based on the content you have, but create a minimum of three sentences.  - The executive summary should not exclude pertinent and important information, but at the same time, should not be too verbose.  - Do not mention anything related to ID, rows, SQL, queries, input data structure/format, general project status, or anything related to the process done to create this Executive Summary, any dates, and quotation marks.  - Mention items (tasks, risks, issues, actions, decisions, etc.) in a natural, narrative, and organic way, flowing with the text.The input data are the results of querying multiple databases, it will also contain the rules followed to query and filter the data, and the main table. Finally, we have the results of that SQL query.input:  Table name: workplan  Rules: The workplan section focuses on milestones and tasks that need immediate attention. The system filters them based on criteria such as a timeframe of seven days before or after today''s date, a status that is not cancelled, the project team selected in the UI, all priority levels with emphasis on critical, high, medium, low, and null, a hierarchy level of three or less, and types including milestones and tasks.  SQL result: [{''Title'': ''Contracts dispositioned'', ''TaskDueDate'': ''2024-06-20T12:00:00+00:00'', ''ProgressId'': 6, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''}]}  Table name: riskandissues  Rules: The system identifies high-priority risks and issues that need prompt attention. It filters based on criteria such as a timeframe of seven days before or after today, a status that is not cancelled, the project team selected in the UI, and all priority levels with emphasis on critical, high, medium, low, and null  SQL result: [{''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 26, ''ItemDescription'': ''Change in control points in the sales process such as price quotes, price changes in system, discounts, etc'', ''ItemDueDate'': ''2024-06-23T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''Change in control'', ''ReportingLevelId'': 4}, {''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 26, ''ItemDescription'': None, ''ItemDueDate'': ''2024-06-22T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''test'', ''ReportingLevelId'': 4}]}  Table name: actions  Rules: Actions are tasks or steps required to advance the project. The system searches for actions based on parameters such as a timeframe of seven days before or after today, a status that is not cancelled, the project team selected in the UI, and all priority levels with a focus on critical, high, medium, low, and null.  SQL result:[{''Title'': ''Deep database audit'', ''ItemDescription'': ''Checking audits and backups for integrity issues'', ''ReportingLevelId'': 5, ''ProjectTeamId'': 59, ''ItemPriority'': ''High'', ''ItemDueDate'': ''2024-06-22T12:00:00+00:00'', ''ProgressId'': 26}]}  Table name: decisions  Rules: Decisions are crucial choices that need to be made about the project''s direction. The system searches for pending decisions based on criteria such as a timeframe of seven days before or after today, a status that is not cancelled, the project team selected in the UI, and all priority levels with a focus on critical, high, medium, low, and null.  SQL result: [{''Title'': ''Determination of legal view on environmental risk required'', ''ItemPriority'': ''Critical'', ''ItemDueDate'': ''2024-06-21T12:00:00+00:00'', ''ProgressId'': 26, ''ReportingLevelId'': 5}]}  Table name: interdependencies  Rules: The system identifies high-priority interdependencies that need prompt attention. It searches based on criteria such as a timeframe of seven days before or after today, a status that is not cancelled, and the receiver or provider project team selected in the UI.  SQL Result: [{''Title'': ''Add new legal entities to payroll system'', ''ProviderProjectTeamId'': 64, ''ReceiverProjectTeamId'': 60, ''ItemDueDate'': ''2024-05-09T12:00:00+00:00''}]}output: The project is currently focused on several critical milestones and tasks that require immediate attention. \n Key milestones include the disposition of contracts, which is of high priority and needs to be completed soon. \n There are significant risks, such as changes in control points within the sales process, that pose critical challenges and must be addressed promptly.\n Actions like conducting a deep database audit to check for integrity issues are essential to ensure the project''s progress.\n Additionally, a critical decision regarding the legal view on environmental risk is pending and needs to be resolved to guide the project''s direction effectively.input:$queries_summary$output:"'
WHERE [ID] = 18;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'MIMIC_TONE', [Prompt] = N'"You are an expert in rewriting executive summaries to capture the tone and style of writing in your current report. Your task has two main objectives:* Mimic the tone and style of the provided executive summary examples.* Ensure the rewritten executive summary contains no more than $num_words$ words.You will receive a set of different executive summary examples and the current executive summary that you need to rewrite. Capture and mimic as much as possible of the writing style of the executive summary examples and rewrite (if necessary) the current executive summary using that style.DO NOT change the original content and idea of the current executive summary. If you consider it is already written in that style and the length is between the constraint, leave it as it is.Executive Summary Examples:[  {""ExecutiveSummary"": ""We were surprised to find that GAAP controls were not in place for US operations. This will impact our ability to transition, as the new legal entity structure requires financial reporting with US GAAP standards. We are evaluating the impact and will report back next week.""},  {""ExecutiveSummary"": ""This week the Finance team has completed the GAAP reviews and have mitigated a few risks related to the accounting processes at the acquisition. We will focus on getting the Hyperion reporting launched so we are ready for day one!""},  $executive_summary_examples$]Current Executive Summary:$executive_summary$Rewritten Executive Summary:"'
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'NEXT_STEPS', [Prompt] = N'"You are a seasoned **Senior Partner in Strategy and Transactions** with 40 years of industry experience. Your expertise involves collaborating with functional leads to generate weekly project status reports based on the team''s Workplan, Risks, Actions, Issues, Decisions, and Interdependencies.You have been tasked with summarizing the detailed project data for the $target_team$ team to create the next steps section that encapsulates the key points that should be addressed in the near future.Your main task is to identify from the input data which of the not completed risks, issues, milestones, tasks, interdependencies, actions, decisions are most relevant for the context of the project and summarize them in a list.The next steps section is a list with multiple items, with only ONE key point from the SQL results in the input data summarized per item.The items are short sentences that MUST have a maximum total of $num_words$ words. These items should be written in passive voice, focusing on the action and not on who is in charge of the action.This is the project context you should consider to generate the report but never mention explicitly for the next steps section:$project_description$Instructions:- Do not mention anything related to SQL, rows, columns, data, application, dates, or the process to create this report.- Mention items (tasks, risks, issues, actions, decisions, etc.) in a natural, narrative, organic way and flowing with the text. Do not mention them explicitly.- Output format should be like this: [''item to address 1'', ''item to address 2''].- Ensure a maximum of five to ten items based on the content you have but minimum create three items (when there is enough information).- Ensure a maximum total of $num_words$ words per item.The input data are the results of querying multiple databases, it will also contain the rules followed to query and filter the data, and the main table. Finally, we have the results of that SQL query. The key points should be extracted from here, the name of the key points is on the Title column.  input:  Table name: workplan  Rules: The Workplan section outlines the upcoming milestones or tasks for the next week. The system searches for these items using filters such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, due dates within the last seven days and the next seven days, and types including tasks and milestones.  SQL Result: [{''Title'': ''Finalize credit and collections TSA scope and pricing'', ''TaskDueDate'': ''2024-06-27T12:00:00+00:00'', ''TimeBasedCalculatedStatusId'': 21, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''}, {''Title'': ''New task'', ''TaskDueDate'': ''2024-06-30T12:00:00+00:00'', ''TimeBasedCalculatedStatusId'': 21, ''ReportingLevelId'': 5, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Task''}]}  Table name: riskandissues  Rules: Upcoming risks and issues expected to be addressed in the next week are identified using criteria such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, and due dates within the last seven days and the next seven days.  SQL Result: [{''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 21, ''ItemDescription'': ''Treasury infrastructure not in place on Day One to manage cash payments / receipts'', ''ItemDueDate'': ''2024-06-30T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''Treasury infrastructure'', ''ReportingLevelId'': 5}]}  Table name: actions  Rules: The system searches for actions on track to be completed in the next week using parameters such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, and due dates within the last seven days and the next seven days.  SQL Result: [{''Title'': ''Cash to Close process review'', ''ItemDescription'': ''Process is lengthy - need to shorten'', ''ProjectTeamId'': 59, ''ItemPriority'': ''High'', ''ItemDueDate'': ''2024-06-28T12:00:00+00:00'', ''ItemStatusId'': 21}]}  Table name: decisions  Rules: Decisions expected to be made in the upcoming week are identified using criteria such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, and due dates within the last seven days and the next seven days.  SQL Result: [{''Title'': ''Decision on legal entities required to support benefits planning'', ''ItemDescription'': None, ''ProjectTeamId'': 59, ''ItemPriority'': ''Critical'', ''ItemDueDate'': ''2024-06-28T12:00:00+00:00'', ''ItemStatusId'': 21}]}  Table name: interdependencies  Rules: The system identifies high-priority interdependencies that need prompt attention using criteria such as a status that is not completed, closed, or cancelled, critical, high, medium, and low priorities, the receiver and provider project teams selected in the UI, and due dates within the last seven days and the next seven days.  SQL Result: [{''Title'': ''Add new legal entities to payroll system'', ''ProviderProjectTeamId'': 64, ''ReceiverProjectTeamId'': 60, ''ItemDueDate'': ''2024-05-09T12:00:00+00:00''}]}output: [""The work plan includes finalizing the scope for the credit and collections transition service agreement."",""The team needs to wrap up a newly assigned task."",""There is a critical risk with the ''Treasury infrastructure."",""Systems must be in place on Day One for managing cash transactions."",""The ''Cash to Close process'' needs review."",""The process is too protracted and needs efficiency."",""Adding new legal entities to the payroll system is pending."",""A decision is needed for legal entities supporting benefits planning.""]input:  Table name: workplan  Rules: The Workplan section outlines the upcoming milestones or tasks for the next week. The system searches for these items using filters such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, due dates within the last seven days and the next seven days, and types including tasks and milestones.  SQL Result: [{''Title'': ''Finalize credit and collections TSA scope and pricing'', ''TaskDueDate'': ''2024-06-27T12:00:00+00:00'', ''TimeBasedCalculatedStatusId'': 21, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''}, {''Title'': ''Document Day 1 readiness requirements'', ''TaskDueDate'': ''2024-06-30T12:00:00+00:00'', ''TimeBasedCalculatedStatusId'': 21, ''ReportingLevelId'': 5, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Task''}]}  Table name: interdependencies  Rules: The system identifies high-priority interdependencies that need prompt attention using criteria such as a status that is not completed, closed, or cancelled, critical, high, medium, and low priorities, the receiver and provider project teams selected in the UI, and due dates within the last seven days and the next seven days.  SQL Result: [{''Title'': ''Add new legal entities to payroll system'', ''ProviderProjectTeamId'': 64, ''ReceiverProjectTeamId'': 60, ''ItemDueDate'': ''2024-05-09T12:00:00+00:00''}]}output: [""Finalize the scope and pricing for the credit and collections transition service agreement"", ""Document the Day 1 readiness requirements"", ""Add new legal entities to the payroll system""]input:  $queries_next_steps$output:"'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'STATUS_ID_QUERY', [Prompt] = N'SELECT Id FROM WeeklyStatusStatuses WHERE Title = ''{{StatusTitle}}'''
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

CREATE UNIQUE INDEX [IX_AssistantPrompts_Key] ON [AssistantPrompts] ([Key]);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250312084800_UpdateAssistantPrompts', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

DECLARE @var6 sysname;
SELECT @var6 = [d].[name]
FROM [sys].[default_constraints] [d]
INNER JOIN [sys].[columns] [c] ON [d].[parent_column_id] = [c].[column_id] AND [d].[parent_object_id] = [c].[object_id]
WHERE ([d].[parent_object_id] = OBJECT_ID(N'[AssistantPrompts]') AND [c].[name] = N'IsActive');
IF @var6 IS NOT NULL EXEC(N'ALTER TABLE [AssistantPrompts] DROP CONSTRAINT [' + @var6 + '];');
ALTER TABLE [AssistantPrompts] ADD DEFAULT CAST(1 AS bit) FOR [IsActive];
GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      WP.Title,      WP.TaskDueDate,      WP.ReportingLevelId,      WP.Priority,      WP.WorkPlanTaskType,      CASE          WHEN WP.Priority = ''(1) High'' THEN 1         WHEN WP.Priority = ''(2) Normal'' THEN 2         WHEN WP.Priority = ''(3) Low'' THEN 3         WHEN WP.Priority IS NULL OR WP.Priority= '''' THEN 4     END AS PriorityRank,     CASE          WHEN WP.TaskDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN WP.TaskDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title as StatusTitle FROM Workplan WP JOIN Statuses S ON WP.WorkPlanTaskStatusId = S.Id WHERE WP.WorkPlanTaskType IN (''Milestone'', ''Task'') AND S.[Key] NOT IN (''CANCELLED'') AND WP.HierarchyLevel <= 3 AND WP.TaskDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}}) AND WP.ProjectTeamId = {{ProjectTeam}}),HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.TaskDueDate,  PT.ReportingLevelId,  PT.Priority,  PT.WorkPlanTaskType, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      RAI.IssueRiskCategory,      RAI.ItemStatusId ,      RAI.ItemDescription,      RAI.ItemDueDate,      RAI.ItemPriority,      RAI.Title,      RAI.ReportingLevelId,      CASE          WHEN RAI.ItemPriority = ''Critical'' THEN 1         WHEN RAI.ItemPriority = ''High'' THEN 2         WHEN RAI.ItemPriority = ''Medium'' THEN 3         WHEN RAI.ItemPriority = ''Low'' THEN 4         WHEN RAI.ItemPriority IS NULL OR RAI.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  RAI.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN RAI.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM RisksAndIssues RAI JOIN Statuses S ON RAI.ItemStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'') AND RAI.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND RAI.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.IssueRiskCategory,  PT.ItemStatusId ,  PT.ItemDescription,  PT.ItemDueDate,  PT.ItemPriority,  PT.Title,  PT.ReportingLevelId, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      ACT.Title,      ACT.ItemDescription,      ACT.ProjectTeamId,      ACT.ItemPriority,      ACT.ItemDueDate,      ACT.ReportingLevelId,      CASE          WHEN ACT.ItemPriority = ''Critical'' THEN 1         WHEN ACT.ItemPriority = ''High'' THEN 2         WHEN ACT.ItemPriority = ''Medium'' THEN 3         WHEN ACT.ItemPriority = ''Low'' THEN 4         WHEN ACT.ItemPriority IS NULL OR ACT.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  ACT.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN ACT.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Actions ACT JOIN Statuses S ON ACT.ItemStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'') AND ACT.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND ACT.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.ItemDescription,  PT.ProjectTeamId,  PT.ItemPriority,  PT.ItemDueDate, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      DCS.Title,      DCS.ItemDescription,      DCS.ProjectTeamId,      DCS.ItemPriority,      DCS.ItemDueDate,      DCS.ReportingLevelId,      CASE          WHEN DCS.ItemPriority = ''Critical'' THEN 1         WHEN DCS.ItemPriority = ''High'' THEN 2         WHEN DCS.ItemPriority = ''Medium'' THEN 3         WHEN DCS.ItemPriority = ''Low'' THEN 4         WHEN DCS.ItemPriority IS NULL OR DCS.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  DCS.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN DCS.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Decisions DCS JOIN Statuses S ON DCS.ItemStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'') AND DCS.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND DCS.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.ItemDescription,  PT.ProjectTeamId,  PT.ItemPriority,  PT.ItemDueDate, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH FilteredInterdependencies AS ( SELECT      ID.Title,      ID.ProviderProjectTeamId,      ID.ReceiverProjectTeamId,      ID.ItemDueDate,      ID.ReportingLevelId,     CASE          WHEN  ID.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN ID.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Interdependencies ID JOIN InterdependencyStatuses S ON ID.InterdependencyStatusId = S.Id  WHERE S.[Key] NOT IN (''CANCELLED'') AND ID.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}}) ) SELECT  Title,  ProviderProjectTeamId,  ReceiverProjectTeamId,  ItemDueDate, ItemCategory, StatusTitle FROM FilteredInterdependencies;  '
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      WP.Title,      WP.TaskDueDate,      WP.ReportingLevelId,      WP.Priority,      WP.WorkPlanTaskType,      CASE          WHEN WP.Priority = ''(1) High'' THEN 1         WHEN WP.Priority = ''(2) Normal'' THEN 2         WHEN WP.Priority = ''(3) Low'' THEN 3         WHEN WP.Priority IS NULL OR  WP.Priority = '''' THEN 4     END AS PriorityRank,     CASE          WHEN  WP.TaskDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN WP.TaskDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Workplan WP JOIN Statuses S ON WP.WorkPlanTaskStatusId= S.Id WHERE WP.WorkPlanTaskType IN (''Milestone'', ''Task'') AND S.[Key]  IN (''CLOSED'', ''COMPLETED'') AND WP.TaskDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND WP.HierarchyLevel <= 3 AND WP.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.TaskDueDate,  PT.ReportingLevelId,  PT.Priority,  PT.WorkPlanTaskType, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      RAI.IssueRiskCategory,      RAI.TimeBasedCalculatedStatusId,      RAI.ItemDescription,      RAI.ItemDueDate,      RAI.ItemPriority,      RAI.Title,      RAI.ReportingLevelId,      CASE          WHEN RAI.ItemPriority = ''Critical'' THEN 1         WHEN RAI.ItemPriority = ''High'' THEN 2         WHEN RAI.ItemPriority = ''Medium'' THEN 3         WHEN RAI.ItemPriority = ''Low'' THEN 4         WHEN RAI.ItemPriority IS NULL OR RAI.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  RAI.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN RAI.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM RisksAndIssues RAI JOIN Statuses S ON RAI.ItemStatusId = S.Id WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'') AND RAI.ItemDueDate BETWEEN {{periodStartDate}} AND {{periodEndDate}}      AND RAI.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.IssueRiskCategory,  PT.ItemDescription,  PT.ItemDueDate,  PT.ItemPriority,  PT.Title,  PT.ReportingLevelId, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      ACT.Title,      ACT.ItemDescription,      ACT.ProjectTeamId,      ACT.ItemPriority,      ACT.ItemDueDate,      CASE          WHEN ACT.ItemPriority = ''Critical'' THEN 1         WHEN ACT.ItemPriority = ''High'' THEN 2         WHEN ACT.ItemPriority = ''Medium'' THEN 3         WHEN ACT.ItemPriority = ''Low'' THEN 4         WHEN ACT.ItemPriority IS NULL OR ACT.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  ACT.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN ACT.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Actions ACT JOIN Statuses S ON ACT.ItemStatusId = S.Id WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'') AND ACT.ItemDueDate BETWEEN {{periodStartDate}} AND {{periodEndDate}}   AND ACT.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.ItemDescription,  PT.ProjectTeamId,  PT.ItemPriority,  PT.ItemDueDate, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;   '
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      DCS.Title,      DCS.ItemDescription,      DCS.ProjectTeamId,      DCS.ItemPriority,      DCS.ItemDueDate,      CASE          WHEN DCS.ItemPriority = ''Critical'' THEN 1         WHEN DCS.ItemPriority = ''High'' THEN 2         WHEN DCS.ItemPriority = ''Medium'' THEN 3         WHEN DCS.ItemPriority = ''Low'' THEN 4         WHEN DCS.ItemPriority IS NULL OR DCS.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  DCS.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN DCS.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Decisions DCS JOIN Statuses S ON DCS.ItemStatusId = S.Id WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'') AND DCS.ItemDueDate BETWEEN {{periodStartDate}} AND {{periodEndDate}}   AND DCS.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.ItemDescription,  PT.ProjectTeamId,  PT.ItemPriority,  PT.ItemDueDate, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;   '
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH FilteredInterdependencies AS ( SELECT      ID.Title,      ID.ProviderProjectTeamId,      ID.ReceiverProjectTeamId,      ID.ItemDueDate,      ID.ReportingLevelId,     CASE          WHEN  ID.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN ID.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Interdependencies ID JOIN InterdependencyStatuses S ON ID.InterdependencyStatusId = S.Id WHERE S.[Key] IN (''CLOSED'', ''COMPLETED'') AND ID.ItemDueDate BETWEEN {{periodStartDate}} AND {{periodEndDate}}   AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}}) ) SELECT  Title,  ProviderProjectTeamId,  ReceiverProjectTeamId,  ItemDueDate, ItemCategory, StatusTitle FROM FilteredInterdependencies;  '
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      WP.Title,      WP.TaskDueDate,      WP.ReportingLevelId,      WP.Priority,      WP.WorkPlanTaskType,     CASE          WHEN WP.Priority = ''(1) High'' THEN 1         WHEN WP.Priority = ''(2) Normal'' THEN 2         WHEN WP.Priority = ''(3) Low'' THEN 3         WHEN WP.Priority IS NULL OR WP.Priority = '''' THEN 4     END AS PriorityRank,     CASE          WHEN  WP.TaskDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN WP.TaskDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Workplan WP JOIN Statuses S ON WP.WorkPlanTaskStatusId = S.Id WHERE WP.WorkPlanTaskType IN (''Milestone'', ''Task'') AND S.[Key] NOT IN (''CLOSED'', ''CANCELLED'', ''COMPLETED'')  AND WP.HierarchyLevel <= 3 AND WP.TaskDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND WP.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.TaskDueDate,  PT.ReportingLevelId,  PT.Priority,  PT.WorkPlanTaskType, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank; '
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      RAI.IssueRiskCategory,      S.Title AS ItemStatus,     RAI.ItemDescription,      RAI.ItemDueDate,      RAI.ItemPriority,      RAI.Title,      RAI.ReportingLevelId,     CASE          WHEN RAI.ItemPriority = ''Critical'' THEN 1         WHEN RAI.ItemPriority = ''High'' THEN 2         WHEN RAI.ItemPriority = ''Medium'' THEN 3         WHEN RAI.ItemPriority = ''Low'' THEN 4         WHEN RAI.ItemPriority IS NULL OR RAI.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  RAI.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN RAI.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM RisksAndIssues RAI JOIN Statuses S ON RAI.ItemStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'') AND RAI.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND RAI.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.IssueRiskCategory,  PT.ItemDescription,  PT.ItemDueDate,  PT.ItemPriority,  PT.Title,  PT.ReportingLevelId, PT.ItemStatus, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      ACT.Title,      ACT.ItemDescription,      ACT.ProjectTeamId,      ACT.ItemPriority,      ACT.ItemDueDate,      S.Title AS ItemStatus,     CASE          WHEN ACT.ItemPriority = ''Critical'' THEN 1         WHEN ACT.ItemPriority = ''High'' THEN 2         WHEN ACT.ItemPriority = ''Medium'' THEN 3         WHEN ACT.ItemPriority = ''Low'' THEN 4         WHEN ACT.ItemPriority IS NULL OR ACT.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  ACT.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN ACT.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Actions ACT JOIN Statuses S ON ACT.ItemStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'') AND ACT.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND ACT.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.ItemDescription,  PT.ProjectTeamId,  PT.ItemPriority,  PT.ItemDueDate, PT.ItemStatus, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;  '
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH PriorityTasks AS ( SELECT      DCS.Title,      DCS.ItemDescription,      DCS.ProjectTeamId,      DCS.ItemPriority,      DCS.ItemDueDate,      S.Title AS ItemStatus,     CASE          WHEN DCS.ItemPriority = ''Critical'' THEN 1         WHEN DCS.ItemPriority = ''High'' THEN 2         WHEN DCS.ItemPriority = ''Medium'' THEN 3         WHEN DCS.ItemPriority = ''Low'' THEN 4         WHEN DCS.ItemPriority IS NULL OR DCS.ItemPriority = '''' THEN 5     END AS PriorityRank,     CASE          WHEN  DCS.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN DCS.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Decisions DCS JOIN Statuses S ON DCS.ItemStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'') AND DCS.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})   AND DCS.ProjectTeamId = {{ProjectTeam}} ), HighestPriority AS ( SELECT MIN(PriorityRank) AS MinPriorityRank FROM PriorityTasks ) SELECT  PT.Title,  PT.ItemDescription,  PT.ProjectTeamId,  PT.ItemPriority,  PT.ItemDueDate, PT.ItemStatus, PT.ItemCategory, PT.StatusTitle FROM PriorityTasks PT JOIN HighestPriority HP ON PT.PriorityRank = HP.MinPriorityRank;   '
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH FilteredInterdependencies AS ( SELECT      ID.Title,      ID.ProviderProjectTeamId,      ID.ReceiverProjectTeamId,      ID.ItemDueDate,     S.Title AS ItemStatus,     CASE          WHEN  ID.ItemDueDate <= {{periodEndDate}} THEN ''Was past due during reporting period''          WHEN ID.ItemDueDate > {{periodEndDate}} THEN ''Will be past due next reporting period''      END AS ItemCategory,     S.Title AS StatusTitle FROM Interdependencies ID JOIN InterdependencyStatuses S ON ID.InterdependencyStatusId = S.Id WHERE S.[Key] NOT IN (''CANCELLED'', ''CLOSED'', ''COMPLETED'')    AND ID.ItemDueDate BETWEEN {{periodStartDate}} AND DATEADD(day, 7, {{periodEndDate}})    AND (ID.ProviderProjectTeamId = {{ProjectTeam}} OR ID.ReceiverProjectTeamId = {{ProjectTeam}}) ) SELECT  Title,  ProviderProjectTeamId,  ReceiverProjectTeamId,  ItemDueDate, ItemStatus, ItemCategory, StatusTitle FROM FilteredInterdependencies;  '
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantContentGeneratorQueries] SET [SQLQuery] = N'WITH StatusCheck AS ( SELECT     s.[Key],     s.ID FROM     WorkPlan wp JOIN     Statuses s ON wp.WorkPlanTaskStatusId = s.ID WHERE     wp.ProjectTeamId = {{ProjectTeam}}     AND wp.TaskDueDate < {{periodEndDate}}    AND wp.TaskDueDate >= DATEADD(DAY, -7, {{periodEndDate}}) ), FinalStatus AS ( SELECT     wss.ID,   wss.[Key],     wss.Title FROM     StatusCheck sc JOIN     WeeklyStatusStatuses wss ON sc.[Key] = wss.[Key] ) SELECT CASE     WHEN EXISTS (SELECT 1 FROM FinalStatus WHERE [Key] = ''BEHIND_SCHEDULE'') THEN (SELECT TOP 1 ID FROM FinalStatus WHERE [Key] = ''BEHIND_SCHEDULE'')     WHEN EXISTS (SELECT 1 FROM FinalStatus WHERE [Key] = ''AT_RISK'') THEN (SELECT TOP 1 ID FROM FinalStatus WHERE [Key] = ''AT_RISK'')     WHEN EXISTS (SELECT TOP 1 ID FROM FinalStatus WHERE [Key] = ''ON_TRACK'') THEN (SELECT TOP 1 ID FROM FinalStatus WHERE [Key] = ''ON_TRACK'')     ELSE NULL END AS StatusId, CASE     WHEN EXISTS (SELECT 1 FROM FinalStatus WHERE [Key] = ''BEHIND_SCHEDULE'') THEN (SELECT TOP 1 Title FROM FinalStatus WHERE [Key] = ''BEHIND_SCHEDULE'')     WHEN EXISTS (SELECT 1 FROM FinalStatus WHERE [Key] = ''AT_RISK'') THEN (SELECT TOP 1 Title FROM FinalStatus WHERE [Key] = ''AT_RISK'')     WHEN EXISTS (SELECT TOP 1 Title FROM FinalStatus WHERE [Key] = ''ON_TRACK'') THEN (SELECT TOP 1 Title FROM FinalStatus WHERE [Key] = ''ON_TRACK'')     ELSE NULL END AS StatusTitle;'
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'When asked for list of tasks, name of task, workplan items, include the columns WorkPlan.Title and WorkPlan.UniqueItemIdentifier in the select clause, and always filter by the workplan task type.'
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'For TSA, date columns to be used are  TSAItemEndDate and TSAItemStartDate'
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'When I ask something about me or other person use the table UserProfiles, user name is on column Title, and Email in column Email'
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'When asked for processes by op model, please use the table ''Nodes'',use the column Title'
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'When asked for ANY NUMBER, current STATE or HOW MANY for op model, please use the table ''Nodes'',use the column Title and apply a count'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantGlossary] SET [Context] = N'When asked for HOW MANY processes and States, please use the table ''Nodes'',use the column Title apply a count and use a LEFT with the table TransactionStated'
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'DETECT_MISMATCH', [Prompt] = N'You are a Strategy and Transactions Senior Partner with 40 years of industry experience at EY.Your task is to detect if there is a mismatch between the target team and the EY IP teams.For example:- If the target team is ""IT"" and the EY IP teams are: ""Information Technology"", ""IT"", ""Technology"", there is no mismatch.- If the target team is ""Cybersecurity"" and the EY IP teams are: ""IT"", ""Information Technology"", ""Technology"", there is a mismatch.- If the target team is ""Finance"" and the EY IP teams are: ""Finance"", ""Finance and Accounting"", there is no mismatch.  - If the target team is ""Controllership"" and the EY IP teams are: ""Finance"", ""Finance and Accounting"", there is a mismatch.### The target team is:---------------------  {target_team}---------------------### The EY IP teams are:---------------------{eyip_project_teams}---------------------Based on the information provided, choose the most appropriate option:1. there is a mismatch between the target team and the EY IP teams, or2. there is no mismatch between the target team and the EY IP teams.Answer with the number of the chosen option only, without adding extra information. For example: 1.Answer:"'
WHERE [ID] = 1;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'EXAMPLE_TASK_STRUCTURE', [Prompt] = N'"[      {          ""summary_task"": ""Detailed summary task header goes here"",          ""tasks"": [              ""Task description 1"",              ""Task description 2"",              ""Task description 3"",              ""Task description 4"",              ""Task description 5"",              ""Task description 6"",              ""Task description 7"",              ""Task description 8"",              ""Task description 9"",              ""Task description 10"",              ""Task description 11"",              ""Task description 12"",              ""Task description 13"",              ""Task description 14"",              ""Task description 15"",          ],          ""milestone"": ""Milestone description header goes here""      },      {          ""summary_task"": ""Detailed of another summary task goes here"",          ""tasks"": [              ""Another task description 1"",              ""Another task description 2"",              ""Another task description 3"",              ""Another task description 4"",              ""Another task description 5"",              ""Another task description 6"",              ""Another task description 7"",              ""Another task description 8"",              ""Another task description 9"",              ""Another task description 10"",              ""Another task description 11"",              ""Another task description 12"",              ""Another task description 13"",              ""Another task description 14"",          ],          ""milestone"": ""Another milestone description""      },      {...},      {...},      {...},  ]"'
WHERE [ID] = 2;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'EY_IP_DATA_CONSOLIDATION', [Prompt] = N'"You are a highly intelligent writer tasked with adapting generic task descriptions into a specific {target_team}''s work plan.The following table contains a list of generic tasks, along with their descriptions and classifications as either tasks, summary tasks, or milestones:----------------------------------------------{ey_ip_data}----------------------------------------------Your task is to transform the provided information into a highly detailed, informative, and specific work plan tailored to the team''s responsibilities.The specific project details are as follows:----------------------------------------------{project_outline}----------------------------------------------Ensure that:  - Generate concise and descriptive summary task titles that are informative and formatted like chapter names, avoiding the use of colons or punctuation that implies separation.  - Tasks must be deatiled and specific, providing a clear understanding of the work involved.  - Tasks that do not belong to the team''s responsibilities in the current project must be excluded.Format the work plan in JSON, following this example structure:----------------------------------------------{example_structure}----------------------------------------------Answer:"'
WHERE [ID] = 3;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'FILTER_EYIP_TEAM_DATA', [Prompt] = N'"You are a Senior Partner in Strategy and Transactions with 40 years of industry experience at EY.You will be provided with general information from EY IP, and your task is to retain any relevant team information while discarding the less relevant ones.### The complete EY IP data is:---------------------{eyip_data}---------------------### The target team is:---------------------{target_team}---------------------Instructions:- Retain any relevant team information from the EY IP data, and remove information you consider irrelevant for the target team.- Provide the cleaned EY IP data, including tasks, summary tasks, and milestones.- Do not include any additional or extra information in your response.Format the team data in JSON, following this example structure:----------------------------------------------{example_structure}----------------------------------------------Answer:"'
WHERE [ID] = 4;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'GENERIC_PROJECT_OUTLINE', [Prompt] = N'"goal_summary: The goal of this project is to establish a comprehensive framework that ensures the successful execution and completion of the project. This includes developing a detailed project plan, allocating resources efficiently, ensuring compliance with relevant standards and regulations, and implementing effective project governance and support structures.objective_summary: The objectives of the project are to facilitate the smooth execution of project activities by planning and coordinating tasks, developing efficient processes, ensuring clear roles and responsibilities for team members, providing necessary training and support, and proposing a robust operational model to achieve project goals.project_description_summary: The project involves designing and implementing a structured approach to achieve the project goals. This includes defining project scope, setting up processes and procedures, ensuring compliance with relevant standards, developing strategies to optimize resource utilization, aligning project activities with organizational objectives, and addressing any potential challenges that may arise.success_factors_summary: The success factors include effective resource management, clear communication and coordination among team members, timely completion of project tasks, adherence to project timelines and budgets, continuous monitoring and evaluation of project progress, and ensuring minimal disruption to ongoing operations during the project execution.milestones_summary: The milestones include developing a detailed project plan by Month 1, establishing a project team by Month 2, initiating key project activities by Month 3, completing the first phase of the project by Month 6, conducting a mid-project review by Month 9, finalizing project deliverables by Month 11, and completing the project by Month 12."'
WHERE [ID] = 5;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'INTERDEPENDENCIES_QUERY', [Prompt] = N'select DISTINCT PT.Title as ProjectTeam from ProjectTeams PT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] = ''PROJECT_MANAGEMENT'' AND PT.ManageWorkPlan = 1'
WHERE [ID] = 6;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'PROCESS_INPUT', [Prompt] = N'"From the following list of Project Teams names:---------------------{inputs}---------------------Select the name or names that are most related to {target}.Respond with a list of the chosen Project Team names.You should select at least one Project Team name.Format the response in JSON without adding extra information, for example: [""HR"", ""Human Resources"", ""HR, Human Resources""].Answer:"'
WHERE [ID] = 7;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'PROJECT_OUTLINE_ENRICHMENT_NO_DOCS', [Prompt] = N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.Your expertise lies in creating detailed outlines for a project work plan.You will receive a list of elements which composed a generic project outline, each related to different topics: goals, objectives, project descriptions, success factors, and milestones.Additionally, you will be provided with some project context, which could be a guide about extra information related to the project.Your task is to enrich the generic workplan outlines by using the project context.Ensure the outlines are well-structured, logically organized, and cover all the key aspects necessary for effective project planning.You have been provided with the following elements:----------------------------------------------{{{project_outline_elements}project_context: {project_context}}}----------------------------------------------Ensure that:    -The details are clear, easy to understand, and accurately reflect the provided elements.    -Each piece of information captures the essence of the respective topic.    -The resulting information is logically structured and comprehensive.    -The JSON string must be free of any enclosing quotation marks and ''json'' keyword.    -The project context will enrich the outline only if it adds significant value to the work plan.Provide your summaries in the following format:{{""goal_summary"": ""{{Adapt the goal based on the provided project context}}"",""objective_summary"": ""{{Adapt the objective based on the provided project context}}"",""project_description_summary"": ""{{Adapt the project description based on the provided project context}}"",""success_factors_summary"": ""{{Adapt the success factors based on the provided project context}}"",""milestones_summary"": ""{{Adapt the milestones based on the provided project context}}""}}Answer:"'
WHERE [ID] = 8;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'PROJECT_OUTLINE_ENRICHMENT', [Prompt] = N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.Your expertise lies in creating detailed outlines for a project work plan.You will receive a list of elements, each containing chunks of information related to different topics: goals, objectives, project descriptions, success factors, and milestones.Additionally, you will be provided with some project context, which could be a guide about extra information related to the project.Your task is to synthesize this information into comprehensive outlines that will serve as the foundation for building a complete work plan.Ensure the outlines are well-structured, logically organized, and cover all the key aspects necessary for effective project planning.You have been provided with the following elements:----------------------------------------------{{goal_elements: {goal_elements}objective_elements: {objective_elements}project_description_elements: {project_description_elements}success_factors_elements: {success_factors_elements}milestones_elements: {milestone_elements}project_context: {project_context}}}----------------------------------------------Ensure that:    -The details are clear, easy to understand, and accurately reflect the provided elements.    -Each piece of information captures the essence of the respective topic.    -The resulting information is logically structured and comprehensive.    -The JSON string must be free of any enclosing quotation marks and ''json'' keyword.    -The project context will enrich the outline only if it adds significant value to the work plan.Provide your summaries in the following format:{{""goal_summary"": ""{{Summarize the goal based on the provided elements}}"",""objective_summary"": ""{{Summarize the objective based on the provided elements}}"",""project_description_summary"": ""{{Summarize the project description based on the provided elements}}"",""success_factors_summary"": ""{{Summarize the success factors based on the provided elements}}"",""milestones_summary"": ""{{Summarize the milestones based on the provided elements}}""}}Example:input:{{goal_elements: [""Increase market share by 10%"", ""Expand into new regions"", ""Enhance brand recognition""]objective_elements: [""Launch new product line"", ""Improve customer satisfaction"", ""Reduce operational costs""]project_description_elements: [""Develop a marketing strategy"", ""Conduct market research"", ""Implement new sales tactics""]success_factors_elements: [""Customer satisfaction"", ""Market research"", ""Sales tactics""]milestones_elements: [""Product launch"", ""Customer feedback analysis"", ""Cost reduction analysis""]}}output:{{""goal_summary"": ""The goal is to increase market share by 10% through expansion into new regions and enhancing brand recognition."",""objective_summary"": ""The objective is to launch a new product line, improve customer satisfaction, and reduce operational costs."",""project_description_summary"": ""The project involves developing a marketing strategy, conducting market research, and implementing new sales tactics."",""success_factors_summary"": ""The success factors include customer satisfaction, market research, and sales tactics."",""milestones_summary"": ""The milestones include product launch, customer feedback analysis, and cost reduction analysis.""}}Answer:"'
WHERE [ID] = 9;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'PROJECT_OUTLINE_KEYS', [Prompt] = N'"- Goals aims purposes of the project- Objectives targets of the project- Description overview summary outline of the project- Key critical success factors- Milestones deliverables of the project"'
WHERE [ID] = 10;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'TASK_GENERATION_WITHOUT_PROJECT_OUTLINES', [Prompt] = N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.Your expertise lies in working with functional leads to develop detailed, function-specific work plans for {transaction_type} projects.You are currently collaborating with the {target_team} lead to create a high-quality work plan that leverages:      1.	Firm-specific IPs (industry-proven templates).  2.	Intelligent insights derived from context and business logic.The work plan must address gaps, interdependencies, and risks while being logically structured and actionable.The following work plan outline has been provided to you:### Work Plan Outline:----------------  sector: {sector}subSector: {subSector}  timeline: {timeline}----------------### Firm IP Templates (relevant to {target_team} activities):----------------related_activities_examples: {eyip_adapted_data}----------------  ### Requirements:Generate a function-specific work plan for the {target_team} that adheres to the following principles:  1.	Relevance: All tasks must align with the {target_team}''s role in the project. Avoid mixing tasks from other functions.  2.	Clarity: Tasks must be precise, actionable, and follow a sequential and logical order.  3.	Completeness:      -Determine a sufficient number of tasks for each summary task to ensure a highly detailed and thorough plan.      -Address identified risks, assumptions, interdependencies, and decisions.      -Highlight interdependencies with other functions clearly:        - For each task that depends on another function, explicitly state the dependency within the task description.        - Create a task to address the interdependency, ensuring it is actionable and relevant to the current team''s responsibilities.        - Include the interdependency in parentheses within the task description, e.g., ''Coordination for employee data and HRIS migration (Interdependency on HR).        - Ensure interdependent tasks are logically placed in the sequence and linked to relevant milestones.  4.	Structure: Group tasks under summary tasks, ensuring each summary task has a milestone.### Deliverable Format:-Provide the work plan in JSON format, structured as follows:----------------{example_structure}-----------------Do not add any comments or additional information to your response, just the JSON structure.### Instructions for Execution:  1.	Analyze Inputs: Examine all information to identify deliverables, milestones, and risks.      2.	Structure the Plan: Ensure tasks are grouped under relevant summary tasks with corresponding milestones.  3.	Account for Interdependencies: Clearly highlight any cross-functional dependencies in the task descriptions.  4.	Quality Assurance: Maintain a concise format while ensuring depth and completeness.      5.  Answer with the JSON structure, withoud any comments or additional information.Answer:"'
WHERE [ID] = 11;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'TASK_GENERATION', [Prompt] = N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.Your expertise lies in working with functional leads to develop detailed, function-specific work plans for {transaction_type} projects.You are currently collaborating with the {target_team} lead to create a high-quality work plan that leverages:  1.	Client-provided data (charters, goals, milestones, and timelines).  2.	Firm-specific IPs (industry-proven templates).  3.	Intelligent insights derived from context and business logic.The work plan must address gaps, interdependencies, and risks while being logically structured and actionable.The following work plan outline has been provided to you:### Work Plan Outline:----------------goals: {goals}objectives: {objectives}description: {description}sector: {sector}subSector: {subSector}success_factors: {success_factors}milestones: {milestones}timeline: {timeline}----------------### Firm IP Templates (relevant to {target_team} activities):----------------related_activities_examples: {eyip_adapted_data}----------------### Team-Specific Context (from search results and uploaded data):----------------relevant_context: {search_results}----------------### Requirements:Generate a function-specific work plan for the {target_team} that adheres to the following principles:  1.	Relevance: All tasks must align with the {target_team}''s role in the project. Avoid mixing tasks from other functions.  2.	Clarity: Tasks must be precise, actionable, and follow a sequential and logical order.  3.	Completeness:      -Determine a sufficient number of tasks for each summary task to ensure a highly detailed and thorough plan.      -Address identified risks, assumptions, interdependencies, and decisions.      -Highlight interdependencies with other functions clearly:        - For each task that depends on another function, explicitly state the dependency within the task description.        - Create a task to address the interdependency, ensuring it is actionable and relevant to the current team''s responsibilities.        - Include the interdependency in parentheses within the task description, e.g., ''Coordination for employee data and HRIS migration (Interdependency on HR).        - Ensure interdependent tasks are logically placed in the sequence and linked to relevant milestones.        - Ensure team interdendencies are enlisted in the following ones: {interdependencies_list}.  4.	Structure: Group tasks under summary tasks, ensuring each summary task has a milestone.### Deliverable Format:Provide the work plan in JSON format, structured as follows:----------------{example_structure}----------------### Instructions for Execution:  1.	Analyze Inputs: Examine the charter, metadata, and firm IPs to identify deliverables, milestones, and risks.  2.	Prioritize Data: Leverage client-provided data first; use firm IPs to fill gaps or provide additional insights.  3.	Structure the Plan: Ensure tasks are grouped under relevant summary tasks with corresponding milestones.  4.	Account for Interdependencies: Clearly highlight any cross-functional dependencies in the task descriptions.      5.	Quality Assurance: Maintain a concise format while ensuring depth and completeness.  6.  Avoid Duplicates: Do not include any duplicate summary tasks, milestones, or tasks.Answer:"'
WHERE [ID] = 12;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'ACC_AND_NE_CHAR_LIMIT_QUERY', [Prompt] = N'SELECT CHARACTER_MAXIMUM_LENGTH AS MaxCharLimit FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''AccomplishmentsAndNextSteps'' AND COLUMN_NAME = ''Title'''
WHERE [ID] = 13;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'ACCOMPLISHMENTS', [Prompt] = N'"You are a seasoned **Senior Partner in Strategy and Transactions** with 40 years of industry experience. Your expertise involves collaborating with functional leads to generate weekly project status reports based on the team''s Workplan, Risks, Actions, Issues, Decisions, and Interdependencies.You have been tasked with summarizing the detailed project data for the $target_team$ team to create an accomplishments section that encapsulates the the key points worked during the last reporting period.Your main task is to identify from the input data which of the completed, closed or done risks, issues, milestones, tasks, interdependencies, actions, decisions are most relevant for the context of the project and summarize them in a list.The accomplishments section is a list with multiple items, with only ONE key point from the SQL results in the input data summarized per item.The items are short sentences that MUST have a maximum total of $num_words$ words. These items should be written in passive voice, focusing on the action and not on who is in charge of the action.This is the project context you should consider to generate the report but never mention explicitly for the accomplishments section:$project_context$Instructions:- Do not mention anything related to SQL, rows, columns, data, application, dates, or the process to create this report.- Mention items (tasks, risks, issues, actions, decisions, etc.) in a natural, narrative, organic way and flowing with the text. Do not mention them explicitly.- Output format should be like this: [""item accomplished 1"", ""item accomplished 2""].- Ensure a maximum of five to ten items based on the content you have but minimum create three items (when there is enough information).- Ensure a maximum total of $num_words$ words per item.The input data are the results of querying multiple databases, it will also contain the rules followed to query and filter the data, and the main table. Finally, we have the results of that SQL query. The key points should be extracted from here, the name of the key points is on the Title column.input:  Table name: workplan  Rules: The Workplan section showcases milestones or tasks completed in the past week. The system filters these accomplishments by looking for a closed status, the project team selected in the UI, high, medium, low, and null priorities, completion within the last seven days, a hierarchy level of three or less, and types including tasks and milestones.  SQL Result: [{''Title'': ''Contracts dispositioned'', ''TaskDueDate'': ''2024-06-20T12:00:00+00:00'', ''ProgressId'': 6, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''}]  Table name: riskandissues  Rules: This subsection identifies risks and issues resolved in the past week. The search criteria include a closed status, the project team selected in the UI, high, medium, and low priorities, and resolution within the last seven days.  SQL Result: [{''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 26, ''ItemDescription'': ''Change in control points in the sales process such as price quotes, price changes in system, discounts, etc'', ''ItemDueDate'': ''2024-06-23T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''Change in control'', ''ReportingLevelId'': 4}, {''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 26, ''ItemDescription'': None, ''ItemDueDate'': ''2024-06-22T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''test'', ''ReportingLevelId'': 4}]}  Table name: actions  Rules: The system searches for actions completed in the past week using parameters such as a closed status, the project team selected in the UI, high, medium, and low priorities, and completion within the last seven days.  SQL Result: [{''Title'': ''Deep database audit'', ''ItemDescription'': ''Checking audits and backups for integrity issues'', ''ReportingLevelId'': 5, ''ProjectTeamId'': 59, ''ItemPriority'': ''High'', ''ItemDueDate'': ''2024-06-22T12:00:00+00:00'', ''ProgressId'': 26}]}  Table name: decisions  Rules: Decisions made and closed in the past week are identified using criteria such as a closed status, the project team selected in the UI, high, medium, and low priorities, and closure within the last seven days.  SQL Result: [{''Title'': ''Determination of legal view on environmental risk required'', ''ItemPriority'': ''Critical'', ''ItemDueDate'': ''2024-06-21T12:00:00+00:00'', ''ProgressId'': 26, ''ReportingLevelId'': 5}]}  Table name: interdependencies  Rules: The system identifies high-priority interdependencies that need prompt attention. The search criteria include a closed status, the receiver and provider project teams selected in the UI, high, medium, and low priorities, and closure within the last seven days.  SQL Result: [{''Title'': ''Add new legal entities to payroll system'', ''ProviderProjectTeamId'': 64, ''ReceiverProjectTeamId'': 60, ''ItemDueDate'': ''2024-05-09T12:00:00+00:00''}]}output: [""The disposition of contracts was completed."", ""Changes in control mechanisms affecting the sales process were navigated."", ""A risk labeled ''test'' was addressed."", ""A thorough audit of databases was carried out."", ""Backups were scrutinized to ensure their integrity."", ""Legal entities were added to the payroll system."", ""A decision on the legal stance concerning environmental risks was concluded.""]input:  Table name: workplan  Rules: The Workplan section showcases milestones or tasks completed in the past week. The system filters these accomplishments by looking for a closed status, the project team selected in the UI, high, medium, low, and null priorities, completion within the last seven days, a hierarchy level of three or less, and types including tasks and milestones.  SQL Result: [{''Title'': ''Contracts dispositioned'', ''TaskDueDate'': ''2024-06-20T12:00:00+00:00'', ''ProgressId'': 6, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''},{""Title"": ""Finish Detailing TSA"",""TaskDueDate"": ""2024-11-30T04:04:57.227+00:00"",""ReportingLevelId"": 4,""Priority"": ""(1) High"",""WorkPlanTaskType"": ""Task"",""ItemCategory"": ""Was past due current week"",""StatusTitle"": ""Behind Schedule""}]output: [""The disposition of contracts was completed."", ""The detailing of TSA was finished""]input:  $queries_accomplishments$output:"'
WHERE [ID] = 14;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'ASSISTANT_CONTENT_GENERATOR_QUERIES', [Prompt] = N'"SELECT title, description as rules, key, sqlQueryFROM [AssistantContentGeneratorQueries]WHEREgeneratorType=''ProjectStatus''ANDisActive is true"'
WHERE [ID] = 15;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'EXECUTIVE_SUMMARY_CHAR_LIMIT_QUERY', [Prompt] = N'"SELECT CHARACTER_MAXIMUM_LENGTH AS MaxCharLimitFROM INFORMATION_SCHEMA.COLUMNSWHERETABLE_NAME = ''ProjectStatusEntries''AND COLUMN_NAME = ''ExecutiveSummary''"'
WHERE [ID] = 16;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'EXECUTIVE_SUMMARY_SQL_EXAMPLES', [Prompt] = N'"SELECT TOP 3 PSE.ExecutiveSummary AS ExecutiveSummaryFROM ProjectStatusEntries PSELEFT JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.IDLEFT JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.IDWHEREPSE.ExecutiveSummary IS NOT NULL"'
WHERE [ID] = 17;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'EXECUTIVE_SUMMARY', [Prompt] = N'"You are a seasoned **Senior Partner in Strategy** and Transactions with 40 years of industry experience. Your expertise involves collaborating with functional leads to generate weekly project status reports based on the team''s Workplan, Risks, Actions, Issues, Decisions, and Interdependencies.You have been tasked with summarizing the detailed project data for the $target_team$ team to create an Executive Summary that encapsulates the project''s status, highlighting key trends, potential issues, and positive developments.This is the project context you should consider to generate the report but never mention explicitly in the Executive Summary:$project_context$Our main goal is to generate an Executive Summary in a set of sentences split by line breaks using Markdown syntax (i.e., use \n to indicate line breaks) that provides a comprehensive overview of the project''s status, suitable for executive consumption. The summary should highlight key priorities, critical issues, potential risks, and positive developments.Requirements:  - Ensure the output includes all necessary information, is structured in a clear and organized manner, and is easy to understand.  - Ensure the Executive Summary contains no more than $num_words$ words.  - Create sentences using Markdown syntax with key points split by line breaks (\n) for the whole summary. Include a maximum of five to ten sentences based on the content you have, but create a minimum of three sentences.  - The executive summary should not exclude pertinent and important information, but at the same time, should not be too verbose.  - Do not mention anything related to ID, rows, SQL, queries, input data structure/format, general project status, or anything related to the process done to create this Executive Summary, any dates, and quotation marks.  - Mention items (tasks, risks, issues, actions, decisions, etc.) in a natural, narrative, and organic way, flowing with the text.The input data are the results of querying multiple databases, it will also contain the rules followed to query and filter the data, and the main table. Finally, we have the results of that SQL query.input:  Table name: workplan  Rules: The workplan section focuses on milestones and tasks that need immediate attention. The system filters them based on criteria such as a timeframe of seven days before or after today''s date, a status that is not cancelled, the project team selected in the UI, all priority levels with emphasis on critical, high, medium, low, and null, a hierarchy level of three or less, and types including milestones and tasks.  SQL result: [{''Title'': ''Contracts dispositioned'', ''TaskDueDate'': ''2024-06-20T12:00:00+00:00'', ''ProgressId'': 6, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''}]}  Table name: riskandissues  Rules: The system identifies high-priority risks and issues that need prompt attention. It filters based on criteria such as a timeframe of seven days before or after today, a status that is not cancelled, the project team selected in the UI, and all priority levels with emphasis on critical, high, medium, low, and null  SQL result: [{''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 26, ''ItemDescription'': ''Change in control points in the sales process such as price quotes, price changes in system, discounts, etc'', ''ItemDueDate'': ''2024-06-23T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''Change in control'', ''ReportingLevelId'': 4}, {''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 26, ''ItemDescription'': None, ''ItemDueDate'': ''2024-06-22T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''test'', ''ReportingLevelId'': 4}]}  Table name: actions  Rules: Actions are tasks or steps required to advance the project. The system searches for actions based on parameters such as a timeframe of seven days before or after today, a status that is not cancelled, the project team selected in the UI, and all priority levels with a focus on critical, high, medium, low, and null.  SQL result:[{''Title'': ''Deep database audit'', ''ItemDescription'': ''Checking audits and backups for integrity issues'', ''ReportingLevelId'': 5, ''ProjectTeamId'': 59, ''ItemPriority'': ''High'', ''ItemDueDate'': ''2024-06-22T12:00:00+00:00'', ''ProgressId'': 26}]}  Table name: decisions  Rules: Decisions are crucial choices that need to be made about the project''s direction. The system searches for pending decisions based on criteria such as a timeframe of seven days before or after today, a status that is not cancelled, the project team selected in the UI, and all priority levels with a focus on critical, high, medium, low, and null.  SQL result: [{''Title'': ''Determination of legal view on environmental risk required'', ''ItemPriority'': ''Critical'', ''ItemDueDate'': ''2024-06-21T12:00:00+00:00'', ''ProgressId'': 26, ''ReportingLevelId'': 5}]}  Table name: interdependencies  Rules: The system identifies high-priority interdependencies that need prompt attention. It searches based on criteria such as a timeframe of seven days before or after today, a status that is not cancelled, and the receiver or provider project team selected in the UI.  SQL Result: [{''Title'': ''Add new legal entities to payroll system'', ''ProviderProjectTeamId'': 64, ''ReceiverProjectTeamId'': 60, ''ItemDueDate'': ''2024-05-09T12:00:00+00:00''}]}output: The project is currently focused on several critical milestones and tasks that require immediate attention. \n Key milestones include the disposition of contracts, which is of high priority and needs to be completed soon. \n There are significant risks, such as changes in control points within the sales process, that pose critical challenges and must be addressed promptly.\n Actions like conducting a deep database audit to check for integrity issues are essential to ensure the project''s progress.\n Additionally, a critical decision regarding the legal view on environmental risk is pending and needs to be resolved to guide the project''s direction effectively.input:$queries_summary$output:"'
WHERE [ID] = 18;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'MIMIC_TONE', [Prompt] = N'"You are an expert in rewriting executive summaries to capture the tone and style of writing in your current report. Your task has two main objectives:* Mimic the tone and style of the provided executive summary examples.* Ensure the rewritten executive summary contains no more than $num_words$ words.You will receive a set of different executive summary examples and the current executive summary that you need to rewrite. Capture and mimic as much as possible of the writing style of the executive summary examples and rewrite (if necessary) the current executive summary using that style.DO NOT change the original content and idea of the current executive summary. If you consider it is already written in that style and the length is between the constraint, leave it as it is.Executive Summary Examples:[  {""ExecutiveSummary"": ""We were surprised to find that GAAP controls were not in place for US operations. This will impact our ability to transition, as the new legal entity structure requires financial reporting with US GAAP standards. We are evaluating the impact and will report back next week.""},  {""ExecutiveSummary"": ""This week the Finance team has completed the GAAP reviews and have mitigated a few risks related to the accounting processes at the acquisition. We will focus on getting the Hyperion reporting launched so we are ready for day one!""},  $executive_summary_examples$]Current Executive Summary:$executive_summary$Rewritten Executive Summary:"'
WHERE [ID] = 19;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'NEXT_STEPS', [Prompt] = N'"You are a seasoned **Senior Partner in Strategy and Transactions** with 40 years of industry experience. Your expertise involves collaborating with functional leads to generate weekly project status reports based on the team''s Workplan, Risks, Actions, Issues, Decisions, and Interdependencies.You have been tasked with summarizing the detailed project data for the $target_team$ team to create the next steps section that encapsulates the key points that should be addressed in the near future.Your main task is to identify from the input data which of the not completed risks, issues, milestones, tasks, interdependencies, actions, decisions are most relevant for the context of the project and summarize them in a list.The next steps section is a list with multiple items, with only ONE key point from the SQL results in the input data summarized per item.The items are short sentences that MUST have a maximum total of $num_words$ words. These items should be written in passive voice, focusing on the action and not on who is in charge of the action.This is the project context you should consider to generate the report but never mention explicitly for the next steps section:$project_description$Instructions:- Do not mention anything related to SQL, rows, columns, data, application, dates, or the process to create this report.- Mention items (tasks, risks, issues, actions, decisions, etc.) in a natural, narrative, organic way and flowing with the text. Do not mention them explicitly.- Output format should be like this: [''item to address 1'', ''item to address 2''].- Ensure a maximum of five to ten items based on the content you have but minimum create three items (when there is enough information).- Ensure a maximum total of $num_words$ words per item.The input data are the results of querying multiple databases, it will also contain the rules followed to query and filter the data, and the main table. Finally, we have the results of that SQL query. The key points should be extracted from here, the name of the key points is on the Title column.  input:  Table name: workplan  Rules: The Workplan section outlines the upcoming milestones or tasks for the next week. The system searches for these items using filters such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, due dates within the last seven days and the next seven days, and types including tasks and milestones.  SQL Result: [{''Title'': ''Finalize credit and collections TSA scope and pricing'', ''TaskDueDate'': ''2024-06-27T12:00:00+00:00'', ''TimeBasedCalculatedStatusId'': 21, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''}, {''Title'': ''New task'', ''TaskDueDate'': ''2024-06-30T12:00:00+00:00'', ''TimeBasedCalculatedStatusId'': 21, ''ReportingLevelId'': 5, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Task''}]}  Table name: riskandissues  Rules: Upcoming risks and issues expected to be addressed in the next week are identified using criteria such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, and due dates within the last seven days and the next seven days.  SQL Result: [{''IssueRiskCategory'': ''Risk'', ''TimeBasedCalculatedStatusId'': 21, ''ItemDescription'': ''Treasury infrastructure not in place on Day One to manage cash payments / receipts'', ''ItemDueDate'': ''2024-06-30T12:00:00+00:00'', ''ItemPriority'': ''Critical'', ''Title'': ''Treasury infrastructure'', ''ReportingLevelId'': 5}]}  Table name: actions  Rules: The system searches for actions on track to be completed in the next week using parameters such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, and due dates within the last seven days and the next seven days.  SQL Result: [{''Title'': ''Cash to Close process review'', ''ItemDescription'': ''Process is lengthy - need to shorten'', ''ProjectTeamId'': 59, ''ItemPriority'': ''High'', ''ItemDueDate'': ''2024-06-28T12:00:00+00:00'', ''ItemStatusId'': 21}]}  Table name: decisions  Rules: Decisions expected to be made in the upcoming week are identified using criteria such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, and due dates within the last seven days and the next seven days.  SQL Result: [{''Title'': ''Decision on legal entities required to support benefits planning'', ''ItemDescription'': None, ''ProjectTeamId'': 59, ''ItemPriority'': ''Critical'', ''ItemDueDate'': ''2024-06-28T12:00:00+00:00'', ''ItemStatusId'': 21}]}  Table name: interdependencies  Rules: The system identifies high-priority interdependencies that need prompt attention using criteria such as a status that is not completed, closed, or cancelled, critical, high, medium, and low priorities, the receiver and provider project teams selected in the UI, and due dates within the last seven days and the next seven days.  SQL Result: [{''Title'': ''Add new legal entities to payroll system'', ''ProviderProjectTeamId'': 64, ''ReceiverProjectTeamId'': 60, ''ItemDueDate'': ''2024-05-09T12:00:00+00:00''}]}output: [""The work plan includes finalizing the scope for the credit and collections transition service agreement."",""The team needs to wrap up a newly assigned task."",""There is a critical risk with the ''Treasury infrastructure."",""Systems must be in place on Day One for managing cash transactions."",""The ''Cash to Close process'' needs review."",""The process is too protracted and needs efficiency."",""Adding new legal entities to the payroll system is pending."",""A decision is needed for legal entities supporting benefits planning.""]input:  Table name: workplan  Rules: The Workplan section outlines the upcoming milestones or tasks for the next week. The system searches for these items using filters such as a status that is not completed, closed, or cancelled, the project team selected in the UI, high, medium, and low priorities, due dates within the last seven days and the next seven days, and types including tasks and milestones.  SQL Result: [{''Title'': ''Finalize credit and collections TSA scope and pricing'', ''TaskDueDate'': ''2024-06-27T12:00:00+00:00'', ''TimeBasedCalculatedStatusId'': 21, ''ReportingLevelId'': 4, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Milestone''}, {''Title'': ''Document Day 1 readiness requirements'', ''TaskDueDate'': ''2024-06-30T12:00:00+00:00'', ''TimeBasedCalculatedStatusId'': 21, ''ReportingLevelId'': 5, ''Priority'': ''(1) High'', ''WorkPlanTaskType'': ''Task''}]}  Table name: interdependencies  Rules: The system identifies high-priority interdependencies that need prompt attention using criteria such as a status that is not completed, closed, or cancelled, critical, high, medium, and low priorities, the receiver and provider project teams selected in the UI, and due dates within the last seven days and the next seven days.  SQL Result: [{''Title'': ''Add new legal entities to payroll system'', ''ProviderProjectTeamId'': 64, ''ReceiverProjectTeamId'': 60, ''ItemDueDate'': ''2024-05-09T12:00:00+00:00''}]}output: [""Finalize the scope and pricing for the credit and collections transition service agreement"", ""Document the Day 1 readiness requirements"", ""Add new legal entities to the payroll system""]input:  $queries_next_steps$output:"'
WHERE [ID] = 20;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantPrompts] SET [IsActive] = CAST(1 AS bit), [Key] = N'STATUS_ID_QUERY', [Prompt] = N'SELECT Id FROM WeeklyStatusStatuses WHERE Title = ''{{StatusTitle}}'''
WHERE [ID] = 21;
SELECT @@ROWCOUNT;

GO

UPDATE [AssistantSuggestions] SET [AnswerSQL] = N'	  SELECT    t.Title AS [List all TSAs which are not getting settled in USD]    FROM     TSAItems        AS t     LEFT OUTER JOIN         TSAStatuses s             ON t.tsaitemtsastatusid = s.id     	LEFT OUTER JOIN 	    TSACurrencies TSACurr  		    ON t.TSAItemLocalCurrencyId=TSACurr.ID 	LEFT OUTER JOIN TSACurrencies Curr 	        ON TSACurr.CurrencyID=Curr.ID WHERE         Curr.Title<>''USD ($)''  	  AND s.title <> ''Canceled'''
WHERE [ID] = 303;
SELECT @@ROWCOUNT;

GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'IsIncluded', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] ON;
INSERT INTO [AssistantSuggestions] ([ID], [AnswerSQL], [AppAffinity], [CreatedAt], [CreatedBy], [IsIncluded], [Source], [SuggestionText], [UpdatedAt], [UpdatedBy], [VisibleToAssistant])
VALUES (372, CONCAT(CAST(N'SELECT ' AS nvarchar(max)), nchar(13), nchar(10), N'    PT.Title AS ProjectTeam,', nchar(13), nchar(10), N'    COUNT(N.ID) AS CurrentStateProcessesCount', nchar(13), nchar(10), N'FROM ', nchar(13), nchar(10), N'    Nodes N', nchar(13), nchar(10), N'    LEFT JOIN ProjectTeams PT ON N.GeneratedWorkplanProjectTeamId = PT.ID', nchar(13), nchar(10), N'    LEFT JOIN TransactionStates TS ON N.TransactionStateId = TS.ID', nchar(13), nchar(10), N'WHERE ', nchar(13), nchar(10), N'    TS.[Key] = ''CURRENT_STATE''', nchar(13), nchar(10), N'	AND N.NodeTypeId = 3', nchar(13), nchar(10), N'GROUP BY ', nchar(13), nchar(10), N'    PT.Title', nchar(13), nchar(10), N'ORDER BY ', nchar(13), nchar(10), N'    CurrentStateProcessesCount DESC'), N'CE4-PMO', NULL, N'System', CAST(1 AS bit), N'project-data', N'Which team has the most current state processes?', NULL, N'System', CAST(1 AS bit)),
(373, CONCAT(CAST(N'SELECT ' AS nvarchar(max)), nchar(13), nchar(10), N'    SUM(VCA.Y1Actual) AS Y1TotalActual,', nchar(13), nchar(10), N'    SUM(VCA.Y2Actual) AS Y2TotalActual,', nchar(13), nchar(10), N'    SUM(VCA.Y3Actual) AS Y3TotalActual,', nchar(13), nchar(10), N'    SUM(VCA.Y4Actual) AS Y4TotalActual,', nchar(13), nchar(10), N'    SUM(VCA.Y5Actual) AS Y5TotalActual', nchar(13), nchar(10), N'FROM ', nchar(13), nchar(10), N'    ValueCaptureActuals VCA ', nchar(13), nchar(10), N'JOIN ', nchar(13), nchar(10), N'    ValueCaptureInitiatives VCI ON VCA.ValueCaptureInitiativeId = VCI.ID'), N'CE4-PMO', NULL, N'System', CAST(1 AS bit), N'project-data', N'How much value have we already achieved from all of our initiatives?', NULL, N'System', CAST(1 AS bit));
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'AnswerSQL', N'AppAffinity', N'CreatedAt', N'CreatedBy', N'IsIncluded', N'Source', N'SuggestionText', N'UpdatedAt', N'UpdatedBy', N'VisibleToAssistant') AND [object_id] = OBJECT_ID(N'[AssistantSuggestions]'))
    SET IDENTITY_INSERT [AssistantSuggestions] OFF;
GO

CREATE UNIQUE INDEX [IX_AssistantPrompts_Key] ON [AssistantPrompts] ([Key]);
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250321062408_UpdateSuggestionContentGenerator', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

UPDATE [AssistantSuggestions] SET [SuggestionText] = N'List all TSAs which are not getting settled in USD.'
WHERE [ID] = 303;
SELECT @@ROWCOUNT;

GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250402105955_UpdateOneTSAQuestion', N'8.0.8');
GO

COMMIT;
GO

BEGIN TRANSACTION;
GO

IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'Agent', N'CreatedAt', N'CreatedBy', N'Description', N'IsActive', N'Key', N'OriginalPrompt', N'Prompt', N'Title', N'Type', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[AssistantPrompts]'))
    SET IDENTITY_INSERT [AssistantPrompts] ON;
INSERT INTO [AssistantPrompts] ([ID], [Agent], [CreatedAt], [CreatedBy], [Description], [IsActive], [Key], [OriginalPrompt], [Prompt], [Title], [Type], [UpdatedAt], [UpdatedBy])
VALUES (22, N'TSA_GENERATOR', NULL, N'System', NULL, CAST(1 AS bit), N'CITING_SOURCE_PER_ITEM', N'"You are an advanced and professional Transaction Service Agreement (TSA) reviewer. Your task is to review a generated TSA (Each TSA contains a title and a serviceInScopeDescription) and the Input Data used to generate it, defining which items of the input data could have been used to generate each TSA."', N'"You are an advanced and professional Transaction Service Agreement (TSA) reviewer. Your task is to review a generated TSA (Each TSA contains a title and a serviceInScopeDescription) and the Input Data used to generate it, defining which items of the input data could have been used to generate each TSA."', N'Citing Source Per Item', N'SYSTEM', NULL, N'System'),
(23, N'TSA_GENERATOR', NULL, N'System', NULL, CAST(1 AS bit), N'EXAMPLE_TSA_STRUCTURE', CONCAT(CAST(N'"[' AS nvarchar(max)), nchar(13), nchar(10), N'    {', nchar(13), nchar(10), N'      ""title"": ""TSA service title"",', nchar(13), nchar(10), N'      ""serviceInScopeDescription"": ""', nchar(13), nchar(10), N'      - detailed description of the service point 1 ', nchar(13), nchar(10), N'      - detailed description of the service point 2""', nchar(13), nchar(10), N'    },', nchar(13), nchar(10), N'    {', nchar(13), nchar(10), N'      ""title"": ""TSA service title"",', nchar(13), nchar(10), N'      ""serviceInScopeDescription"": ""', nchar(13), nchar(10), N'      - detailed description of the service point 1 ', nchar(13), nchar(10), N'      - detailed description of the service point 2""', nchar(13), nchar(10), N'    },', nchar(13), nchar(10), N'    {', nchar(13), nchar(10), N'      ""title"": ""TSA service title"",', nchar(13), nchar(10), N'      ""serviceInScopeDescription"": ""', nchar(13), nchar(10), N'      - detailed description of the service point 1 ', nchar(13), nchar(10), N'      - detailed description of the service point 2""', nchar(13), nchar(10), N'    }', nchar(13), nchar(10), N'  ]"'), CONCAT(CAST(N'"[' AS nvarchar(max)), nchar(13), nchar(10), N'    {', nchar(13), nchar(10), N'      ""title"": ""TSA service title"",', nchar(13), nchar(10), N'      ""serviceInScopeDescription"": ""', nchar(13), nchar(10), N'      - detailed description of the service point 1 ', nchar(13), nchar(10), N'      - detailed description of the service point 2""', nchar(13), nchar(10), N'    },', nchar(13), nchar(10), N'    {', nchar(13), nchar(10), N'      ""title"": ""TSA service title"",', nchar(13), nchar(10), N'      ""serviceInScopeDescription"": ""', nchar(13), nchar(10), N'      - detailed description of the service point 1 ', nchar(13), nchar(10), N'      - detailed description of the service point 2""', nchar(13), nchar(10), N'    },', nchar(13), nchar(10), N'    {', nchar(13), nchar(10), N'      ""title"": ""TSA service title"",', nchar(13), nchar(10), N'      ""serviceInScopeDescription"": ""', nchar(13), nchar(10), N'      - detailed description of the service point 1 ', nchar(13), nchar(10), N'      - detailed description of the service point 2""', nchar(13), nchar(10), N'    }', nchar(13), nchar(10), N'  ]"'), N'Example TSA Structure', N'SYSTEM', NULL, N'System'),
(24, N'TSA_GENERATOR', NULL, N'System', NULL, CAST(1 AS bit), N'PROJECT_DOCUMENT_KEYS', N'"[''TSA'', ''rTSA'', ''Disposition'', ''Processes'']"', N'"[''TSA'', ''rTSA'', ''Disposition'', ''Processes'']"', N'Project Document Keys', N'SYSTEM', NULL, N'System'),
(25, N'TSA_GENERATOR', NULL, N'System', NULL, CAST(1 AS bit), N'SCOPE_GENERATION', CONCAT(CAST(N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.' AS nvarchar(max)), nchar(13), nchar(10), N'  Your expertise lies in  working with functional leads to develop detailed description of the service scope of a TSA for {transaction_type} projects.', nchar(13), nchar(10), N'  Your task is to create a comprehensive description of the service scope of a TSA based on its title and the project information for the {team} project team', nchar(13), nchar(10), nchar(13), nchar(10), N'  INPUTS:', nchar(13), nchar(10), N'  1. Project Information: Details about the project teams including:', nchar(13), nchar(10), N'     - Sector', nchar(13), nchar(10), N'     - Subsector', nchar(13), nchar(10), N'     - Transaction Type', nchar(13), nchar(10), N'  2. TSA title and disposition type: We have the title of the TSA and its disposition type.', nchar(13), nchar(10), nchar(13), nchar(10), N'  DELIVERABLE FORMAT:', nchar(13), nchar(10), N'  - Generate the description of the service scope as a string in bullet points and it should be clear, concise, and actionable.', nchar(13), nchar(10), N'  - Do not include any explanations or additional information, just the structure.', nchar(13), nchar(10), nchar(13), nchar(10), N'  INPUTS:', nchar(13), nchar(10), N'  1. Project Information:', nchar(13), nchar(10), N'     - Sector: {sector}', nchar(13), nchar(10), N'     - Subsector: {sub_sector}', nchar(13), nchar(10), N'     - Transaction Type: {transaction_type}', nchar(13), nchar(10), N'  2. TSA title and disposition type: {tsa_data}', nchar(13), nchar(10), nchar(13), nchar(10), N'  ANSWER:"'), CONCAT(CAST(N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.' AS nvarchar(max)), nchar(13), nchar(10), N'  Your expertise lies in  working with functional leads to develop detailed description of the service scope of a TSA for {transaction_type} projects.', nchar(13), nchar(10), N'  Your task is to create a comprehensive description of the service scope of a TSA based on its title and the project information for the {team} project team', nchar(13), nchar(10), nchar(13), nchar(10), N'  INPUTS:', nchar(13), nchar(10), N'  1. Project Information: Details about the project teams including:', nchar(13), nchar(10), N'     - Sector', nchar(13), nchar(10), N'     - Subsector', nchar(13), nchar(10), N'     - Transaction Type', nchar(13), nchar(10), N'  2. TSA title and disposition type: We have the title of the TSA and its disposition type.', nchar(13), nchar(10), nchar(13), nchar(10), N'  DELIVERABLE FORMAT:', nchar(13), nchar(10), N'  - Generate the description of the service scope as a string in bullet points and it should be clear, concise, and actionable.', nchar(13), nchar(10), N'  - Do not include any explanations or additional information, just the structure.', nchar(13), nchar(10), nchar(13), nchar(10), N'  INPUTS:', nchar(13), nchar(10), N'  1. Project Information:', nchar(13), nchar(10), N'     - Sector: {sector}', nchar(13), nchar(10), N'     - Subsector: {sub_sector}', nchar(13), nchar(10), N'     - Transaction Type: {transaction_type}', nchar(13), nchar(10), N'  2. TSA title and disposition type: {tsa_data}', nchar(13), nchar(10), nchar(13), nchar(10), N'  ANSWER:"'), N'Scope Generation', N'SYSTEM', NULL, N'System'),
(26, N'TSA_GENERATOR', NULL, N'System', NULL, CAST(1 AS bit), N'TSA_GENERATION', CONCAT(CAST(N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.' AS nvarchar(max)), nchar(13), nchar(10), N'  Your expertise lies in  working with functional leads to develop detailed TSAs for {transaction_type} projects.', nchar(13), nchar(10), N'  Your task is to create a comprehensive TSA based on the provided inputs for the {team} project team with flexible input combinations.', nchar(13), nchar(10), nchar(13), nchar(10), N'  POSSIBLE INPUTS CAN BE:', nchar(13), nchar(10), N'  1. Operating Model: ', nchar(13), nchar(10), N'      A conceptual framework that outlines how an organization delivers value to its customers and stakeholders. ', nchar(13), nchar(10), N'      It serves as a blueprint for how various components of the organization work together to achieve strategic objectives.', nchar(13), nchar(10), N'      Generate one TSA based on each operating model.', nchar(13), nchar(10), N'  2. Project Documentation: ', nchar(13), nchar(10), N'      Some operating models retrieved from documents uploaded by the user, these operating model might have a different format and titles but is the same meaning.', nchar(13), nchar(10), N'      Generate one TSA based on each operating model retrieved from documents.', nchar(13), nchar(10), N'  3. EY Intellectual Property (EYIP): Here we have templates or blueprint for a TSA of the same transaction type for the {team} project team. Generate one TSA based on each EYIP.', nchar(13), nchar(10), N'  4. Application Inventory Tracker: ', nchar(13), nchar(10), N'      A comprehensive inventory of software applications within the organization.', nchar(13), nchar(10), N'      Application names can be used as TSA title, please generate one TSA based on each item in Application Inventory Tracker.', nchar(13), nchar(10), N'  5. Project Information: Details about the project teams including:', nchar(13), nchar(10), N'     - Sector', nchar(13), nchar(10), N'     - Subsector', nchar(13), nchar(10), N'     - Transaction Type', nchar(13), nchar(10), N'   6. Specific team related data: Documentation mentioning details about {team} project team.', nchar(13), nchar(10), nchar(13), nchar(10), N'  FLEXIBLE INPUT HANDLING:', nchar(13), nchar(10), N'  - Generate TSAs based on whatever inputs are available', nchar(13), nchar(10), N'  - Generate additional TSAs to complement the TSAs generated based on input data, ensure there is at least {min_tsa} TSA generated.', nchar(13), nchar(10), N'  - Ensure the response is complete and useful regardless of which inputs were provided', nchar(13), nchar(10), nchar(13), nchar(10), N'  REQUIREMENTS:', nchar(13), nchar(10), N'  1. Create a comprehensive list of TSA services for the {team} team', nchar(13), nchar(10), N'  2. Each service should include:', nchar(13), nchar(10), N'     - A clear title that describes the service', nchar(13), nchar(10), N'     - A detailed description of the service scope in bullet points (markdown format)', nchar(13), nchar(10), N'  3. Ensure all services are relevant to the {team}''s responsibilities', nchar(13), nchar(10), N'  4. Descriptions should be clear, concise, and actionable', nchar(13), nchar(10), nchar(13), nchar(10), N'  DELIVERABLE FORMAT:', nchar(13), nchar(10), N'  Provide the TSA in JSON format, structured as follows:', nchar(13), nchar(10), N'  ----', nchar(13), nchar(10), N'  {example_structure}', nchar(13), nchar(10), N'  ----', nchar(13), nchar(10), nchar(13), nchar(10), N'  INSTRUCTIONS FOR EXECUTION:', nchar(13), nchar(10), N'  - Output should be in the exact JSON structure specified. Without mentioning anything the format in the response.', nchar(13), nchar(10), N'  - Do not include any explanations or additional information, just the structure.', nchar(13), nchar(10), nchar(13), nchar(10), N'  INPUTS:', nchar(13), nchar(10), N'  1. Project Documentation: {project_documentation}', nchar(13), nchar(10), N'  2. Operating Model: {operating_model}', nchar(13), nchar(10), N'  3. EY Intellectual Property: {eyip_adapted_data}', nchar(13), nchar(10), N'  4. Application Inventory Tracker: {app_inventory}', nchar(13), nchar(10), N'  5. Project Information:', nchar(13), nchar(10), N'     - Sector: {sector}', nchar(13), nchar(10), N'     - Subsector: {sub_sector}', nchar(13), nchar(10), N'     - Transaction Type: {transaction_type}', nchar(13), nchar(10), N'   6. Specific team related data: {search_results}', nchar(13), nchar(10), nchar(13), nchar(10), N'  ANSWER:"'), CONCAT(CAST(N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience.' AS nvarchar(max)), nchar(13), nchar(10), N'  Your expertise lies in  working with functional leads to develop detailed TSAs for {transaction_type} projects.', nchar(13), nchar(10), N'  Your task is to create a comprehensive TSA based on the provided inputs for the {team} project team with flexible input combinations.', nchar(13), nchar(10), nchar(13), nchar(10), N'  POSSIBLE INPUTS CAN BE:', nchar(13), nchar(10), N'  1. Operating Model: ', nchar(13), nchar(10), N'      A conceptual framework that outlines how an organization delivers value to its customers and stakeholders. ', nchar(13), nchar(10), N'      It serves as a blueprint for how various components of the organization work together to achieve strategic objectives.', nchar(13), nchar(10), N'      Generate one TSA based on each operating model.', nchar(13), nchar(10), N'  2. Project Documentation: ', nchar(13), nchar(10), N'      Some operating models retrieved from documents uploaded by the user, these operating model might have a different format and titles but is the same meaning.', nchar(13), nchar(10), N'      Generate one TSA based on each operating model retrieved from documents.', nchar(13), nchar(10), N'  3. EY Intellectual Property (EYIP): Here we have templates or blueprint for a TSA of the same transaction type for the {team} project team. Generate one TSA based on each EYIP.', nchar(13), nchar(10), N'  4. Application Inventory Tracker: ', nchar(13), nchar(10), N'      A comprehensive inventory of software applications within the organization.', nchar(13), nchar(10), N'      Application names can be used as TSA title, please generate one TSA based on each item in Application Inventory Tracker.', nchar(13), nchar(10), N'  5. Project Information: Details about the project teams including:', nchar(13), nchar(10), N'     - Sector', nchar(13), nchar(10), N'     - Subsector', nchar(13), nchar(10), N'     - Transaction Type', nchar(13), nchar(10), N'   6. Specific team related data: Documentation mentioning details about {team} project team.', nchar(13), nchar(10), nchar(13), nchar(10), N'  FLEXIBLE INPUT HANDLING:', nchar(13), nchar(10), N'  - Generate TSAs based on whatever inputs are available', nchar(13), nchar(10), N'  - Generate additional TSAs to complement the TSAs generated based on input data, ensure there is at least {min_tsa} TSA generated.', nchar(13), nchar(10), N'  - Ensure the response is complete and useful regardless of which inputs were provided', nchar(13), nchar(10), nchar(13), nchar(10), N'  REQUIREMENTS:', nchar(13), nchar(10), N'  1. Create a comprehensive list of TSA services for the {team} team', nchar(13), nchar(10), N'  2. Each service should include:', nchar(13), nchar(10), N'     - A clear title that describes the service', nchar(13), nchar(10), N'     - A detailed description of the service scope in bullet points (markdown format)', nchar(13), nchar(10), N'  3. Ensure all services are relevant to the {team}''s responsibilities', nchar(13), nchar(10), N'  4. Descriptions should be clear, concise, and actionable', nchar(13), nchar(10), nchar(13), nchar(10), N'  DELIVERABLE FORMAT:', nchar(13), nchar(10), N'  Provide the TSA in JSON format, structured as follows:', nchar(13), nchar(10), N'  ----', nchar(13), nchar(10), N'  {example_structure}', nchar(13), nchar(10), N'  ----', nchar(13), nchar(10), nchar(13), nchar(10), N'  INSTRUCTIONS FOR EXECUTION:', nchar(13), nchar(10), N'  - Output should be in the exact JSON structure specified. Without mentioning anything the format in the response.', nchar(13), nchar(10), N'  - Do not include any explanations or additional information, just the structure.', nchar(13), nchar(10), nchar(13), nchar(10), N'  INPUTS:', nchar(13), nchar(10), N'  1. Project Documentation: {project_documentation}', nchar(13), nchar(10), N'  2. Operating Model: {operating_model}', nchar(13), nchar(10), N'  3. EY Intellectual Property: {eyip_adapted_data}', nchar(13), nchar(10), N'  4. Application Inventory Tracker: {app_inventory}', nchar(13), nchar(10), N'  5. Project Information:', nchar(13), nchar(10), N'     - Sector: {sector}', nchar(13), nchar(10), N'     - Subsector: {sub_sector}', nchar(13), nchar(10), N'     - Transaction Type: {transaction_type}', nchar(13), nchar(10), N'   6. Specific team related data: {search_results}', nchar(13), nchar(10), nchar(13), nchar(10), N'  ANSWER:"'), N'TSA Generation', N'SYSTEM', NULL, N'System'),
(27, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(1 AS bit), N'SUMMARY_DOCUMENTS', N'"SUMMARY_DOCUMENTS'',''Summarize the content of the provided documents into a concise title that does not exceed 40 words, focusing on key insights, themes, and important details."', N'"SUMMARY_DOCUMENTS'',''Summarize the content of the provided documents into a concise title that does not exceed 40 words, focusing on key insights, themes, and important details."', N'Summary Documents', N'SYSTEM', NULL, N'System'),
(28, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(1 AS bit), N'SUMMARY_AGENT', N'"Extract a concise description, focusing on the key insights and themes of this set of documents (not exceeding 500 characters)."', N'"Extract a concise description, focusing on the key insights and themes of this set of documents (not exceeding 500 characters)."', N'Summary Agent', N'SYSTEM', NULL, N'System'),
(29, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(1 AS bit), N'TITLE_AGENT', N'"Summarize the content of the provided documents into a concise title that does not exceed 20 words (use maximum 55 characters). Use underscores to connect words, similar to this format: taxes_finance_uk. Every character MUST match this pattern: [a-z0-9_]{1,30}. Do not use any special characters or spaces."', N'"Summarize the content of the provided documents into a concise title that does not exceed 20 words (use maximum 55 characters). Use underscores to connect words, similar to this format: taxes_finance_uk. Every character MUST match this pattern: [a-z0-9_]{1,30}. Do not use any special characters or spaces."', N'Title Agent', N'SYSTEM', NULL, N'System'),
(30, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(1 AS bit), N'SUMMARY_TOOL', N'"Useful for any requests that require a holistic summary of EVERYTHING about {", ".join(documents["titles"])} or similar topics. For questions about more specific sections, please use the vector_tool."', N'"Useful for any requests that require a holistic summary of EVERYTHING about {", ".join(documents["titles"])} or similar topics. For questions about more specific sections, please use the vector_tool."', N'Summary Tool', N'SYSTEM', NULL, N'System'),
(31, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(1 AS bit), N'VECTOR_TOOL', CONCAT(CAST(N'"Use this tool for fact-based questions related to specific content in the user documentation.' AS nvarchar(max)), nchar(13), nchar(10), N'This tool allows you to extract precise information, definitions, and answers to targeted queries.', nchar(13), nchar(10), N'It is designed for users who need detailed and accurate responses to specific questions, ensuring quick access to relevant facts and data.', nchar(13), nchar(10), N'Utilize this tool when you require clarification on a feature, instructions, or troubleshooting steps,', nchar(13), nchar(10), N'ensuring that your answers are grounded in the documentation."'), CONCAT(CAST(N'"Use this tool for fact-based questions related to specific content in the user documentation.' AS nvarchar(max)), nchar(13), nchar(10), N'This tool allows you to extract precise information, definitions, and answers to targeted queries.', nchar(13), nchar(10), N'It is designed for users who need detailed and accurate responses to specific questions, ensuring quick access to relevant facts and data.', nchar(13), nchar(10), N'Utilize this tool when you require clarification on a feature, instructions, or troubleshooting steps,', nchar(13), nchar(10), N'ensuring that your answers are grounded in the documentation."'), N'Vector Tool', N'SYSTEM', NULL, N'System'),
(32, N'STATUS_REPORT_GENERATOR', NULL, N'System', NULL, CAST(1 AS bit), N'AGENT_PROMPT', CONCAT(CAST(N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience, specialized in answering queries about the following documents: {doc_names}. ' AS nvarchar(max)), nchar(13), nchar(10), N'You must ALWAYS use at least one of the tools provided (summary_tool or vector_tool) when answering a question.', nchar(13), nchar(10), N'Your responses should be constructed solely based on the information retrieved from these tools, without relying on prior knowledge or experience.', nchar(13), nchar(10), N'Be as detailed and verbose as possible in your responses, ensuring that all information is derived from the tools used."'), CONCAT(CAST(N'"You are a Strategy and Transactions Senior Partner with 40 years of industry experience, specialized in answering queries about the following documents: {doc_names}. ' AS nvarchar(max)), nchar(13), nchar(10), N'You must ALWAYS use at least one of the tools provided (summary_tool or vector_tool) when answering a question.', nchar(13), nchar(10), N'Your responses should be constructed solely based on the information retrieved from these tools, without relying on prior knowledge or experience.', nchar(13), nchar(10), N'Be as detailed and verbose as possible in your responses, ensuring that all information is derived from the tools used."'), N'Agent Prompt', N'SYSTEM', NULL, N'System');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ID', N'Agent', N'CreatedAt', N'CreatedBy', N'Description', N'IsActive', N'Key', N'OriginalPrompt', N'Prompt', N'Title', N'Type', N'UpdatedAt', N'UpdatedBy') AND [object_id] = OBJECT_ID(N'[AssistantPrompts]'))
    SET IDENTITY_INSERT [AssistantPrompts] OFF;
GO

INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250703084104_NewPromptsSeeding_Migration6', N'8.0.8');
GO

COMMIT;
GO


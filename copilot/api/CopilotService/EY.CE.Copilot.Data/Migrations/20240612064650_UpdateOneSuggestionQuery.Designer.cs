// <auto-generated />
using System;
using EY.CE.Copilot.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EY.CE.Copilot.Data.Migrations
{
    [DbContext(typeof(CopilotContext))]
    [Migration("20240612064650_UpdateOneSuggestionQuery")]
    partial class UpdateOneSuggestionQuery
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EY.CE.Copilot.Data.Models.ChatHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChatId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SuggestionId")
                        .HasColumnType("bigint");

                    b.Property<long>("TimeToResolve")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AssistantChatHistory");
                });

            modelBuilder.Entity("EY.CE.Copilot.Data.Models.CopilotConfiguration", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AssistantConfigurations", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IsEnabled = false,
                            Key = "PROJECT_CONTEXT",
                            Title = "Project Context",
                            Value = ""
                        });
                });

            modelBuilder.Entity("EY.CE.Copilot.Data.Models.CopilotFeedback", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("AssistantFeedbacks");
                });

            modelBuilder.Entity("EY.CE.Copilot.Data.Models.MessageFeedback", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ChatId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLiked")
                        .HasColumnType("bit");

                    b.Property<long>("MessageId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("AssistantMessageFeedbacks");
                });

            modelBuilder.Entity("EY.CE.Copilot.Data.Models.Suggestion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AnswerSQL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppAffinity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuggestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("VisibleToAssistant")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("AssistantSuggestions", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AnswerSQL = "SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = 'Milestone' GROUP BY pt.Title",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many milestones does each team have?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 2,
                            AnswerSQL = "SELECT pt.Title, COUNT(*) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = 'Risk' GROUP BY pt.Title",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many risks does each team have?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 3,
                            AnswerSQL = "SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many interdependencies does each receiver team have?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 4,
                            AnswerSQL = "SELECT wp.Title  from WorkPlan wp  LEFT JOIN Statuses s on wp.WorkPlanTaskStatusId = s.ID  where s.[Key] = 'BEHIND_SCHEDULE'  AND wp.WorkPlanTaskType = 'Milestone'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out behind schedule milestones.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 5,
                            AnswerSQL = "SELECT RI.Title  from RisksAndIssues RI  LEFT JOIN Statuses s on RI.ItemStatusId = s.ID  where s.[Key] = 'BEHIND_SCHEDULE'  AND RI.IssueRiskCategory = 'Risk'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out behind schedule risks.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 6,
                            AnswerSQL = "SELECT I.Title  from Interdependencies I  LEFT JOIN InterdependencyStatuses s on I.InterdependencyStatusId = s.ID  where s.[Key] = 'BEHIND_SCHEDULE'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out behind schedule interdependencies.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 7,
                            AnswerSQL = "SELECT COUNT(*) AS MilestonesDueThisWeek FROM WorkPlan wp LEFT JOIN statuses s ON wp.WorkPlanTaskStatusId = s.ID LEFT JOIN UserProfiles up on wp.TaskOwnerId = up.ID WHERE wp.WorkPlanTaskType = 'Milestone'   AND YEAR(wp.TaskDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, wp.TaskDueDate) = DATEPART(WEEK, GETDATE())   AND (s.[Key] IS NULL OR s.[Key]  NOT IN ('COMPLETED', 'CLOSED'))   AND up.EMail = '{Username}'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many of my milestones are due this week?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 8,
                            AnswerSQL = "SELECT COUNT(*) AS RisksAndIssuesDueThisWeek FROM RisksAndIssues RI LEFT JOIN statuses S ON RI.ItemStatusId = S.ID LEFT JOIN UserProfiles up on RI.ItemOwnerId = up.ID WHERE RI.IssueRiskCategory = 'Risk'   AND YEAR(RI.ItemDueDate) = YEAR(GETDATE())   AND DATEPART(WEEK, RI.ItemDueDate) = DATEPART(WEEK, GETDATE())   AND (S.[Key] IS NULL OR S.[Key] NOT IN ('COMPLETED', 'CLOSED'))   AND up.EMail = '{Username}'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many of my risks are due this week?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 9,
                            AnswerSQL = "SELECT      COUNT(*) AS InterdependenciesDueThisWeek FROM      Interdependencies I LEFT JOIN      statuses S ON I.InterdependencyStatusId = S.ID WHERE      YEAR(I.ItemDueDate) = YEAR(GETDATE())     AND DATEPART(WEEK, I.ItemDueDate) = DATEPART(WEEK, GETDATE())     AND (S.[Key] IS NULL OR S.[Key] NOT IN ('COMPLETED', 'CLOSED'))",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many interdependencies are due this week?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 10,
                            AnswerSQL = "SELECT     pt.Title AS ProjectTeamTitle,     COUNT(*) AS OverdueMilestoneCount FROM      WorkPlan wp INNER JOIN      ProjectTeams pt ON wp.ProjectTeamId = pt.ID LEFT JOIN      statuses s ON wp.WorkPlanTaskStatusId = s.ID WHERE      wp.WorkPlanTaskType = 'Milestone'     AND wp.TaskDueDate < GETDATE()     AND (s.[Key] IS NULL OR s.[Key] NOT IN ('COMPLETED', 'CLOSED')) GROUP BY      pt.Title ORDER BY      OverdueMilestoneCount DESC",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Which project team has the most overdue milestones?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 11,
                            AnswerSQL = "SELECT      pt.Title AS ProjectTeamTitle,     COUNT(1) AS OverdueRiskCount FROM      RisksAndIssues RI INNER JOIN      ProjectTeams pt ON RI.ProjectTeamId = pt.ID LEFT JOIN      statuses S ON RI.ItemStatusId = S.ID WHERE      RI.IssueRiskCategory = 'Risk'     AND RI.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN ('COMPLETED', 'CLOSED')) GROUP BY      pt.Title ORDER BY  OverdueRiskCount desc",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Which project team has the most overdue risks?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 12,
                            AnswerSQL = "SELECT      ProviderTeam.Title AS ProviderTeamTitle,     COUNT(1) AS OverdueDependencyCount FROM      Interdependencies I INNER JOIN      ProjectTeams ProviderTeam ON I.ProviderProjectTeamId = ProviderTeam.ID LEFT JOIN      InterdependencyStatuses S ON I.InterdependencyStatusId = S.ID WHERE      I.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN ('COMPLETED', 'CLOSED')) GROUP BY      ProviderTeam.Title ORDER BY      OverdueDependencyCount DESC",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Which provider project team has the most overdue interdependencies?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 13,
                            AnswerSQL = "SELECT      RiskImpact,     RiskProbability,     COUNT(*) AS RiskCount FROM      RisksAndIssues WHERE      IssueRiskCategory = 'Risk'     AND ItemStatusId NOT IN (SELECT ID FROM statuses WHERE [Key] IN ('COMPLETED', 'CLOSED'))  AND (RiskImpact IS NOT NULL   OR RiskProbability IS NOT NULL  ) GROUP BY      RiskImpact,     RiskProbability ORDER BY      RiskImpact, RiskProbability",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Show me open risks broken down by impact and probability.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 14,
                            AnswerSQL = "SELECT      ReceiverTeam.Title AS ReceiverTeamTitle,     COUNT(1) AS OverdueDependencyCount FROM      Interdependencies I INNER JOIN      ProjectTeams ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID LEFT JOIN      InterdependencyStatuses S ON I.InterdependencyStatusId = S.ID WHERE      I.ItemDueDate < GETDATE()     AND (S.[Key] IS NULL OR S.[Key] NOT IN ('COMPLETED', 'CLOSED')) GROUP BY      ReceiverTeam.Title ORDER BY      OverdueDependencyCount DESC",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Which receiver project team has the most overdue interdependencies?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 15,
                            AnswerSQL = "SELECT      ProviderTeam.Title AS ProviderTeamame,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ProviderTeam ON I.ProviderProjectTeamId = ProviderTeam.ID GROUP BY      ProviderTeam.Title",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many interdependencies does each provider team have?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 16,
                            AnswerSQL = "SELECT W.Title AS  WorkPlanItem FROM Workplan W LEFT JOIN UserProfiles UP ON W.TaskOwnerID = UP.ID WHERE UP.Title = '{Username}' ",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out workplan items assigned to User.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 17,
                            AnswerSQL = "SELECT TOP 1 CAST(PeriodEndDate AS DATE) AS WeeklyStatusDueDate FROM ReportingPeriods WHERE CAST(GETDATE() AS DATE) BETWEEN CAST(PeriodStartDate AS DATE) AND CAST(PeriodEndDate AS DATE) ORDER BY Modified DESC",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "When is my weekly status report due?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 18,
                            AnswerSQL = "SELECT UP.Title AS FunctionalOwner FROM ProjectTeams PT JOIN Userprofiles UP ON PT.ItemOwnerID = UP.ID WHERE PT.Title = {ProjectTeam}",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Who is the functional owner of HR team?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 19,
                            AnswerSQL = "SELECT WP.Title FROM Workplan WP JOIN ProjectTeams PT ON WP.ProjectTeamId = PT.ID JOIN Statuses S ON WP.WorkPlanTaskStatusId = S.ID WHERE S.[Key] = 'BEHIND_SCHEDULE' AND PT.Title = {ProjectTeam}",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out Behind Schedule items for HR team.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 20,
                            AnswerSQL = "SELECT Title FROM Workplan WHERE DATEPART(ww,TaskDueDate) = DATEPART(ww,GETDATE()) + 1",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out workplan items due next week.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 21,
                            AnswerSQL = "SELECT SF.Title FROM Subfunctions SF JOIN Functions F ON SF.FunctionID = F.ID WHERE F.Title = {ProjectTeam}",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out sub functions of Finance.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 22,
                            AnswerSQL = "SELECT WS.Title FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN WeeklyStatusStatuses WS ON PSE.WeeklyStatusStatusId = WS.ID JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = {ProjectTeam} AND RP.ID = (SELECT ID -1 FROM ReportingPeriods WHERE GETDATE() BETWEEN PeriodStartDate AND PeriodEndDate)",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What was the status of Finance team last week?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 23,
                            AnswerSQL = "SELECT AN.Title, AN.AccomplishmentNextstepCategory FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = {ProjectTeam} AND RP.ID = (SELECT ID -1 FROM ReportingPeriods WHERE GETDATE() BETWEEN PeriodStartDate AND PeriodEndDate) ORDER BY AN.AccomplishmentNextstepCategory",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What were the accomplishment and next steps of Finance team last week?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 24,
                            AnswerSQL = "SELECT Title  FROM Interdependencies  WHERE CAST(ItemDueDate AS DATE) < CAST(GETDATE() AS DATE)",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out overdue interdependencies.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 25,
                            AnswerSQL = "SELECT TOP 1 PT.Title Team, SUM(Counts) TotalInterdependencies FROM ( SELECT ProviderProjectTeamID TeamID, Count(ID) Counts FROM Interdependencies WHERE CAST(ItemDueDate AS DATE) < CAST(GETDATE() AS DATE) GROUP BY ProviderProjectTeamID UNION ALL SELECT ReceiverProjectTeamID, Count(ID) FROM Interdependencies WHERE CAST(ItemDueDate AS DATE) < CAST(GETDATE() AS DATE) GROUP BY ReceiverProjectTeamID ) SUB JOIN ProjectTeams PT ON SUB.TeamID = PT.ID GROUP BY PT.Title ORDER BY TotalInterdependencies DESC",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out team with most overdue interdependencies.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 26,
                            AnswerSQL = "SELECT Title AS RisksWithNoMitigation FROM RisksandIssues WHERE RiskMitigation IS NULL AND IssueRiskCategory = 'Risk'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out Risks with no mitigation plan in place.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 27,
                            AnswerSQL = "SELECT Title AS RisksWithNoOwner FROM RisksandIssues WHERE ItemOwnerID IS NULL AND IssueRiskCategory = 'Risk'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out Risks with no owners assigned to them.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 28,
                            AnswerSQL = "SELECT Title As Milestones FROM Workplan W WHERE WorkplanTaskType = 'Milestone' AND CAST(StartDate AS DATE) > CAST(GETDATE() AS DATE) AND EXISTS (SELECT 1 FROM [dbo].[WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues] WHERE WorkplanID = W.ID)",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Show me upcoming milestones that have risks linked to it.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 29,
                            AnswerSQL = "SELECT PT.Title AS Team FROM ProjectTeams PT JOIN TeamTypes TT ON PT.TeamTypeID = TT.ID WHERE TT.[Key] = 'PROJECT_MANAGEMENT'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many teams do I have in PMO?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 30,
                            AnswerSQL = "SELECT Child.Title AS Teams FROM ProjectTeams Parent JOIN ProjectTeams Child ON Child.ParentProjectTeamId = Parent.ID WHERE Parent.Title = {ProjectTeam}",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What are child teams of Finance?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 31,
                            AnswerSQL = "SELECT Parent.Title AS ParentTeam FROM ProjectTeams Parent JOIN ProjectTeams Child ON Child.ParentProjectTeamId = Parent.ID WHERE Child.Title = {ProjectTeam}",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What is the parent team of Tax?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 32,
                            AnswerSQL = "SELECT AN.Title FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN UserProfiles UP ON PT.ItemOwnerID = UP.ID JOIN AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE UP.EMail = '{Username}' AND RP.ID = (SELECT ID -1 FROM ReportingPeriods WHERE GETDATE() BETWEEN PeriodStartDate AND PeriodEndDate) AND AN.AccomplishmentNextstepCategory = 'Accomplishment'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What are my accomplishments from last reporting period?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 33,
                            AnswerSQL = "SELECT AN.Title AS NextSteps FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN AccomplishmentsAndNextSteps AN ON PSE.ID = AN.ProjectStatusEntryId JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID WHERE PT.Title = {ProjectTeam} AND RP.ID = (SELECT ID FROM ReportingPeriods WHERE GETDATE() BETWEEN PeriodStartDate AND PeriodEndDate) AND AN.AccomplishmentNextstepCategory = 'Next Step'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What are next steps for Finance team?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 34,
                            AnswerSQL = "SELECT I.Title FROM Interdependencies I JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID WHERE UP.EMail = '{Username}' ",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List the interdependencies for which I'm the provider.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 35,
                            AnswerSQL = "SELECT Count(ID) IssueCoutnwithNoMitigationPlan FROM RisksandIssues WHERE RiskMitigation IS NULL AND IssueRiskCategory = 'Issue'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many issues don't have a mitigation plan?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 36,
                            AnswerSQL = "SELECT UniqueItemIdentifier,Title FROM WORKPLAN WHERE TaskOwnerId IS NULL AND WorkPlanTaskType = 'Task'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List tasks that have missing owners.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 37,
                            AnswerSQL = "SELECT COUNT(1) [HighRiskItemCount] FROM RisksAndIssues R JOIN ProjectTeams PT ON PT.ID = R.ProjectTeamId WHERE RiskImpact = 'High' AND IssueRiskCategory = 'Risk' AND PT.Title ={ProjectTeam}",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many high risk items are there for IT?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 38,
                            AnswerSQL = "SELECT  W.Title,'Workplan' [Category] FROM Workplan W LEFT JOIN UserProfiles UP ON W.TaskOwnerID = UP.ID WHERE UP.Title = '{Username}' UNION ALL  SELECT RI.Title,IssueRiskCategory [Category] FROM RisksAndIssues RI LEFT JOIN UserProfiles UP ON RI.ItemOwnerId = UP.ID WHERE UP.Title = '{Username}' UNION ALL SELECT A.Title,'Action' [Category] FROM Actions A LEFT JOIN UserProfiles UP ON A.ItemOwnerId = UP.ID WHERE UP.Title = '{Username}' UNION ALL  SELECT D.Title,'Decision' [Category] FROM Decisions D LEFT JOIN UserProfiles UP ON D.ItemOwnerId = UP.ID WHERE UP.Title = '{Username}' UNION ALL  SELECT I.Title,'Interdependecy as Provider' [Category] FROM Interdependencies I LEFT JOIN UserProfiles UP ON I.ProviderOwnerId = UP.ID WHERE UP.Title = '{Username}'  UNION ALL  SELECT I.Title,'Interdependecy as Receiver' [Category] FROM Interdependencies I LEFT JOIN UserProfiles UP ON I.ReceiverOwnerId = UP.ID WHERE UP.Title = '{Username}'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all workplan, raid and interdependencies assigned to user.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 39,
                            AnswerSQL = "SELECT PT.Title [Project Team] FROM ProjectStatusEntries PSE JOIN ProjectTeams PT ON PSE.ProjectTeamID = PT.ID JOIN ReportingPeriods RP ON PSE.ReportingPeriodID = RP.ID JOIN WeeklyStatusStatuses WS ON WS.ID = PSE.WeeklyStatusStatusId WHERE  RP.ID = (SELECT ID  FROM ReportingPeriods WHERE GETDATE() BETWEEN PeriodStartDate AND PeriodEndDate) AND WS.[KEY] IN ('AT_RISK','BEHIND_SCHEDULE')",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Are there any project teams that are 'At Risk' or 'Behind Schedule'?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 40,
                            AnswerSQL = "SELECT Count(W.ID) as TasksCompletedLastWeek FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID  WHERE  CAST(ActualEndDate AS DATE) >= DATEADD(week,DATEDIFF(week, 0, GETDATE()) -1,0) AND CAST(ActualEndDate AS DATE) < DATEADD(week, DATEDIFF(week, 0, GETDATE()), 0) AND S.[KEY] IN ('COMPLETED')",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many workplan tasks were completed last week?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 41,
                            AnswerSQL = "SELECT COUNT(W.ID) as TasksCompletedThisWeek  FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID  WHERE CAST(ActualEndDate AS DATE) >= CAST(DATEADD(week,DATEDIFF(week,0,GETDATE()), 0) AS DATE) AND CAST(ActualEndDate AS DATE) < CAST( DATEADD(week,DATEDIFF(week,0, GETDATE()) + 1,0) AS DATE) AND S.[KEY] IN ('COMPLETED') ",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many workplan tasks are completed this week?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 42,
                            AnswerSQL = "SELECT COUNT(W.ID) as TasksDueThisWeek  FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID WHERE CAST(TaskDueDate AS DATE) >= CAST(DATEADD(week, DATEDIFF(week, 0, GETDATE()),0) AS DATE) AND CAST(TaskDueDate AS DATE) < CAST( DATEADD(week, DATEDIFF(week,0, GETDATE()) + 1, 0) AS DATE) AND S.[KEY] NOT IN ('COMPLETED', 'CANCELLED') ",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many workplan tasks that are due this week?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 43,
                            AnswerSQL = "SELECT COUNT(W.ID) as TasksDueNextWeek FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID  WHERE CAST(TaskDueDate AS DATE) >=  CAST(DATEADD(week, DATEDIFF(week,0, GETDATE()) + 1,0) AS DATE)   AND CAST(TaskDueDate AS DATE) < CAST(DATEADD(week,DATEDIFF(week,0,GETDATE()) + 2,0) AS DATE)   AND S.[KEY] NOT IN ('COMPLETED', 'CANCELLED') ",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many workplan tasks that are due next week?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 44,
                            AnswerSQL = "SELECT W.ID,W.Title FROM Workplan W LEFT JOIN Workstreams WS On  W.WorkstreamId=Ws.ID WHERE WS.Title LIKE {Workstream}",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How can I export workplan for just Finance workstream?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 45,
                            AnswerSQL = " SELECT COUNT(WR.ID) Count,'Risks' as Category FROM Workplan W JOIN WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues WR On WR.WorkPlanId = W.ID LEFT JOIN RisksAndIssues RI ON RI.ID = WR.RisksAndIssueId WHERE RI.IssueRiskCategory = 'Risk'  UNION ALL SELECT COUNT(WR.ID) Count, 'Issues' as Category FROM Workplan W JOIN WorkPlansToRisksAndIssuesForAssociatedRisksAndIssues WR On WR.WorkPlanId = W.ID LEFT JOIN RisksAndIssues RI ON RI.ID = WR.RisksAndIssueId  WHERE RI.IssueRiskCategory = 'Issue'  UNION ALL SELECT COUNT(WA.ID) Count, 'Actions' as Category  FROM Workplan W JOIN WorkPlansToActionsForAssociatedActions WA On WA.WorkPlanId = W.ID  UNION ALL SELECT    COUNT(WD.ID) Count,    'Decisions' as Category  FROM    Workplan W    JOIN WorkPlansToDecisionsForAssociatedDecisions WD On WD.WorkPlanId = W.ID",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many Risks, Issues, Actions and Decisions linked to Workplan Tasks?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 46,
                            AnswerSQL = "SELECT WSS.Title StatusValue ,'CurrentStatus' as Category FROM ProjectStatusEntries PSE LEFT JOIN WeeklyStatusStatuses WSS ON WSS.ID=PSE.WeeklyStatusStatusId LEFT JOIN ProjectTeams PT on PT.ID=PSE.ProjectTeamId WHERE PSE.ReportingPeriodId=(SELECT TOP 1 ReportingPeriods.ID FROM ReportingPeriods Where cast(ReportingPeriods.PeriodStartDate as date) <= cast(getDate() as date) Order BY PeriodEndDate DESC) AND PT.Title like {ProjectTeam}  UNION SELECT WSS.Title StatusValue ,'PreviousStatus' as Category FROM ProjectStatusEntries PSE  LEFT JOIN WeeklyStatusStatuses WSS ON WSS.ID=PSE.WeeklyStatusStatusId LEFT JOIN ProjectTeams PT on PT.ID=PSE.ProjectTeamId WHERE PSE.ReportingPeriodId=(SELECT  ReportingPeriods.ID FROM   ReportingPeriods Where cast(ReportingPeriods.PeriodStartDate as date) <= cast(getDate() as date) Order BY PeriodEndDate DESC Offset 1 Rows FETCH NEXT 1 ROWS ONLY) AND  PT.Title like {ProjectTeam}",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What's prior week and current week status for Finance function?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 47,
                            AnswerSQL = "SELECT RI.UniqueItemIdentifier, RI.Title, 'Risks' as Category FROM RisksAndIssues RI LEFT JOIN Statuses S ON RI.ItemStatusId = S.ID WHERE S.[KEY] NOT IN ('COMPLETED', 'CANCELLED', 'CLOSED', 'ON_HOLD') AND RI.IssueRiskCategory = 'Risk' UNION  SELECT RI.UniqueItemIdentifier, RI.Title, 'Issues' as Category FROM RisksAndIssues RI LEFT JOIN Statuses S ON RI.ItemStatusId = S.ID  WHERE S.[KEY] NOT IN ('COMPLETED', 'CANCELLED', 'CLOSED', 'ON_HOLD') AND RI.IssueRiskCategory = 'Issue'  UNION  SELECT A.UniqueItemIdentifier,  A.Title,  'Actions' as Category FROM  Actions A  LEFT JOIN Statuses S ON A.ItemStatusId = S.ID WHERE  S.[KEY] NOT IN (   'COMPLETED', 'CANCELLED', 'CLOSED',   'ON_HOLD'  ) UNION SELECT  D.UniqueItemIdentifier,  D.Title,  'Decisions' as Category FROM  Decisions D  LEFT JOIN Statuses S ON D.ItemStatusId = S.ID WHERE  S.[KEY] NOT IN (   'COMPLETED', 'CANCELLED', 'CLOSED',   'ON_HOLD'  ) ",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all Open Risks, Issues, Actions and Decisions.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 48,
                            AnswerSQL = "SELECT I.UniqueItemIdentifier, I.Title as OpenInterdependencies, S.Title as Status FROM Interdependencies I LEFT JOIN InterdependencyStatuses S ON I.InterdependencyStatusId = S.ID  WHERE S.[KEY] NOT IN ('COMPLETED', 'Canceled') ",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all Open Interdependencies.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 49,
                            AnswerSQL = " SELECT W.UniqueItemIdentifier, W.TITLE as CriticalTasks FROM Workplan W WHERE W.IsCritical = 1",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all critical workplan tasks.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 50,
                            AnswerSQL = "SELECT I.UniqueItemIdentifier, I.Title as ITIntProvider FROM Interdependencies I LEFT JOIN PROJECTTEAMS PT ON PT.ID = I.ProviderProjectTeamID WHERE PT.Title = {ProjectTeam} ",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all Interdependencies where IT is Interdependency Provider.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 51,
                            AnswerSQL = "SELECT I.UniqueItemIdentifier, I.Title as ITIntReceiver FROM Interdependencies I LEFT JOIN PROJECTTEAMS PT ON PT.ID = I.ReceiverProjectTeamId WHERE PT.Title = {ProjectTeam} ",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all Interdependencies where IT is Interdependency Receiver.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 52,
                            AnswerSQL = "SELECT COUNT(ID) as CountofCriticalPath FROM Workplan W WHERE W.IsCritical = 1 and W.WorkPlanTaskType = 'Milestone'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many critical milestones in workplan?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 53,
                            AnswerSQL = "SELECT COUNT(W.ID) AS TasksDueIn30Days FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID WHERE CAST(W.TaskDueDate AS DATE) <= CAST(GETDATE() + 30 AS DATE) AND CAST(W.TaskDueDate AS DATE) >= CAST(GETDATE() AS DATE) AND S.[KEY] NOT IN ('COMPLETED', 'CLOSED', 'CANCELLED')",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many tasks are due in next 30 days?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 54,
                            AnswerSQL = "SELECT UniqueItemIdentifier,Title TasksWithoutOwner FROM WorkPlan W WHERE W.TaskOwnerId IS NULL ",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List any workplan items that do not have an owner assigned.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 55,
                            AnswerSQL = "SELECT UniqueItemIdentifier,Title TasksWithoutOwner FROM WorkPlan W WHERE W.TaskOwnerId IS NULL",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List any workplan items that do not have an owner assigned.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 56,
                            AnswerSQL = "SELECT UniqueItemIdentifier,Title ItemsWithoutOwner, 'RisksAndIssues' AS Category FROM RisksAndIssues RI WHERE RI.ItemOwnerId IS NULL UNION SELECT UniqueItemIdentifier,Title ItemsWithoutOwner, 'Actions' AS Category FROM Actions RI WHERE RI.ItemOwnerId IS NULL UNION SELECT UniqueItemIdentifier,Title ItemsWithoutOwner, 'Decisions' AS Category FROM Decisions RI WHERE RI.ItemOwnerId IS NULL",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List any RAID log items that do not have an owner assigned.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 57,
                            AnswerSQL = "SELECT I.UniqueItemIdentifier, I.Title AS InterdependencyWithoutTasks FROM Interdependencies I LEFT JOIN WorkPlansToInterdependenciesForProviderTasks WTP ON WTP.InterdependencyId = I.ID WHERE WTP.ID IS NULL  UNION  SELECT I.UniqueItemIdentifier, I.Title AS InterdependencyWithoutTasks FROM Interdependencies I LEFT JOIN WorkPlansToInterdependenciesForReceiverTasks WTR ON WTR.InterdependencyId = I.ID WHERE WTR.ID IS NULL;",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List interdependencies that do not have a provider or receiver task linked.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 58,
                            AnswerSQL = "SELECT DISTINCT UP.Title AS UserName FROM WorkPlan W LEFT JOIN UserProfiles UP ON UP.ID = W.TaskOwnerId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId WHERE S.[Key] IN ('AT_RISK','BEHIND_SCHEDULE') AND UP.Title IS NOT NULL",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Show me a list of all users that have behind schedule or at risk items assigned to them.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 59,
                            AnswerSQL = "SELECT RI.Title RisksAndIssues, IssueRiskCategory FROM RisksAndIssues RI LEFT JOIN Statuses S ON S.ID = RI.ItemStatusId WHERE IsCritical IN (1) AND S.[Key] NOT IN ('CLOSED')",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Show me all Risks and issues that are flagged as Critical and not complete.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 60,
                            AnswerSQL = "SELECT ProjectTeam FROM( SELECT PT.Title AS Projectteam, COUNT(PT.ID) AS TeamUpdateCount, DENSE_RANK() OVER (ORDER BY COUNT(PT.ID)) ROW_NUM FROM WorkPlan W LEFT JOIN ProjectTeams PT ON PT.ID = W.ProjectTeamId WHERE CAST(W.Modified AS DATE) BETWEEN DATEADD(day, -14, CAST(GETDATE() AS DATE)) AND DATEADD(day, -7, CAST(GETDATE() AS DATE)) AND PT.ItemIsActive=1 GROUP BY pt.title) A",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Which functions has made the least # of updates to their workplan in last week?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 61,
                            AnswerSQL = "SELECT Title AS [List of Critical Milestones due in next 15 days with no owners Assigned yet] FROM WorkPlan WHERE WorkPlanTaskType IN ('Milestone') AND CAST(TaskDueDate AS DATE) BETWEEN CAST(GETDATE() AS DATE) AND DATEADD(day, 15, CAST(GETDATE() AS DATE)) AND IsCritical IN (1) AND TaskOwnerId IS NULL",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Can you please list down all milestones due in next 15 days which are on critical path and have no owners assigned to them?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 62,
                            AnswerSQL = "SELECT Title as [List down all tasks associated with interdependencies] from Workplan where ID in ( SELECT WorkPlanId FROM WorkPlansToInterdependenciesForReceiverTasks UNION select WorkPlanId FROM WorkPlansToInterdependenciesForProviderTasks) AND WorkPlanTaskType='Task'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Can you please list down all tasks associated with interdependencies?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 63,
                            AnswerSQL = "SELECT W.Title AS WorkplanAssociatedWithInterdependencies FROM WorkPlan W INNER JOIN WorkPlansToInterdependenciesForReceiverTasks WPRT ON W.id = WPRT.WorkPlanId LEFT JOIN Interdependencies IR ON WPRT.InterdependencyId = IR.ID WHERE CAST(W.TaskDueDate AS DATE) < CAST(IR.ItemDueDate AS DATE) AND W.WorkPlanTaskType='Task' UNION SELECT W.Title AS WorkplanAssociatedWithInterdependencies FROM WorkPlan W INNER JOIN WorkPlansToInterdependenciesForProviderTasks WPPT ON W.id = WPPT.WorkPlanId LEFT JOIN Interdependencies IR ON WPPT.InterdependencyId = IR.ID WHERE CAST(W.TaskDueDate AS DATE) < CAST(IR.ItemDueDate AS DATE) AND W.WorkPlanTaskType='Task'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Can you please list down all tasks whose due date is less than the due date of the associated interdependency?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 64,
                            AnswerSQL = "SELECT Title FROM Workplan WHERE DATEPART(ww,TaskDueDate) = DATEPART(ww,GETDATE())",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out workplan items due this week.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 65,
                            AnswerSQL = "SELECT W.Title, W.WorkPlanTaskType, W.StartDate, W.TaskDueDate, PT.Title ProjectTeam, S.Title [Status], UP.Title TaskOwner FROM Workplan W LEFT JOIN Statuses S ON W.WorkPlanTaskStatusId = S.ID LEFT JOIN ProjectTeams PT ON W.ProjectTeamId = PT.ID LEFT JOIN UserProfiles UP ON W.TaskOwnerId = UP.ID WHERE UniqueItemIdentifier = 'HR.2.2.6'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Provide details for workplan ID HR.2.2.6.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 66,
                            AnswerSQL = "SELECT Count(RI.ID) IssueCoutnwithPendingStatus FROM RisksandIssues RI JOIN RiskAndIssueStatuses RS ON RI.ItemStatusID = RS.ID WHERE RiskMitigation IS NULL 	AND IssueRiskCategory = 'Issue' 	AND RS.Title = 'Pending'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many issues are in pending status?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 67,
                            AnswerSQL = "SELECT  	UniqueItemIdentifier 	,Title 	,IssueRiskCategory FROM RisksAndIssues WHERE  	ItemOwnerId IS NULL  UNION ALL  SELECT  	UniqueItemIdentifier 	,Title 	,'Decision' FROM Decisions WHERE  	ItemOwnerId IS NULL  UNION ALL  SELECT  	UniqueItemIdentifier 	,Title 	,'Action' FROM Actions WHERE  	ItemOwnerId IS NULL",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List RAID items that do not have an owner assigned.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 68,
                            AnswerSQL = "SELECT    W.UniqueItemIdentifier,    W.TITLE NotStartedWorkplansWithStartDatePassed  FROM    Workplan W    LEFT JOIN Statuses S On S.ID = W.WorkPlanTaskStatusId  WHERE    S.[KEY] = 'NOT_STARTED'    AND CAST(W.StartDate as DATE)< CAST(     GETDATE() AS DATE   ) ",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all Workplan tasks that are 'Not Started' and planned start date has passed.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 69,
                            AnswerSQL = "SELECT    W.UniqueItemIdentifier,    W.TITLE as WorkplansWithDueDatePassed  FROM    Workplan W    LEFT JOIN Statuses S On S.ID = W.WorkPlanTaskStatusId  WHERE    S.[KEY] NOT IN ( 'COMPLETED' , 'CANCELLED')   AND CAST(W.TaskDueDate as DATE)< CAST(GETDATE() AS DATE)",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all Workplan tasks which are past due.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 70,
                            AnswerSQL = "SELECT DISTINCT PT.Title as ProjectTeams_With_Items_At_Risk  FROM ProjectTeams PT    JOIN Workplan W ON W.ProjectTeamID = PT.ID    JOIN Statuses S ON S.ID = W.WorkplanTaskStatusID  WHERE    S.[Key] = 'AT_RISK'",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all project teams with workplan items that are 'At Risk'.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 71,
                            AnswerSQL = "SELECT Title FROM ProjectTeams WHERE ManageProjectStatus = 1 EXCEPT SELECT PT.Title FROM ProjectStatusEntries PSE LEFT JOIN ReportingPeriods RP ON PSE.ReportingPeriodId = RP.ID LEFT JOIN ProjectTeams PT ON PSE.ProjectTeamId = PT.ID WHERE RP.ID = (SELECT ID FROM ReportingPeriods 				WHERE CAST(GETDATE() AS DATE) BETWEEN CAST(PeriodStartDate AS DATE) AND CAST(PeriodEndDate AS DATE) 					) 	AND PSE.WeeklyStatusStatusId IS NOT NULL",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Which teams have not entered thier weekly status report for this reporting period?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 72,
                            AnswerSQL = "SELECT COUNT(ID) AS NewRisksCount FROM RisksAndIssues WHERE IssueRiskCategory = 'Risk' AND DATEDIFF(day, Created, GETDATE()) <= 5",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many new risks have been created in the last 5 days?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 73,
                            AnswerSQL = "SELECT Title Workplan FROM (     SELECT          DISTINCT W.Title, WorkPlanLinksTargetId AS TaskID     FROM          WorkPlanLinks WL         LEFT JOIN WorkPlan W ON W.ID = WL.WorkPlanLinksTargetId      UNION      SELECT          DISTINCT W.Title, WorkPlanLinksSourceId AS TaskID     FROM          WorkPlanLinks WL         LEFT JOIN WorkPlan W ON W.ID = WL.WorkPlanLinksSourceId ) AS SubQuery ORDER BY TaskID",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Which tasks have a predecessor or successor linked to them?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 74,
                            AnswerSQL = "SELECT ProjectTeam FROM(   SELECT      PT.Title AS Projectteam,     COUNT(PT.ID) AS TeamUpdateCount, 	DENSE_RANK() OVER (ORDER BY COUNT(PT.ID) DESC) ROW_NUM FROM      RisksAndIssues RI LEFT JOIN      ProjectTeams PT ON PT.ID = RI.ProjectTeamId WHERE PT.ItemIsActive=1 and RI.IssueRiskCategory = 'Risk' GROUP BY      pt.title) A",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Which function has the highest number of risk associated with?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 75,
                            AnswerSQL = "SELECT      W.Title AS [List of Milestones due in next 7 days and Not Updated Since Last 2 weeks] FROM      WorkPlan W 	LEFT JOIN Statuses S on s.ID = W.WorkPlanTaskStatusId WHERE      W.WorkPlanTaskType IN ('Milestone')     AND W.IsCritical IN (1)     AND CAST(W.Modified AS DATE) < DATEADD(day, -14, CAST(GETDATE() AS DATE)) 	AND S.[Key] not in ('COMPLETED', 'CANCELLED')",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Can you please list down all milestones due in next 7 days which are on critical path and have no update made to them in last 2 weeks?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 76,
                            AnswerSQL = "SELECT     RI.TITLE AS [Risk items that does not have Risk Mitigation plan] FROM     RisksAndIssues RI WHERE     RI.IssueRiskCategory = 'Risk'     AND RI.RiskMitigation IS NOT NULL",
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Are there any risks items that doesn't have risk mitigation plan?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 77,
                            AnswerSQL = "SELECT 'Total Top Down Target' AS KPI, FORMAT((SUM(HeadcountCostReductionEst)+SUM(NonHeadcountCostReductionEst)+SUM(RevenueGrowthEstimate))/1000000,'N2') AS 'Value (Million)' FROM ValueCaptureTopDownEstimates ",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What are our targets for this engagement?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 78,
                            AnswerSQL = "SELECT S.Title, COUNT(VI.ID) AS InitiativeCount FROM ValueCaptureStages S LEFT JOIN ValueCaptureInitiatives VI ON S.ID = VI.ValueCaptureStageId LEFT JOIN UserProfiles UP on UP.ID = VI.ItemOwnerId Where UP.EMail = '{Username}' GROUP BY S.Title ",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How are my initiatives doing?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 79,
                            AnswerSQL = "SELECT RI.Title FROM RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RIV JOIN ValueCaptureInitiatives VI ON VI.ID = RIV.ValueCaptureInitiativeId JOIN RisksAndIssues RI ON RI.ID = RIV.RisksAndIssueId JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE U.Email = '{Username}' ",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Are there any risks or issues with initiatives that I’m responsible for?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 80,
                            AnswerSQL = "select VI.Title from ValueCaptureInitiatives VI LEFT JOIN UserProfiles U on U.ID = VI.ItemOwnerId where U.EMail = '{Username}' ",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How  many initiatives are assigned to me?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 81,
                            AnswerSQL = "SELECT VI.Title  FROM ValueCaptureInitiatives VI LEFT JOIN ValueCaptureTypes VT ON VT.ID = VI.ValueCaptureTypeId LEFT JOIN UserProfiles U ON U.ID = VI.ItemOwnerId WHERE VT.ID = 1 AND U.EMail = '{Username}' ",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Give my cost reduction initiatives.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 82,
                            AnswerSQL = "SELECT SUM(ISNULL(RevenueGrowthEstimate,0)) [RevenueGrowthTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title = {ProjectTeam}",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What are the revenue growth targets for Sales & Marketing?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 83,
                            AnswerSQL = "SELECT SUM(ISNULL(CostToAchieveEstimate,0)) [CostToAchieveTarget] FROM [ValueCaptureTopDownEstimates] VT LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId WHERE PT.Title ={ProjectTeam}",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What are the cost to achieve targets for R&D?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 84,
                            AnswerSQL = "SELECT S.Title [Value Capture Stage] , COUNT(VI.ID) [No. of Initiatives] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} GROUP BY S.Title",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many initiatives are there in IT across different stages?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 85,
                            AnswerSQL = "SELECT VI.Title [Approved Initiaves] FROM ValueCaptureInitiatives VI LEFT JOIN ProjectTeams PT ON PT.ID = VI.ProjectTeamId LEFT JOIN ValueCaptureStages S ON S.ID = VI.ValueCaptureStageId WHERE PT.Title = {ProjectTeam} AND S.Title = 'Approved'",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List IT initiatives that are in approved stage.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 86,
                            AnswerSQL = "SELECT VI.Title [Initiaves with Workplan] FROM ValueCaptureInitiatives VI JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WV ON VI.ID = WV.ValueCaptureInitiativeId",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List initiatives that have workplan item linked to them.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 87,
                            AnswerSQL = "SELECT DISTINCT VI.Title [Initiaves with Risk] FROM ValueCaptureInitiatives VI JOIN RisksAndIssuesToValueCaptureInitiativesForValueCaptureInitiativeIDs RV ON VI.ID = RV.ValueCaptureInitiativeId LEFT JOIN RisksAndIssues RI ON RI.ID = RV.RisksAndIssueId WHERE RI.IssueRiskCategory = 'Risk'",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many initiatives have Risks linked?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 88,
                            AnswerSQL = "SELECT SUM(ISNULL(HeadcountCostReductionEst,0)) [HeadCountCostReductionTarget] FROM [ValueCaptureTopDownEstimates] VT",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What is the total headcount cost reduction target?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 89,
                            AnswerSQL = "SELECT VI.Title [Non Active Initiaves] FROM ValueCaptureInitiatives VI WHERE ISNULL(VI.IsItemActive ,0) = 0",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List initiatives that are not active.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 90,
                            AnswerSQL = "SELECT COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages  VCS ON VCI.ValueCaptureStageId = VCS.ID WHERE VCS.Title = {ValueCaptureStage} ",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many initiatives have been realized?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 91,
                            AnswerSQL = "SELECT SUM(NonHeadcountCostReductionEst) + SUM(RevenueGrowthEstimate) + SUM(HeadcountCostReductionEst) 'Total Top Down Target Value' FROM ValueCaptureTopDownEstimates",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What is the Total Top Down Target Value?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 92,
                            AnswerSQL = "SELECT SUM(RevenueGrowthEstimate) RevenueGrowth,SUM(TotalCostReduction) CostReduction FROM ValueCaptureTopDownEstimates",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Show my top down target values by cost reduction and revenue growth.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 93,
                            AnswerSQL = "SELECT COUNT(ID) FROM ValueCaptureInitiatives WHERE IsItemActive = 1",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many active initatives are there in my project?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 94,
                            AnswerSQL = "SELECT PT.Title [Project Team] ,CAST(SUM(ISNULL(RevenueGrowthEstimate,0))/1000000 AS FLOAT) [Revenue Growth(in Million)] FROM [ValueCaptureTopDownEstimates] VT 	LEFT JOIN ProjectTeams PT ON PT.ID = VT.ProjectTeamId GROUP BY PT.Title",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What is the total of revenue growth by team?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 95,
                            AnswerSQL = "SELECT VC.Title AS [ValueCaptureInitiatives with no Owners] FROM ValueCaptureInitiatives VC WHERE ItemOwnerId IS NULL",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out initiatives with no owners assigned.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 96,
                            AnswerSQL = "SELECT VI.Title [Initiative with Workplan at Risk] FROM WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WTVI LEFT JOIN Workplan W ON W.ID = WTVI.WorkPlanId LEFT JOIN Statuses S ON S.ID = W.WorkPlanTaskStatusId LEFT JOIN ValueCaptureInitiatives VI on VI.ID = WTVI.ValueCaptureInitiativeId WHERE S.[KEY] = 'AT_RISK'",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List out initiatives that have at risk workplan task linked.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 97,
                            AnswerSQL = "SELECT VP.Title AS ValueCapturepriority, COUNT(VC.ValueCapturePriorityId) AS ValueCapturePriorityCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCapturePriorities VP ON VP.ID = VC.ValueCapturePriorityId where ValueCapturePriorityId is not null GROUP BY ValueCapturePriorityId, VP.Title",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Show me initiatives count by priority.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 98,
                            AnswerSQL = "SELECT UP.Title AS UserProfile, COUNT(VC.ID) AS ValueCaptureOwnerwiseCount FROM ValueCaptureInitiatives VC LEFT JOIN UserProfiles UP ON UP.ID = VC.ItemOwnerId WHERE ItemOwnerId IS NOT NULL GROUP BY ItemOwnerId, UP.Title",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Show me initiatives count by owner.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 99,
                            AnswerSQL = "SELECT VI.Title [Initiaves] FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Title = '{Username}'",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List initiatives where I'm assigned as the Owner.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 100,
                            AnswerSQL = "SELECT COUNT(VCI.ID) as IdentifiedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = 'Identified'",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many initiatives are identified?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 101,
                            AnswerSQL = "SELECT COUNT(VCI.ID) as ApprovedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = 'Approved' ",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many initiatives have been approved?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 102,
                            AnswerSQL = "SELECT COUNT(VCI.ID) as ValidatedInitiatives FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VCI.ValueCaptureStageId WHERE VCS.Title = 'Validated' ",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many initiatives have been validated?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 103,
                            AnswerSQL = "SELECT VCS.Title AS [Value Capture Stage] ,COUNT(VCI.ID) AS InitativesCount FROM ValueCaptureInitiatives VCI LEFT JOIN ValueCaptureStages VCS ON VCI.ValueCaptureStageId = VCS.ID GROUP BY VCS.Title",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Can you provide breakdown of the initiatives across various stages?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 104,
                            AnswerSQL = "SELECT VI.Title AS Initiatives FROM ValueCaptureInitiatives VI JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = '{Username}'",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What initatives have I been assigned to?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 105,
                            AnswerSQL = "SELECT VI.Title AS Initiatives, VS.Title ValueCaptureStage FROM ValueCaptureInitiatives VI JOIN ValueCaptureStages VS ON VI.ValueCaptureStageID = VS.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = '{Username}' ORDER BY ValueCaptureStage",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List my initatives by stages.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 106,
                            AnswerSQL = "SELECT VI.Title AS Initiatives, VT.Title ValueCaptureType FROM ValueCaptureInitiatives VI JOIN ValueCaptureTypes VT ON VI.ValueCaptureStageID = VT.ID JOIN UserProfiles UP ON VI.ItemOwnerId = UP.ID WHERE UP.Email = '{Username}' ORDER BY ValueCaptureType",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List my initatives by Value Capture Type.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 107,
                            AnswerSQL = "SELECT PT.Title,SUM(ISNULL(NonHeadcountCostReductionEst,0)) + SUM(ISNULL(RevenueGrowthEstimate,0)) + SUM(ISNULL(HeadcountCostReductionEst,0)) AS TotalTopDownTarget FROM ValueCaptureTopDownEstimates LEFT JOIN ProjectTeams PT ON PT.ID = ValueCaptureTopDownEstimates.Projectteamid GROUP BY PT.Title",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What is the top-down target for this project?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 108,
                            AnswerSQL = "SELECT VCS.Title AS ValueCaptureStage, COUNT(VC.ID) AS ValueCaptureStageCount FROM ValueCaptureInitiatives VC LEFT JOIN ValueCaptureStages VCS ON VCS.ID = VC.ValueCaptureStageId GROUP BY ValueCaptureStageId, VCS.Title",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Show me initiatives count by stage.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 109,
                            AnswerSQL = "SELECT F.Title as Functions, COUNT(VC.FunctionId) AS ValueCaptureFunction FROM ValueCaptureInitiatives VC LEFT JOIN Functions f ON f.ID = VC.FunctionId WHERE FunctionId IS NOT NULL GROUP BY FunctionId, F.Title ",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Show me initiatives count by function.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 110,
                            AnswerSQL = "SELECT DISTINCT     CC.Title AS [Cost/Revenue Centers linked to PnL Line Items], CC.Account FROM CostCenters CC     LEFT JOIN ValueCaptureFinancialLineItems Fin         ON CC.FinancialLineItemId = Fin.ID     LEFT JOIN ValueCaptureFinancialLineItemTypes FinType         ON Fin.FinancialLineItemTypeId = FinType.ID WHERE FinType.Title = 'PnL'",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all Cost/Revenue Centers linked to PnL Line Items.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 111,
                            AnswerSQL = "SELECT COUNT(ID) AS [Top Down targets #],        SUM(ISNULL(NonHeadcountCostReductionEst, 0)) AS [Total Non Headcount Cost Reduction Estimate],        SUM(ISNULL(RevenueGrowthEstimate, 0)) AS [Total Revenue Growth Estimate],        SUM(ISNULL(CostToAchieveEstimate, 0)) AS [Total Cost To Achieve Estimate],        SUM(ISNULL(HeadcountCostReductionEst, 0)) AS [Total Headcount Cost Reduction Estimate],        SUM(ISNULL(HeadcountCostReductionEst, 0)) + SUM(ISNULL(NonHeadcountCostReductionEst, 0))        + SUM(ISNULL(RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates ",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Can you provide Top Down Targets KPIs?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 112,
                            AnswerSQL = "SELECT  VCTT.Title, PT.Title, VCTT.CostToAchieveEstimate, VCTT.NonHeadcountCostReductionEst, VCTT.HeadcountCostReductionEst, VCTT.RevenueGrowthEstimate FROM   ValueCaptureTopDownEstimates VCTT  Left Join ProjectTeams PT on PT.ID = VCTT.ProjectTeamId",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many top down targets do we have for this project?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 113,
                            AnswerSQL = "SELECT SUM(ISNULL(HeadcountCostReductionEst,0)) AS HeadcountCostReduction FROM ValueCaptureTopDownEstimates",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What is the Total Headcount Cost Reduction Target?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 114,
                            AnswerSQL = "SELECT  SUM(ISNULL(NonHeadcountCostReductionEst,0)) AS NonHeadcountCostReduction FROM  ValueCaptureTopDownEstimates",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What is the Total Non Headcount Cost Reduction Target?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 115,
                            AnswerSQL = "SELECT  SUM(ISNULL(RevenueGrowthEstimate,0)) AS RevenueGrowth FROM  ValueCaptureTopDownEstimates",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What is the Total Revenue Growth Target?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 116,
                            AnswerSQL = "SELECT  SUM(ISNULL(CostToAchieveEstimate,0)) AS CostToAchive FROM  ValueCaptureTopDownEstimates",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What is the Total Cost to Achieve Target?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 117,
                            AnswerSQL = "SELECT  PT.Title ProjectTeams, VBM.Title Benchmark FROM  ValueCaptureCostBenchmarks VBM LEFT JOIN  ProjectTeams PT ON PT.ID = VBM.ProjectTeamId",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Are there any benchmarks for this project?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 118,
                            AnswerSQL = "SELECT Amount as [Client Baseline PnL Amount], A.FinancialLineItem as FinancialLineItem FROM( SELECT F.ID, F.Ordinal, F.Title FinancialLineItem , SUM(C.Amount)/1000000 Amount FROM ValueCaptureFinancialLineItems F LEFT JOIN CostCenters C ON C.FinancialLineItemId = F.ID  GROUP BY F.ID, F.Title, F.Ordinal ) A WHERE A.Amount IS NOT NULL",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What is my program Client Baseline PnL?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 119,
                            AnswerSQL = "SELECT     Title AS [Recommended Initiatives List] FROM     ValueCaptureRecommendedInitiatives",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all recommended initiatives for my program.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 120,
                            AnswerSQL = "SELECT 	SUM(a.[Total Top Down Target Value]) AS [Top Down Targets],      SUM(b.[Bottom Up Initiatives Value]) AS [Bottom Up Initiatives Value], 	( SUM(b.[Bottom Up Initiatives Value])-SUM(a.[Total Top Down Target Value])) AS Variance FROM ( SELECT   SUM(ISNULL(HeadcountCostReductionEst, 0)) + SUM(ISNULL(NonHeadcountCostReductionEst, 0))        + SUM(ISNULL(RevenueGrowthEstimate, 0)) AS [Total Top Down Target Value] FROM ValueCaptureTopDownEstimates) a, ( select SUM(Amount)*12 as [Bottom Up Initiatives Value]  FROM vwUnpivotEstimates where MYear='Y3M12' AND Recurring =1 ) b ",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Compare Top Down Targets vs Bottom Up Initiatives for my project.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 121,
                            AnswerSQL = "   SELECT ISNULL(SUM(Act.AMOUNT),0.0) AS [Cumulative One Time Cost Amount] 			   FROM vwUnpivotActuals Act 			   LEFT JOIN ValueCaptureImpactTypes VCIT ON Act.ValueCaptureImpactTypeID=VCIT.ID 			   LEFT JOIN ValueCaptureInitiatives VCI ON Act.ValueCaptureInitiativeID=VCI.ID 			   WHERE VCIT.PositiveOrNegativeValues='Negative' 			   AND Act.Recurring<>1 			   AND VCI.Title = ${ValueCaptureInitiative}",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What is cumulative one-time cost for all initiatives?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 122,
                            AnswerSQL = "  SELECT  	   WP.Title AS [Workplan Items Linked to Value Capture Initiatives]  	   FROM WorkPlan WP 	   LEFT JOIN WorkPlanToValueCaptureInitiativesForValueCaptureInitiativeIDs WPVC  	             ON WP.ID=WPVC.WorkPlanId 	   LEFT JOIN ValueCaptureInitiatives VCI  	             ON VCI.ID=WPVC.ValueCaptureInitiativeId",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all workplan items linked to VC initiatives.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 123,
                            AnswerSQL = "WITH EstimatedRunRates AS (     SELECT          E.ValueCaptureInitiativeId,  B.Title AS Initiative,          ISNULL(SUM(E.Amount),0) * 12 AS EstimatedAnnualizedRunRate     FROM          vwUnPivotEstimates E     JOIN          ValueCaptureInitiatives B ON E.ValueCaptureInitiativeId = B.ID     WHERE          E.Recurring = 1     GROUP BY          E.ValueCaptureInitiativeId, B.Title ), ActualRunRates AS (     SELECT          A.ValueCaptureInitiativeId, B.Title AS Initiative,          SUM(ISNULL(A.Amount, 0)) * 12 AS ActualAnnualizedRunRate     FROM          vwUnpivotActuals A     JOIN          ValueCaptureInitiatives B ON A.ValueCaptureInitiativeId = B.ID     WHERE          A.Recurring = 1      GROUP BY          A.ValueCaptureInitiativeId, B.Title )   SELECT Initiative AS [List of Initiatives with 10% differ between Estimate and Actual] FROM ( SELECT      E.ValueCaptureInitiativeId,E.Initiative,     E.EstimatedAnnualizedRunRate,     A.ActualAnnualizedRunRate,    IIF(E.EstimatedAnnualizedRunRate = 0 ,0 , (A.ActualAnnualizedRunRate - E.EstimatedAnnualizedRunRate) / E.EstimatedAnnualizedRunRate * 100) AS PercentageDifference FROM      EstimatedRunRates E JOIN      ActualRunRates A ON E.ValueCaptureInitiativeId = A.ValueCaptureInitiativeId ) A WHERE      PercentageDifference > 10",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List all initiatives that had an estimate annualized run-rate differed by more than 10% from the Actual annualized run-rate?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 124,
                            AnswerSQL = "SELECT     CONCAT('Tracking Period of the Program is from ', CAST(MIN(StartDt) AS DATE), ' to ', CAST(MAX(EndDt) AS DATE)) FROM     ValueCaptureTransactionMonths WHERE     IsItemActive = 1",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What's the tracking period for my project?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 125,
                            AnswerSQL = "SELECT  ISNULL(SUM(Act.Amount), 0.0) - ISNULL(SUM(Est.Amount), 0.0) AS Variance FROM (     SELECT SUM(Est.Amount) AS Amount     FROM vwUnpivotEstimates Est         LEFT JOIN ValueCaptureInitiatives VCI             ON Est.ValueCaptureInitiativeId = VCI.ID         LEFT JOIN ProjectTeams PT             ON VCI.ProjectTeamId = PT.ID     WHERE PT.Title = ${ProjectTeam}' ) Est     JOIN     (         SELECT SUM(Act.Amount) AS Amount         FROM vwUnpivotActuals Act             LEFT JOIN ValueCaptureInitiatives VCI                 ON Act.ValueCaptureInitiativeId = VCI.ID             LEFT JOIN ProjectTeams PT                 ON VCI.ProjectTeamId = PT.ID         WHERE PT.Title = ${ProjectTeam}     ) Act         ON 1 = 1",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What's the variance for Legal function?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 126,
                            AnswerSQL = "	SELECT   	    COUNT(VCI.ID) AS [Initiative Count for Selected Evaluator Quad]  		     FROM ValueCaptureInitiatives VCI 		LEFT JOIN VCInitiativeEvaluatorQuadInfo VCQ  		    ON VCI.VCInitiativeEvaluatorQuadInfoId=VCQ.ID 		       WHERE VCQ.Title= ${EvaluatorQuad}",
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Based on Evaluator comparison, how many initiatives have 'High Benefit, High Complexity'?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 127,
                            AnswerSQL = "SELECT D.Title, STRING_AGG(N.Title, ', ') AS NodeTitles FROM NodesToDispositionsForDispositionNew ND LEFT JOIN Nodes N ON N.ID = ND.NodeId LEFT JOIN Dispositions D ON D.ID = ND.DispositionId LEFT JOIN TransactionStates T on T.ID = N.TransactionStateId Where T.[Key] = 'DAY_ONE' GROUP BY D.Title ",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Provide a summary of Day 1 process dispositions.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 128,
                            AnswerSQL = "SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = 'CURRENT_STATE' ",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many systems are tagged to Current State processes?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 129,
                            AnswerSQL = "SELECT DISTINCT S.Title FROM NodesToSystemsForEnablerSystems NS LEFT JOIN Nodes N ON N.ID = NS.NodesId LEFT JOIN Systems S ON S.ID = NS.SystemsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = 'DAY_ONE' ",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many systems are tagged to Day 1 processes?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 130,
                            AnswerSQL = "SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = 'DAY_ONE' AND A.Title IS NOT NULL ",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many assets are tagged to Day 1 processes? ",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 131,
                            AnswerSQL = "SELECT DISTINCT A.Title FROM NodesToAssetsForEnablerAssets NA LEFT JOIN Nodes N ON N.ID = NA.NodesId LEFT JOIN Assets A ON A.ID = NA.AssetsId LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = 'CURRENT_STATE' AND A.Title IS NOT NULL ",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many assets are tagged to Current State processes? ",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 132,
                            AnswerSQL = "SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(Title) AS TotalCount, BusinessEntityId FROM Nodes WHERE NodeTypeId = 3 GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Can you provide me number of processes by op model?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 133,
                            AnswerSQL = "SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = 'CURRENT_STATE' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many processes we have in current state?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 134,
                            AnswerSQL = "SELECT Nodes.Title, a.TotalCount FROM ( SELECT COUNT(N.Title) AS TotalCount, BusinessEntityId FROM Nodes N LEFT JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE NodeTypeId = 3 AND T.[Key] = 'DAY_ONE' GROUP BY BusinessEntityId ) a INNER JOIN Nodes ON a.BusinessEntityId = Nodes.ID ",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many processes we have in Day1 state?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 135,
                            AnswerSQL = "SELECT COUNT(1) FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = 'CURRENT_STATE'  AND N.NodeTypeId = 3  AND N.ID NOT IN (   SELECT DISTINCT NTO.NodeId   FROM Nodes N1   LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null  )",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many processes don't have an Owner assigned in Current State?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 136,
                            AnswerSQL = "SELECT PR.ID 	,PR.Title FROM Nodes PR JOIN TransactionStates T ON T.ID = PR.TransactionStateId WHERE T.[Key] = 'DAY_ONE' 	AND PR.NodeTypeId = 3 	AND NOT EXISTS  				(SELECT 1 FROM [NodesToDispositionsForDispositionNew] D WHERE D.NodeId = PR.ID)",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List processes that don't have Disposition assigned in Day 1 state.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 137,
                            AnswerSQL = "SELECT Title FROM Dispositions",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List the Disposition options available.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 138,
                            AnswerSQL = "SELECT N.Title [ProcessGroup] ,COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) [Enablers Count] FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 2 GROUP BY N.Title ORDER BY [Enablers Count] DESC",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many enablers are associated with each Process Group?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 139,
                            AnswerSQL = "SELECT D.Title [Disposition] 	,COUNT(SD.SystemId) [SystemCount] FROM Dispositions D 	JOIN [SystemsToDispositionsForDispositionDay1New] SD ON SD.DispositionId = D.ID GROUP BY D.Title",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List the total number of systems by disposition.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 140,
                            AnswerSQL = " SELECT PR.Title [Process] , D.DispositionId FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId  	LEFT JOIN NodesToDispositionsForDispositionNew D ON D.NodeId = PR.ID WHERE PR.NodeTypeId = 3 	AND D.NodeId IS NULL 	AND S.[Key] = 'DAY_ONE'",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Can you please list down all Day 1 processes where no disposition has been tagged?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 141,
                            AnswerSQL = " SELECT 	N.Title [Process]	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] A ON A.NodesId = N.ID LEFT JOIN [NodesToFacilitiesForEnablerFacilities] F ON F.NodesId = N.ID LEFT JOIN [NodesToSystemsForEnablerSystems] S ON S.NodesId = N.ID LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] T ON T.NodesId = N.ID WHERE NodeTypeId = 3 GROUP BY N.Title HAVING COUNT(A.AssetsId) + COUNT(F.FacilitiesId) +COUNT(S.SystemsId) + COUNT(T.ThirdPartyAgreementsId) = 0",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Can you please list all processes with no Enablers?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 142,
                            AnswerSQL = "SELECT PR.Title as MissingInDay1 FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = 'CURRENT_STATE' EXCEPT SELECT 	PR.Title [Process] FROM Nodes PR 	JOIN TransactionStates S ON S.ID = PR.TransactionStateId WHERE PR.NodeTypeId = 3 	AND S.[Key] = 'DAY_ONE'",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Can you please compare the Current state & day 1 operating model and list all processes which are missing in Day1 as compared to current state?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 143,
                            AnswerSQL = "SELECT DISTINCT A.Title Enabler, 'Asset' as Category	 FROM Nodes N LEFT JOIN [NodesToAssetsForEnablerAssets] NA ON NA.NodesId = N.ID LEFT JOIN [Assets] A ON A.ID = NA.AssetsId WHERE A.Title IS NOT NULL UNION ALL SELECT DISTINCT F.Title Enabler, 'Facility' as Category FROM Nodes N LEFT JOIN [NodesToFacilitiesForEnablerFacilities] NF ON NF.NodesId = N.ID LEFT JOIN [Facilities] F ON F.ID = NF.FacilitiesId WHERE F.Title IS NOT NULL  UNION ALL SELECT DISTINCT S.Title Enabler , 'System' as Category FROM Nodes N LEFT JOIN [NodesToSystemsForEnablerSystems] NS ON NS.NodesId = N.ID LEFT JOIN [Systems] S ON S.ID = NS.SystemsId WHERE S.Title IS NOT NULL  UNION ALL SELECT DISTINCT T.Title Enabler	, 'TPA' as Category FROM Nodes N LEFT JOIN [NodesToThirdPartyAgreementsForEnablerTpa] NT ON NT.NodesId = N.ID LEFT JOIN [ThirdPartyAgreements] T ON T.ID = NT.ThirdPartyAgreementsId WHERE T.Title IS NOT NULL ",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What Enablers are we tracking for this project?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 144,
                            AnswerSQL = "SELECT Count(ID) AS [# Systems present in this functional OP model] FROM Systems",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many Systems are there in this functional op model?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 145,
                            AnswerSQL = "SELECT Count(ID) AS [# TPAs present in this functional OP model] FROM ThirdPartyAgreements",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many TPAs are there in this functional op model?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 146,
                            AnswerSQL = "SELECT ST.Title AS SystemType, COUNT(S.ID) [# Systems by Type] FROM Systems S LEFT JOIN SystemTypes ST ON ST.ID = S.TypeId WHERE S.TypeId IS NOT NULL GROUP BY ST.Title",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List the number of Systems by Type.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 147,
                            AnswerSQL = "SELECT O.Title AS Owners, Count(*) AS [# TPAs by Ownership] FROM ThirdPartyAgreements TP LEFT JOIN Owners O ON O.ID = TP.OwnerID WHERE TP.OwnerID IS NOT NULL GROUP BY O.Title",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List the number of TPAs by Ownership.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 148,
                            AnswerSQL = "SELECT Title [ProcessGroups With No Process] FROM Nodes WHERE nodetypeid = 2 AND ID NOT IN (SELECT NodeParentId FROM Nodes)",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List down all process groups with no process within them.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 149,
                            AnswerSQL = "SELECT COUNT(P.[ID]) AS [Number of Process across Op Model] FROM Nodes P     LEFT JOIN NodeTypes NType         ON P.NodeTypeId = NType.ID WHERE NType.Title = 'Process'",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List the number of processes across op models.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 150,
                            AnswerSQL = "SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog WHERE Modified >= DATEADD(hh, -1, GETDATE())",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List history of changes to the op model in the past one hour.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 151,
                            AnswerSQL = "SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog WHERE FieldImpacted = 'Owner'       AND CAST(Modified AS DATE) = CAST(GETDATE() AS DATE)",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List the history of changes to Ownership in the op model today.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 152,
                            AnswerSQL = "SELECT [Object],        Details,        FieldImpacted,        OldValue AS [Old Value],        NewValue AS [New Value],        [Title] AS [Activity] FROM OperatingModelActivityLog WHERE Title = 'Deleted'       AND DATEPART(wk, CAST(Modified AS DATE)) = DATEPART(wk, CAST(GETDATE() AS DATE))       AND YEAR(Modified) = YEAR(GETDATE())",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List the history of deletes in the op model this week.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 153,
                            AnswerSQL = "SELECT T.Title [State], N.Title AS OperatingModel FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId  WHERE N.NodeTypeId = 1",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List the functional operating models across different states.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 154,
                            AnswerSQL = "SELECT N.Title Opmodel, L.Title LiveNote, Note FROM OperatingModelLiveNotes L LEFT JOIN Nodes N ON N.Id = L.NodeId",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Are there any Live Notes in this op model?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 155,
                            AnswerSQL = "SELECT DISTINCT N.Title Process FROM OperatingModelActivityLog OL  LEFT JOIN Nodes N ON N.ID = Ol.ObjectID WHERE OL.Title = 'Updated' AND Object = 'Process' AND (CAST(OL.Modified AS DATE) BETWEEN DATEADD(DAY, -7, CAST(GETDATE()AS DATE))  AND CAST(GETDATE() AS DATE))",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List down all processes which were updated since last 1 week?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 156,
                            AnswerSQL = "SELECT DISTINCT N.Title Process, OldValue, NewValue  FROM OperatingModelActivityLog PL  LEFT JOIN Nodes N ON N.ID = PL.ObjectID  WHERE Object = 'Process' AND PL.Title = 'Updated' AND FieldImpacted = 'Title' AND N.TransactionStateId = 6",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List down all processes which have been renamed in Day 1 op model.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 157,
                            AnswerSQL = "SELECT TOP 5     S.Title AS [Systems],     Count(NSS.NodesID) AS [ProcessCount] FROM Nodes N     LEFT JOIN [dbo].[NodesToSystemsForEnablerSystems] NSS         ON N.ID = NSS.NodesId     LEFT JOIN [dbo].[Systems] S         ON NSS.SystemsId = S.ID WHERE N.NodeTypeId = 3 GROUP BY S.Title ORDER BY Count(NSS.NodesID) DESC",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Please provide top 5 systems that are linked to various processes",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 158,
                            AnswerSQL = "SELECT N.Title [List of processes for CurrentState where ownership is not present] FROM Nodes N JOIN TransactionStates T ON T.ID = N.TransactionStateId WHERE T.[Key] = 'CURRENT_STATE'   AND N.NodeTypeId = 3   AND N.ID NOT IN (     SELECT DISTINCT NTO.NodeId     FROM Nodes N1     LEFT JOIN NodesToOwnersForOwnerNew NTO ON NTO.NodeId = N1.ID 	where NTO.NodeId is not null   )",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "For Current State, list all processes that doesn't have any ownership.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 159,
                            AnswerSQL = " SELECT     PR.Title [Process] FROM     Nodes                                    PR     JOIN         TransactionStates                    S             ON S.ID = PR.TransactionStateId     LEFT JOIN         NodesToDispositionsForDispositionNew D             ON D.NodeId = PR.ID WHERE     PR.NodeTypeId = 3     AND D.NodeId IS NULL     AND S.[Key] = 'DAY_ONE'",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "For Day 1 Operating Models, list all processes that doesn't have any dispositions.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 160,
                            AnswerSQL = ";WITH GetSelectedFunction AS (SELECT id,            Title,            NodeParentID,            NodeTypeId,            HierId = 1     FROM Nodes     WHERE NodeParentID IS NULL     UNION ALL     SELECT Nodes.id,            Nodes.Title,            Nodes.NodeParentID,            Nodes.NodeTypeId,            HierId = HierId + 1     FROM Nodes,          GetSelectedFunction     where Nodes.NodeParentID = GetSelectedFunction.id    ),       PG_Hierarchy ([Functions], NodeParentID, ID, Title, Parent, ParentID, NodeTypeId) AS (SELECT ROOT.Title [Functions],            ROOT.NodeParentID,            ROOT.id,            ROOT.Title,            ROOT.Title,            ROOT.ID AS ParentID,            ROOT.NodeTypeId     FROM GetSelectedFunction ROOT     WHERE HierId = 2     UNION ALL     SELECT PARENT.[Functions],            CHILD.NodeParentID,            CHILD.ID,            CHILD.Title,            PARENT.TITLE,            PARENT.ID,            CHILD.NodeTypeId     FROM PG_Hierarchy PARENT,          Nodes CHILD     where PARENT.id = CHILD.NodeParentID    )  ,       --SELECT * FROM PG_Hierarchy         ProcessCTE AS (SELECT DISTINCT         P.Functions,         P.Title Processes,         P.ID     FROM     (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 2) SF         LEFT JOIN         (SELECT * FROM PG_Hierarchy WHERE NodeTypeId = 3) P             ON P.NodeParentID = SF.ID     WHERE P.Title IS NOT NULL    ) SELECT TOP 1     Functions AS [Function with highest number of processes] FROM (     SELECT Functions,            COUNT(ID) as [Process Count]     FROM ProcessCTE     GROUP BY Functions ) A order by [Process Count] desc    ",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Which function has the highest number of processes?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 161,
                            AnswerSQL = "SELECT     N.Title AS [List of Processes with Disposition as TSA] FROM   Nodes   N   LEFT JOIN     NodesToDispositionsForDispositionNew NTD             ON NTD.NodeId = N.ID     LEFT JOIN         Dispositions                         D             ON NTD.DispositionId = D.ID WHERE     D.Title = 'TSA'     AND N.NodeTypeId = 3 -- To get the list of Processes",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List down all Processes which have their disposition set as TSA.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 162,
                            AnswerSQL = "SELECT       N.Title as [List of Processes with No Disposition] FROM Nodes N          WHERE N.NodeTypeId=3  		  AND N.ID NOT IN  		             (SELECT NodeId FROM NodesToDispositionsForDispositionNew)",
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List down all processes with no Disposition assigned.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 163,
                            AnswerSQL = "SELECT F.Title, Count(1) as 'Number Of TSAs' from TSAItems T LEFT JOIN Functions F on F.ID = T.FunctionId Group By F.ID, F.Title ",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Show me the count of TSAs by function.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 164,
                            AnswerSQL = "SELECT SF.Title, Count(1) as 'Number Of TSAs' from TSAItems T LEFT JOIN SubFunctions SF on SF.ID = T.SubFunctionId where T.SubFunctionId IS NOT NULL Group By SF.ID, SF.Title ",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Show me the count of TSAs by sub function.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 165,
                            AnswerSQL = "SELECT LE.Title, Count(1) as 'Number Of TSAs' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ProviderLegalEntityId Group By LE.ID, LE.Title ",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Give me the list of TSAs by Provider.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 166,
                            AnswerSQL = "SELECT LE.Title, Count(1) as 'Number Of TSAs' from TSAItems T LEFT JOIN LegalEntities LE on LE.ID = T.ReceiverLegalEntityId Group By LE.ID, LE.Title ",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Give me the list of TSAs by Receiver.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 167,
                            AnswerSQL = "SELECT P.Title, T.Title from TSAItems T LEFT JOIN TSAPhases P on P.ID = T.PhaseId Group By P.ID, P.Title ",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Can you provide me list of TSAs by phases?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 168,
                            AnswerSQL = "SELECT T.Title, T.Duration as 'Duration in Month' from TSAItems T where T.Duration is not null ",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "Show me the breakdown of TSAs by duration.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 169,
                            AnswerSQL = "SELECT PT.Title, Count(1) as 'Number Of TSAs' from TSAItems T LEFT JOIN ProjectTeams PT on PT.ID = T.ProjectTeamId Group by PT.ID, PT.Title ",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many TSAs does each team have?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 170,
                            AnswerSQL = "SELECT    TST.Title as [Phase],    COUNT(TC.ID) AS [# TSAs across different phases] FROM    TSAItems TC    LEFT JOIN TSAPhases TST ON TC.PhaseID = TST.ID  Group BY    TST.Title ",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List the number of TSAs across different phases.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 171,
                            AnswerSQL = "SELECT    T.Title PendingTSAItems  FROM    TSAItems T    JOIN TSAStatuses TS ON T.TSAItemTSAStatusId = TS.ID  WHERE    T.AuthorId = ${Useremail}    AND TS.[key] = 'ACTIVE' ",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many pending TSA items do I have?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 172,
                            AnswerSQL = "SELECT    Title as [Billing Period Name],    DeadlineDate as [Contribution Deadlines]  FROM    TSABillingPeriods ",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "In Cost Tracking, how is my billing periods setup?",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 173,
                            AnswerSQL = " SELECT    Title AS [TSA Phases]  FROM TSAPhases",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What are the different TSA phases in my project?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 174,
                            AnswerSQL = "SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ProviderLegalEntityId = L.ID where  L.ServiceLocation is not null UNION  SELECT    L.ServiceLocation  FROM    TSAItems T    JOIN LegalEntities L ON T.ReceiverLegalEntityId = L.ID   where  L.ServiceLocation is not null ",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List the TSA service locations in my project.",
                            UpdatedBy = "System",
                            VisibleToAssistant = false
                        },
                        new
                        {
                            ID = 175,
                            AnswerSQL = "SELECT     TSA.Title AS [TSAs],     s.Title   AS [TSA Statuses] FROM     TSAItems        TSA     LEFT JOIN         TSAStatuses S             ON TSA.TSAItemTSAStatusId = S.ID     LEFT JOIN         Functions   F             ON TSA.FunctionId = F.ID WHERE     F.Title = ${FunctionName}",
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "List the TSAs for the Finance fucntion with their status.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 176,
                            AnswerSQL = "SELECT PT.Title as Team, TT.Title as 'Type'  from ProjectTeams PT LEFT JOIN TeamTypes TT on TT.ID = PT.TeamTypeId where TT.[Key] != 'CAPITAL_EDGE_SUPPORT' order by TT.Title ",
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "What are the project teams that make up the governance structure for this engagement?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 177,
                            AnswerSQL = "SELECT pt.Title, COUNT(wp.WorkPlanTaskType) AS MilestoneCount FROM WorkPlan wp LEFT JOIN ProjectTeams pt ON pt.ID = wp.ProjectTeamId WHERE wp.WorkPlanTaskType = 'Milestone' GROUP BY pt.Title ",
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many milestones does each team have?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 178,
                            AnswerSQL = "SELECT      ReceiverTeam.Title AS ReceiverTeamName,     COUNT(1) AS InterdependencyCount FROM      Interdependencies AS I INNER JOIN      ProjectTeams AS ReceiverTeam ON I.ReceiverProjectTeamId = ReceiverTeam.ID GROUP BY      ReceiverTeam.Title ",
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many interdependencies does each team have?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 179,
                            AnswerSQL = "SELECT pt.Title, COUNT(1) AS RiskCount FROM RisksAndIssues RI left join ProjectTeams pt on pt.ID = ri.ProjectTeamId WHERE IssueRiskCategory = 'Risk' GROUP BY pt.Title ",
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "project-data",
                            SuggestionText = "How many risks does each team have?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 180,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What PMO workplan templates are available?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 181,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What are the best practices to run weekly status meetings with the client?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 182,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What is the difference between Progress and Calculated Status?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 183,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "How do you add a new field to the workplan?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 184,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "How do I set alerts/send email for various item owners?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 185,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "How do I add a client user to the PMO app?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 186,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "How do I link a Workplan Task to RAID?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 187,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "Provide case studies/credentials for similar deals that EY has supported in the past.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 188,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "Help me understand PMO methodology for this {ProjectType} project.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 189,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What cost savings levers are available?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 190,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What revenue growth levers are available?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 191,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What are typical one-time costs that we should be considering?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 192,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What are the IT cost savings levers that I should be thinking about?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 193,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What are the one-time costs I should be expecting to incur for Supply Chain related initiatives?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 194,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "How do we evaluate our initiatives against one another to create an objective prioritization of what should be done first?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 195,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "Provide case studies/credentials for similar deals that EY have supported in the past.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 196,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "Help understand VC methodology.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 197,
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What normative operating models are available?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 198,
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "How can I upload systems in bulk to the Op Model app?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 199,
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What are the steps to setup the Op Model app?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 200,
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What reports are available in the Op Model app?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 201,
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "Provide case studies/credentials for similar deals that EY has supported in the past.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 202,
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What TSAs would you suggest?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 203,
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What are examples for TSAs?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 204,
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "Why are TSAs important?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 205,
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "Provide case studies/credentials for similar deals that EY have supported in the past.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 206,
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What PMO workplan templates are available?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 207,
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "What are the best practices to run weekly status meetings with the client?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 208,
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "How do you add a new field to the workplan?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 209,
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "How do I link a Workplan Task to RAID?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 210,
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "ey-guidance",
                            SuggestionText = "Help me understand PMO methodology for this {ProjectType} project.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 211,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "Generate a basic workplan template for my project.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 212,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the key risks for a {ProjectType} project?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 213,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the key milestones for a {ProjectType} project?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 214,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the best practices to run weekly status meetings?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 215,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are some of the similar deals that have happened in the past?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 216,
                            AppAffinity = "CE4-PMO",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the best practices to build workplan, and track dependencies?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 217,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the best cost saving initiatives?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 218,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the best revenue growth initiatives?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 219,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the best strategies for improving a company in the {Sector} sector?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 220,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are recent examples of improvements being made in the {Sector} sector?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 221,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the best ways to track actuals?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 222,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What should be the frequency of tracking dollar values during the engagement?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 223,
                            AppAffinity = "CE4-VC",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are typical implications for cross border deals?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 224,
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What is a normative operating model for the {Sector} sector?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 225,
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are key considerations when defining an operating model for a {Sector} sector company?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 226,
                            AppAffinity = "CE4-OM",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are examples of Day 1 process dispositions?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 227,
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the corporate functions typically involved in the {Sector} sector?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 228,
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the typical services of the Sales and Marketing function?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 229,
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "Draft a TSA for the Groceries Retail sector, Merchandising and Product Management function, and Endcap and Display Management service.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 230,
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "Provides templates of TSA.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 231,
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What should be the typical duration for TSA?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 232,
                            AppAffinity = "CE4-TSA",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "Things I should keep in mind for longer duration TSAs?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 233,
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "Generate a basic workplan template for my project.",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 234,
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the key risks for a {ProjectType} project?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 235,
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the key milestones for a {ProjectType} project?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 236,
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the best practices to run weekly status meetings?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        },
                        new
                        {
                            ID = 237,
                            AppAffinity = "PROJECT_LEVEL",
                            CreatedBy = "System",
                            Source = "internet",
                            SuggestionText = "What are the best practices to build workplan, and track dependencies?",
                            UpdatedBy = "System",
                            VisibleToAssistant = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
